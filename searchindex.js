Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_container", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/searching/argmax", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/searching/argmax", "data_classes/container/searching/static_argmax", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_docstrings", "deep_dive/12_docstring_examples", "deep_dive/13_array_api_tests", "deep_dive/14_ivy_tests", "deep_dive/15_ivy_frontends", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/to_container_and_back", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "searching", "searching/argmax", "searching/argmin", "searching/nonzero", "searching/where", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_container.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/searching/argmax.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/searching/argmax.rst", "data_classes/container/searching/static_argmax.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_docstrings.rst", "deep_dive/12_docstring_examples.rst", "deep_dive/13_array_api_tests.rst", "deep_dive/14_ivy_tests.rst", "deep_dive/15_ivy_frontends.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional.rst", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/to_container_and_back.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "searching.rst", "searching/argmax.rst", "searching/argmin.rst", "searching/nonzero.rst", "searching/where.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_container", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "argmax", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "argmax", "static_argmax", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "ivy.execute_with_gradients", "ivy.Container.static_execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "to_container_and_back", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Searching", "argmax", "argmin", "nonzero", "where", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 132, 133, 134, 135, 139, 140, 142, 143, 144, 154, 155, 156, 276, 327, 330, 369, 371, 686, 693, 731, 737, 771, 773, 775, 777, 811, 983, 985, 995, 1019, 1022, 1100, 1107, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 173, 178, 183, 188, 193, 198, 203, 204, 205, 206, 207, 210, 214, 215, 220, 223, 228, 229, 234, 237, 240, 245, 250, 253, 258, 263, 268, 271, 276, 281, 282, 283, 288, 293, 298, 303, 304, 305, 308, 309, 310, 315, 316, 321, 324, 327, 332, 333, 338, 343, 348, 353, 354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 398, 399, 400, 401, 402, 403, 408, 413, 418, 423, 428, 433, 438, 443, 448, 453, 458, 463, 468, 473, 478, 483, 488, 493, 498, 503, 508, 513, 518, 523, 528, 533, 538, 543, 548, 553, 558, 563, 568, 573, 578, 583, 588, 593, 598, 603, 608, 609, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 680, 681, 686, 687, 692, 693, 694, 695, 696, 697, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 765, 766, 767, 768, 769, 770, 771, 773, 778, 782, 785, 789, 794, 798, 802, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 825, 826, 827, 828, 829, 830, 831, 836, 839, 842, 845, 848, 851, 854, 858, 861, 862, 865, 868, 871, 874, 877, 878, 881, 884, 887, 890, 893, 896, 899, 902, 903, 908, 913, 918, 919, 924, 928, 932, 936, 940, 944, 949, 953, 958, 959, 963, 967, 971, 975, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1007, 1008, 1009, 1012, 1013, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1030, 1035, 1040, 1045, 1046, 1051, 1056, 1057, 1061, 1065, 1069, 1073, 1077, 1081, 1085, 1089, 1090, 1095, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1100], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 72, 73, 74, 77, 78, 79, 80, 119, 120, 127, 128, 129, 130, 132, 136, 137, 139, 140, 142, 144, 155, 156, 686, 738, 1007, 1008, 1012, 1100, 1113, 1114, 1115, 1116, 1117, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1150], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 132, 133, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153], "base": [0, 19, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 127, 131, 133, 139, 155, 206, 237, 238, 239, 276, 369, 371, 402, 508, 511, 563, 566, 568, 569, 570, 571, 572, 573, 576, 578, 579, 580, 581, 582, 630, 631, 633, 686, 721, 745, 754, 771, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1057, 1060, 1113, 1114, 1115, 1118, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "object": [0, 74, 77, 78, 79, 80, 127, 141, 144, 206, 223, 226, 276, 316, 319, 369, 393, 397, 771, 983, 986, 988, 990, 991, 992, 997, 998, 999, 1000, 1007, 1018, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1139, 1140], "__init__": [0, 1, 4, 5, 23, 26, 27, 28, 74, 77, 78, 79, 80, 122, 130, 134, 139, 141, 142, 143, 144, 276, 277, 278, 279, 280, 369, 370, 371, 771, 772, 1007, 1008, 1012, 1100, 1113, 1114, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "choose_random_backend": 0, "exclud": [0, 2, 125, 139, 206, 207, 208, 1007, 1013, 1015], "none": [0, 2, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 125, 127, 128, 129, 133, 134, 135, 136, 137, 139, 141, 143, 144, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 300, 302, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 318, 319, 320, 321, 323, 324, 326, 327, 329, 330, 331, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 354, 356, 358, 368, 369, 374, 375, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 698, 699, 700, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 725, 727, 728, 732, 738, 740, 743, 744, 745, 746, 747, 749, 753, 754, 760, 761, 763, 766, 767, 768, 771, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 877, 878, 879, 880, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 989, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1035, 1036, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1111, 1116, 1117, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150], "clear_backend_stack": 0, "current_backend": [0, 23, 26, 27, 74, 79, 80, 122, 129], "arg": [0, 4, 21, 23, 26, 27, 29, 30, 31, 32, 77, 78, 139, 141, 143, 369, 392, 686, 744, 1116, 1117, 1139, 1140], "kwarg": [0, 4, 23, 26, 27, 29, 30, 31, 32, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 139, 141, 143, 686, 737, 1116, 1117, 1139, 1140], "return": [0, 4, 5, 12, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 363, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 749, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 781, 782, 783, 785, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 800, 801, 802, 803, 804, 805, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 989, 993, 994, 995, 996, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1116, 1117, 1127, 1136, 1137, 1143, 1147], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 23, 26, 27, 74, 77, 78, 79, 80, 129, 133, 135, 139, 144, 155, 156, 276, 309, 321, 322, 324, 325, 332, 367, 368, 369, 381, 382, 386, 388, 686, 720, 723, 728, 732, 739, 741, 752, 771, 812, 983, 984, 993, 994, 1100], "prioriti": [0, 4, 19, 77, 78, 136], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 29, 31, 32, 33, 34, 74, 77, 78, 79, 80, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 137, 139, 141, 142, 203, 204, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 354, 357, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 692, 693, 697, 707, 714, 737, 744, 813, 816, 820, 823, 829, 830, 831, 834, 842, 844, 918, 953, 956, 983, 989, 1001, 1002, 1005, 1019, 1020, 1024, 1030, 1034, 1056, 1061, 1064, 1081, 1084, 1089, 1090, 1093, 1103, 1105, 1107, 1108, 1116, 1117, 1139, 1140], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 33, 34, 35, 36, 77, 78, 121, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 155, 156, 205, 206, 240, 243, 258, 260, 262, 263, 265, 267, 276, 321, 322, 324, 325, 369, 375, 391, 402, 635, 638, 686, 695, 771, 778, 780, 785, 787, 794, 796, 802, 804, 830, 881, 883, 884, 886, 983, 989, 995, 1056, 1077, 1080, 1085, 1088, 1100, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150], "paramet": [0, 4, 5, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 119, 120, 122, 124, 127, 141, 142, 155, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 281, 282, 283, 286, 288, 291, 293, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 313, 315, 316, 319, 321, 322, 324, 325, 327, 330, 332, 333, 336, 338, 341, 343, 346, 348, 351, 353, 354, 357, 359, 360, 361, 362, 363, 368, 369, 372, 373, 374, 375, 376, 379, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 743, 744, 745, 746, 748, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1116, 1117, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 49, 50, 70, 71, 72, 73, 74, 77, 78, 79, 80, 83, 84, 89, 90, 95, 96, 105, 106, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 155, 156, 206, 207, 208, 210, 211, 212, 215, 216, 218, 223, 226, 228, 229, 230, 232, 240, 243, 245, 246, 248, 253, 254, 256, 271, 273, 275, 276, 298, 299, 300, 301, 302, 354, 357, 369, 375, 382, 386, 391, 392, 402, 528, 531, 660, 663, 686, 707, 714, 715, 716, 717, 718, 719, 758, 771, 778, 780, 794, 796, 813, 820, 821, 822, 823, 824, 825, 828, 830, 842, 844, 881, 883, 893, 895, 918, 936, 939, 949, 952, 959, 962, 979, 980, 981, 982, 983, 985, 995, 996, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1019, 1023, 1024, 1025, 1029, 1035, 1039, 1056, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1106, 1107, 1111, 1116, 1117, 1127, 1135, 1138, 1143, 1144, 1145, 1146, 1147, 1148], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 35, 36, 37, 38, 43, 44, 53, 54, 55, 56, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 155, 156, 167, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 228, 229, 230, 232, 234, 235, 237, 238, 245, 246, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 298, 299, 300, 301, 302, 303, 310, 313, 316, 319, 327, 330, 332, 368, 369, 376, 379, 382, 386, 388, 390, 391, 392, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 638, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 692, 704, 705, 707, 714, 715, 716, 717, 718, 719, 720, 727, 731, 739, 740, 741, 743, 744, 760, 761, 763, 769, 771, 778, 780, 782, 783, 785, 787, 789, 791, 793, 794, 796, 798, 800, 802, 804, 807, 810, 811, 813, 828, 830, 831, 833, 835, 836, 838, 842, 844, 858, 860, 878, 880, 881, 883, 893, 895, 896, 898, 902, 903, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 923, 924, 927, 936, 939, 944, 947, 953, 954, 955, 956, 957, 958, 963, 966, 983, 988, 989, 990, 991, 996, 997, 998, 999, 1000, 1002, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1033, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1116, 1117, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 77, 78, 132, 133, 137, 141, 156, 686, 766, 1100], "infer": [0, 4, 35, 36, 121, 130, 134, 135, 139, 144, 203, 204, 206, 207, 208, 210, 211, 212, 215, 216, 218, 228, 229, 230, 232, 245, 246, 248, 253, 254, 256, 271, 273, 275, 276, 309, 402, 528, 531, 686, 724, 751, 918, 949, 952], "when": [0, 4, 14, 15, 18, 19, 20, 53, 54, 74, 77, 78, 79, 80, 99, 100, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 144, 156, 276, 283, 286, 402, 418, 421, 513, 516, 630, 633, 686, 697, 731, 754, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 983, 994, 1019, 1020, 1021, 1023, 1056, 1061, 1064, 1069, 1072, 1077, 1080, 1085, 1088, 1100, 1107, 1108, 1109, 1111, 1139, 1140], "global": [0, 4, 5, 6, 12, 57, 58, 74, 77, 78, 79, 80, 103, 104, 129, 130, 134, 135, 139, 276, 304, 305, 306, 308, 309, 369, 390, 391, 392, 686, 721, 722, 742, 745, 746, 748, 753, 754, 771, 812, 1001, 1002, 1003, 1004, 1005, 1006, 1141, 1142], "set": [0, 4, 5, 6, 12, 14, 17, 19, 29, 33, 34, 43, 44, 45, 46, 65, 77, 78, 89, 90, 91, 92, 112, 121, 122, 127, 128, 129, 131, 132, 133, 134, 135, 136, 139, 141, 142, 276, 309, 359, 362, 369, 375, 389, 390, 391, 392, 402, 438, 441, 686, 687, 688, 689, 690, 691, 745, 746, 747, 748, 749, 750, 771, 778, 780, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 830, 836, 838, 858, 860, 862, 864, 871, 873, 878, 880, 983, 984, 993, 994, 995, 999, 1000, 1007, 1017, 1019, 1020, 1025, 1029, 1030, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1077, 1080, 1085, 1088, 1107, 1108, 1127, 1136, 1143, 1144, 1145, 1146, 1147, 1148], "ret": [0, 4, 5, 12, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 122, 124, 128, 139, 144, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 281, 282, 283, 286, 288, 291, 293, 296, 298, 299, 300, 301, 302, 303, 310, 313, 315, 316, 319, 321, 322, 324, 325, 327, 330, 332, 333, 336, 338, 341, 343, 346, 348, 351, 353, 354, 357, 368, 369, 372, 373, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 743, 744, 751, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 989, 993, 994, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1116, 1117, 1143, 1147], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 119, 120, 121, 122, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 156, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 228, 229, 232, 240, 243, 250, 251, 253, 256, 268, 270, 271, 275, 276, 283, 286, 298, 299, 300, 301, 302, 309, 310, 313, 316, 319, 321, 322, 324, 325, 327, 330, 343, 346, 348, 351, 359, 362, 367, 368, 369, 375, 376, 379, 381, 382, 383, 384, 385, 386, 389, 390, 391, 393, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 491, 493, 494, 495, 496, 497, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 691, 694, 695, 703, 704, 711, 714, 715, 716, 717, 718, 719, 722, 723, 734, 736, 747, 749, 751, 752, 758, 760, 761, 762, 763, 764, 765, 767, 768, 771, 773, 774, 775, 776, 777, 789, 790, 791, 792, 793, 812, 813, 814, 816, 818, 819, 820, 821, 822, 823, 824, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 851, 853, 862, 864, 868, 870, 881, 883, 887, 889, 890, 892, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 932, 935, 936, 939, 944, 945, 946, 947, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 970, 983, 986, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1077, 1080, 1081, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1111], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 29, 33, 34, 35, 36, 51, 52, 53, 54, 55, 56, 64, 65, 70, 71, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 144, 156, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 206, 207, 208, 214, 215, 216, 218, 220, 221, 228, 229, 230, 232, 240, 243, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 293, 296, 298, 300, 302, 309, 354, 357, 369, 375, 391, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 607, 610, 612, 613, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 679, 680, 681, 682, 684, 685, 686, 687, 689, 691, 715, 717, 719, 731, 760, 761, 763, 771, 778, 780, 785, 787, 789, 791, 793, 794, 796, 798, 800, 802, 804, 812, 830, 831, 832, 833, 834, 835, 836, 838, 858, 860, 862, 864, 871, 873, 874, 876, 878, 880, 881, 883, 893, 895, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 923, 932, 935, 936, 939, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 979, 980, 981, 983, 995, 996, 1002, 1004, 1006, 1007, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1110], "import": [0, 4, 15, 19, 20, 72, 73, 119, 120, 122, 124, 125, 128, 130, 132, 133, 134, 135, 136, 137, 139, 141, 142, 144, 156, 369, 389, 390, 1100, 1106], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 43, 44, 77, 78, 89, 90, 123, 127, 128, 130, 134, 135, 136, 139, 141, 144, 686, 760, 761, 762, 763, 764, 1056, 1057, 1060, 1100], "np": [0, 4, 123, 127, 132, 134, 135, 136, 141, 142, 144, 402, 543, 546, 1100], "x": [0, 4, 12, 21, 23, 24, 25, 26, 27, 29, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 122, 123, 124, 125, 127, 128, 129, 130, 133, 136, 137, 139, 141, 142, 143, 144, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 210, 212, 213, 215, 218, 219, 223, 226, 227, 229, 232, 233, 240, 243, 245, 248, 249, 253, 256, 257, 258, 259, 262, 263, 264, 267, 268, 270, 271, 272, 275, 276, 283, 286, 287, 293, 296, 297, 298, 299, 300, 301, 302, 309, 310, 313, 314, 316, 319, 327, 330, 343, 346, 369, 375, 376, 379, 380, 382, 386, 391, 393, 394, 397, 398, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 451, 453, 456, 457, 463, 464, 465, 466, 467, 473, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 503, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 528, 531, 533, 536, 538, 541, 542, 543, 546, 547, 548, 551, 552, 553, 556, 558, 561, 563, 566, 567, 568, 571, 572, 573, 576, 577, 578, 581, 582, 593, 596, 597, 608, 609, 615, 618, 619, 625, 628, 629, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 664, 665, 668, 669, 675, 676, 677, 678, 679, 680, 681, 682, 685, 686, 694, 695, 696, 698, 699, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 724, 726, 727, 729, 730, 731, 733, 734, 735, 736, 740, 751, 755, 758, 760, 761, 762, 763, 764, 765, 769, 770, 771, 782, 783, 789, 790, 791, 792, 793, 807, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 858, 860, 861, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 881, 883, 884, 886, 887, 889, 890, 892, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 945, 946, 947, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 983, 984, 986, 989, 993, 994, 995, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1044, 1045, 1046, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1110, 1111, 1127, 1138], "arrai": [0, 4, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 156, 157, 165, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 205, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 242, 243, 244, 245, 248, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 283, 286, 288, 290, 291, 292, 293, 296, 298, 300, 301, 302, 309, 310, 313, 316, 319, 327, 330, 333, 336, 338, 341, 343, 346, 348, 351, 354, 357, 363, 369, 375, 376, 379, 382, 386, 388, 392, 393, 397, 402, 403, 405, 406, 407, 408, 411, 412, 413, 416, 417, 418, 420, 421, 422, 423, 426, 427, 428, 430, 431, 432, 433, 436, 437, 438, 440, 441, 442, 443, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 592, 593, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 618, 619, 620, 622, 623, 624, 625, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 663, 664, 665, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 685, 686, 687, 689, 690, 691, 694, 695, 696, 698, 699, 701, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 724, 726, 727, 728, 729, 730, 731, 733, 734, 736, 739, 740, 741, 743, 744, 749, 751, 755, 758, 760, 761, 763, 764, 765, 768, 769, 770, 771, 773, 775, 776, 777, 778, 780, 785, 787, 789, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 861, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 905, 906, 907, 908, 910, 911, 912, 913, 915, 916, 917, 918, 919, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 946, 947, 948, 949, 952, 953, 955, 956, 957, 958, 959, 961, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 980, 981, 982, 983, 985, 986, 995, 996, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1033, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1127, 1135, 1138], "2": [0, 4, 18, 19, 21, 23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 123, 125, 127, 130, 133, 138, 139, 141, 142, 143, 144, 156, 167, 173, 174, 175, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 191, 198, 199, 200, 201, 202, 205, 206, 228, 229, 232, 240, 243, 250, 251, 253, 256, 271, 275, 276, 283, 286, 298, 299, 300, 301, 302, 310, 313, 316, 319, 343, 346, 369, 375, 376, 379, 381, 382, 384, 386, 390, 393, 397, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 430, 431, 432, 433, 436, 438, 439, 440, 441, 442, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 486, 488, 491, 493, 494, 495, 496, 497, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 578, 579, 580, 581, 582, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 694, 695, 698, 699, 701, 704, 711, 714, 715, 716, 717, 718, 719, 734, 736, 751, 758, 771, 773, 774, 775, 776, 777, 789, 790, 791, 792, 793, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 851, 853, 854, 857, 858, 860, 862, 864, 868, 870, 871, 873, 874, 876, 881, 883, 887, 888, 889, 890, 892, 896, 897, 898, 902, 903, 904, 905, 906, 907, 908, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 932, 935, 936, 939, 944, 945, 946, 947, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 967, 970, 983, 986, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1073, 1076, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1111], "0": [0, 4, 19, 23, 24, 25, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 122, 124, 125, 127, 128, 139, 141, 142, 143, 144, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 220, 221, 222, 234, 235, 237, 238, 239, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 275, 276, 283, 286, 298, 300, 301, 302, 310, 313, 316, 319, 327, 330, 343, 346, 369, 372, 375, 376, 379, 381, 382, 386, 389, 390, 391, 392, 398, 400, 402, 403, 404, 406, 407, 408, 411, 413, 416, 418, 421, 422, 423, 426, 428, 429, 430, 431, 432, 433, 436, 438, 439, 440, 441, 442, 443, 446, 448, 451, 458, 461, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 491, 493, 495, 496, 497, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 525, 526, 527, 533, 536, 543, 546, 558, 561, 563, 566, 568, 571, 578, 581, 608, 609, 610, 613, 615, 618, 620, 623, 630, 633, 635, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 681, 685, 686, 687, 688, 689, 690, 691, 694, 695, 698, 699, 701, 703, 704, 705, 711, 714, 715, 716, 717, 718, 719, 725, 734, 736, 740, 743, 744, 751, 758, 760, 761, 762, 763, 764, 765, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 813, 814, 816, 818, 819, 820, 821, 822, 823, 824, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 843, 844, 851, 853, 881, 883, 887, 889, 890, 891, 892, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 943, 944, 945, 946, 947, 948, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 975, 977, 983, 986, 995, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1111, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1150], "print": [0, 4, 5, 6, 12, 18, 23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 119, 120, 125, 127, 133, 139, 141, 142, 143, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 228, 229, 232, 240, 243, 250, 251, 253, 256, 268, 270, 271, 275, 276, 283, 286, 298, 299, 300, 301, 302, 310, 313, 321, 322, 324, 325, 343, 346, 368, 369, 376, 379, 382, 383, 384, 385, 386, 388, 391, 398, 399, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 491, 493, 494, 495, 496, 497, 508, 511, 513, 514, 515, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 691, 694, 695, 703, 704, 711, 714, 715, 716, 717, 718, 719, 722, 741, 751, 758, 760, 761, 762, 763, 764, 765, 771, 773, 774, 776, 777, 789, 790, 791, 792, 793, 812, 813, 814, 816, 818, 819, 820, 821, 822, 823, 824, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 851, 853, 868, 870, 881, 883, 887, 889, 890, 892, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 932, 935, 936, 939, 944, 945, 946, 947, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 967, 970, 983, 986, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1073, 1076, 1077, 1080, 1081, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1111], "function": [0, 4, 5, 6, 14, 19, 21, 23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 72, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 132, 136, 137, 138, 140, 141, 142, 143, 154, 155, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 281, 282, 283, 286, 288, 291, 293, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 313, 315, 316, 319, 321, 322, 324, 325, 327, 330, 332, 333, 336, 338, 341, 343, 346, 348, 351, 353, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 861, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 945, 946, 947, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1143, 1146, 1148], "py": [0, 4, 5, 19, 122, 123, 124, 127, 128, 129, 130, 134, 135, 137, 139, 141, 143, 144, 1007, 1008, 1012, 1143, 1144, 1145, 1146, 1148], "noqa": [0, 4, 5, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 418, 421, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 660, 663, 665, 668, 675, 679, 680, 830, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 956, 1056, 1061, 1064], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 57, 58, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 155, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 182, 183, 185, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 223, 226, 237, 238, 258, 260, 262, 263, 265, 267, 276, 281, 282, 283, 286, 298, 300, 302, 303, 315, 321, 322, 324, 325, 332, 338, 341, 348, 351, 353, 362, 363, 368, 369, 372, 373, 374, 375, 381, 382, 386, 387, 388, 389, 390, 391, 392, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 694, 697, 698, 706, 707, 713, 715, 716, 717, 718, 719, 729, 730, 731, 733, 734, 735, 736, 738, 743, 744, 745, 746, 748, 753, 754, 757, 759, 760, 761, 763, 770, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 789, 791, 793, 794, 796, 798, 800, 802, 804, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 955, 957, 958, 971, 974, 979, 980, 981, 982, 983, 984, 985, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1019, 1020, 1021, 1022, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1110, 1116, 1117, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1147], "set_backend": [0, 4, 5, 12, 129, 130, 131, 134, 276, 321, 322, 324, 325, 369, 389, 390, 1100], "ha": [0, 4, 5, 14, 15, 16, 19, 64, 65, 77, 78, 111, 112, 124, 125, 127, 128, 129, 130, 131, 134, 135, 137, 139, 141, 143, 144, 155, 156, 206, 240, 243, 369, 375, 402, 403, 406, 610, 613, 630, 633, 771, 812, 830, 854, 857, 877, 878, 880, 881, 883, 890, 892, 918, 932, 935, 959, 962, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1056, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088], "over": [0, 4, 14, 16, 18, 70, 71, 72, 73, 77, 78, 117, 118, 119, 120, 124, 125, 127, 130, 136, 141, 156, 830, 858, 860, 887, 889, 893, 895, 896, 898, 1001, 1002, 1005, 1007, 1013, 1015, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1141, 1142], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 35, 36, 41, 42, 43, 44, 70, 71, 72, 73, 77, 78, 87, 88, 89, 90, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 156, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 245, 248, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 369, 393, 397, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 498, 499, 500, 501, 502, 513, 516, 518, 521, 533, 536, 543, 546, 558, 561, 608, 609, 620, 621, 622, 623, 624, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 687, 688, 689, 690, 691, 707, 708, 709, 710, 711, 714, 726, 733, 734, 735, 753, 754, 771, 782, 783, 813, 816, 820, 823, 827, 829, 830, 831, 834, 842, 844, 918, 953, 956, 979, 980, 981, 982, 983, 986, 989, 993, 999, 1000, 1001, 1002, 1005, 1007, 1013, 1015, 1019, 1020, 1024, 1030, 1034, 1056, 1061, 1064, 1089, 1090, 1093, 1099, 1100, 1107, 1108], "pass": [0, 4, 20, 72, 73, 74, 77, 78, 79, 80, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 141, 156, 276, 303, 369, 392, 402, 438, 441, 686, 697, 731, 771, 811, 979, 980, 981, 1116, 1117, 1139, 1140, 1143, 1147, 1149, 1150], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 45, 46, 91, 92, 123, 127, 128, 130, 134, 135, 136, 139, 141, 144, 156, 771, 789, 790, 791, 792, 793, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1100], "get_backend": [0, 129, 130], "specifi": [0, 5, 35, 36, 53, 54, 55, 56, 70, 71, 75, 76, 77, 78, 99, 100, 101, 102, 117, 118, 121, 123, 127, 128, 129, 134, 135, 136, 139, 142, 143, 144, 173, 175, 177, 206, 207, 208, 214, 228, 234, 235, 237, 238, 250, 251, 258, 260, 262, 263, 265, 267, 268, 270, 276, 283, 286, 293, 296, 369, 382, 386, 388, 391, 392, 393, 397, 402, 635, 638, 686, 692, 704, 714, 715, 718, 726, 769, 830, 842, 844, 858, 860, 887, 889, 890, 892, 893, 895, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 922, 924, 927, 928, 931, 936, 939, 953, 954, 955, 956, 957, 959, 962, 963, 966, 975, 978, 983, 988, 990, 991, 997, 998, 999, 1000, 1019, 1020, 1021, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1045, 1046, 1049, 1056, 1057, 1060, 1073, 1076, 1081, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109], "isn": [0, 5, 19, 142, 156], "t": [0, 5, 15, 16, 18, 19, 20, 21, 23, 26, 27, 72, 73, 119, 120, 125, 127, 134, 139, 141, 142, 143, 144, 156, 686, 695, 813, 826, 827], "associ": [0, 5, 19, 127, 129, 131, 156, 402, 418, 421, 610, 613, 830, 862, 864, 871, 873, 899, 901], "option": [0, 5, 18, 19, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136, 137, 139, 144, 156, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 293, 296, 298, 300, 302, 303, 304, 305, 306, 308, 309, 332, 368, 369, 375, 390, 391, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 698, 699, 701, 704, 705, 706, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 727, 738, 740, 743, 744, 753, 754, 760, 761, 763, 771, 789, 791, 793, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 980, 981, 982, 983, 984, 989, 994, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1023, 1024, 1030, 1031, 1033, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1111, 1143, 1144, 1145, 1147], "str": [0, 5, 29, 31, 32, 49, 50, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 134, 135, 137, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 203, 204, 206, 240, 243, 276, 281, 298, 300, 302, 303, 304, 305, 306, 315, 316, 319, 327, 330, 332, 333, 336, 338, 341, 343, 346, 348, 351, 359, 360, 361, 362, 368, 369, 372, 392, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 692, 706, 708, 709, 710, 715, 717, 719, 738, 743, 744, 760, 761, 763, 789, 791, 793, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 830, 831, 833, 835, 874, 876, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 979, 980, 981, 982, 983, 989, 999, 1002, 1004, 1009, 1011, 1030, 1031, 1033, 1056, 1057, 1060, 1090, 1092, 1094, 1095, 1097, 1099], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 72, 73, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 155, 156, 771, 782, 783, 1100, 1106], "want": [0, 5, 15, 17, 18, 19, 72, 73, 119, 120, 127, 142, 143, 144, 156], "retriev": [0, 5, 19, 686, 692], "i": [0, 5, 19, 21, 121, 127, 139, 142, 144, 206, 207, 208, 240, 243, 402, 403, 406, 438, 441, 458, 461, 468, 471, 478, 481, 518, 521, 523, 526, 538, 541, 608, 609, 615, 618, 630, 633, 635, 638, 686, 694, 695, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 820, 823, 830, 836, 838, 854, 857, 862, 864, 871, 873, 878, 880, 881, 883, 890, 892, 896, 898, 918, 963, 966, 983, 986, 999, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1085, 1088], "e": [0, 5, 15, 16, 17, 19, 21, 121, 127, 133, 142, 156, 205, 206, 240, 243, 276, 282, 354, 357, 369, 372, 402, 403, 406, 438, 441, 458, 461, 468, 471, 478, 481, 508, 511, 518, 521, 523, 526, 538, 541, 563, 566, 573, 576, 608, 609, 615, 618, 630, 633, 635, 638, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 830, 836, 838, 854, 857, 862, 864, 871, 873, 878, 880, 881, 883, 896, 898, 918, 963, 966, 983, 986, 999, 1000, 1007, 1012, 1013, 1015, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088], "one": [0, 5, 15, 16, 18, 19, 23, 26, 27, 64, 65, 77, 78, 87, 88, 89, 90, 97, 98, 101, 102, 103, 104, 105, 106, 111, 112, 123, 125, 127, 128, 129, 132, 133, 134, 136, 137, 138, 141, 142, 144, 156, 206, 207, 208, 240, 243, 276, 288, 291, 298, 301, 369, 392, 402, 418, 422, 463, 467, 608, 609, 686, 687, 689, 690, 691, 715, 719, 737, 740, 743, 744, 760, 761, 763, 830, 831, 835, 854, 857, 858, 860, 868, 870, 874, 876, 893, 895, 896, 898, 918, 919, 923, 932, 935, 936, 939, 953, 956, 957, 959, 962, 1001, 1002, 1004, 1005, 1006, 1009, 1011, 1019, 1020, 1022, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1040, 1044, 1056, 1057, 1060, 1100, 1107, 1108, 1110], "default": [0, 5, 19, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 143, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 293, 296, 298, 300, 302, 304, 305, 306, 308, 309, 310, 313, 359, 362, 367, 369, 375, 376, 379, 384, 387, 388, 389, 390, 391, 392, 393, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 698, 699, 701, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 723, 724, 725, 726, 727, 728, 731, 732, 733, 734, 736, 737, 738, 740, 742, 743, 744, 748, 751, 753, 754, 760, 761, 763, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 980, 981, 982, 983, 984, 985, 989, 993, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1110, 1111, 1116, 1117, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "torch": [0, 5, 12, 19, 122, 123, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 156, 203, 204, 276, 321, 322, 324, 325, 343, 346, 369, 389, 390, 918, 932, 935, 959, 962, 1100], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 123, 127, 128, 134, 135, 136, 139, 144, 156, 1100], "mxnet": [0, 5, 15, 20, 134, 135, 136, 139, 144, 1100], "either": [0, 5, 12, 18, 19, 21, 41, 42, 77, 78, 87, 88, 124, 125, 127, 129, 130, 133, 134, 135, 139, 141, 142, 156, 206, 223, 226, 402, 418, 421, 438, 441, 543, 544, 545, 546, 547, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 635, 638, 645, 648, 650, 653, 675, 679, 686, 707, 733, 737, 738, 830, 854, 857, 979, 980, 981, 982, 1056, 1073, 1076, 1081, 1084, 1127, 1138, 1139, 1140], "doesn": [0, 5, 18, 21, 125, 127, 134, 139, 156], "matter": [0, 5, 14, 125], "been": [0, 5, 19, 123, 124, 127, 129, 130, 133, 134, 135, 137, 139, 155, 156, 369, 375, 686, 708, 709, 710, 1007, 1008], "ivy_np": [0, 5, 127], "us": [0, 5, 12, 15, 16, 17, 19, 20, 55, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 80, 87, 88, 101, 102, 103, 104, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 155, 156, 167, 168, 170, 172, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 202, 205, 276, 315, 316, 319, 327, 330, 369, 383, 387, 390, 391, 392, 393, 397, 399, 401, 402, 423, 426, 448, 451, 463, 465, 473, 476, 488, 491, 533, 536, 558, 561, 615, 618, 620, 623, 660, 663, 686, 714, 721, 722, 737, 743, 744, 745, 746, 753, 754, 771, 773, 776, 778, 780, 794, 796, 798, 800, 813, 819, 825, 826, 828, 829, 830, 839, 841, 842, 844, 858, 860, 902, 903, 906, 918, 932, 935, 936, 939, 944, 947, 953, 954, 955, 956, 957, 967, 970, 979, 980, 981, 982, 983, 984, 986, 992, 993, 994, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1019, 1020, 1021, 1022, 1024, 1025, 1029, 1056, 1057, 1060, 1089, 1090, 1093, 1100, 1107, 1108, 1109, 1110, 1127, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1146], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 123, 125, 127, 129, 132, 136, 143], "call": [0, 6, 12, 15, 21, 74, 79, 80, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 156, 369, 392, 686, 742, 748, 766, 771, 782, 783, 983, 984, 989, 993, 994, 1127, 1138, 1139, 1140, 1143, 1147], "nativ": [0, 6, 29, 32, 33, 34, 35, 36, 77, 78, 127, 128, 134, 136, 141, 142, 206, 245, 246, 248, 276, 281, 282, 303, 309, 369, 372, 373, 374, 375, 376, 379, 387, 398, 401, 686, 731, 733, 736, 759, 1116, 1117], "native_arrai": [0, 6, 12, 35, 36, 41, 42, 43, 44, 81, 82, 87, 88, 89, 90, 127, 167, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 202, 206, 240, 243, 271, 275, 276, 298, 301, 310, 313, 316, 319, 327, 330, 343, 346, 369, 386, 402, 403, 406, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 493, 494, 496, 513, 516, 518, 521, 523, 524, 526, 533, 536, 543, 546, 558, 561, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 680, 686, 687, 688, 689, 690, 691, 695, 703, 704, 711, 714, 715, 718, 736, 758, 760, 761, 763, 764, 765, 771, 773, 776, 789, 792, 813, 816, 819, 820, 823, 829, 830, 836, 838, 839, 841, 842, 844, 887, 889, 902, 903, 906, 913, 916, 918, 919, 922, 932, 935, 936, 939, 944, 947, 953, 956, 958, 959, 962, 967, 970, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1034, 1056, 1057, 1060, 1061, 1064, 1089, 1090, 1093, 1107, 1108, 1109, 1110, 1111], "1": [0, 6, 12, 15, 16, 21, 23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 117, 118, 123, 125, 127, 128, 129, 133, 136, 137, 138, 139, 141, 142, 143, 144, 156, 167, 168, 169, 170, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 206, 207, 208, 209, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 271, 275, 276, 283, 286, 298, 299, 300, 301, 302, 310, 313, 316, 319, 343, 346, 369, 375, 376, 379, 382, 385, 386, 393, 397, 402, 403, 404, 405, 406, 408, 411, 413, 416, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 491, 493, 494, 495, 496, 497, 508, 511, 513, 514, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 608, 609, 615, 618, 620, 623, 630, 633, 635, 636, 637, 638, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 691, 694, 695, 703, 704, 711, 714, 715, 716, 717, 718, 719, 734, 736, 740, 743, 744, 751, 754, 758, 760, 761, 762, 763, 764, 765, 769, 771, 773, 774, 775, 776, 777, 789, 791, 792, 793, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 851, 853, 862, 864, 868, 870, 878, 880, 881, 883, 887, 889, 890, 892, 893, 894, 895, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 932, 935, 936, 939, 940, 943, 944, 945, 946, 947, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 966, 967, 970, 983, 986, 995, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1064, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1110, 1111, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150], "type": [0, 6, 12, 18, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 135, 136, 137, 139, 141, 142, 144, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 694, 695, 697, 698, 699, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 729, 730, 731, 733, 734, 735, 736, 740, 743, 744, 745, 746, 747, 749, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 763, 764, 765, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 781, 785, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 800, 801, 802, 803, 804, 805, 807, 808, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 989, 993, 994, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1110, 1111, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138], "ndarrai": [0, 6, 35, 36, 123, 132, 134, 135, 136, 141, 206, 210, 211, 212, 245, 248, 686, 760, 764], "Or": [0, 6, 142], "jaxlib": [0, 6, 18, 123, 134, 135, 141], "xla_extens": [0, 6, 123, 134, 135, 141], "devicearrai": [0, 6, 141], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 61, 63, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 127, 133, 136, 137, 142, 143, 144, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 207, 209, 210, 213, 215, 217, 219, 220, 222, 223, 225, 227, 229, 231, 233, 234, 236, 237, 239, 240, 242, 244, 245, 247, 249, 250, 252, 253, 255, 257, 258, 259, 261, 263, 264, 266, 268, 269, 271, 272, 274, 276, 283, 285, 286, 287, 288, 290, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 307, 310, 311, 312, 313, 314, 316, 318, 320, 321, 323, 324, 326, 327, 329, 331, 333, 335, 336, 337, 338, 340, 342, 343, 345, 346, 347, 348, 350, 351, 352, 354, 356, 358, 368, 369, 375, 376, 377, 378, 379, 380, 383, 384, 387, 392, 399, 401, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 451, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 623, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 699, 700, 704, 707, 711, 713, 715, 717, 719, 723, 724, 731, 733, 734, 736, 737, 747, 749, 751, 752, 760, 761, 763, 767, 768, 769, 771, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 812, 830, 831, 832, 833, 834, 835, 854, 856, 858, 859, 860, 881, 883, 896, 897, 898, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 919, 921, 923, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 949, 951, 953, 955, 957, 958, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 980, 981, 982, 983, 984, 985, 989, 993, 994, 995, 996, 1002, 1004, 1006, 1007, 1008, 1013, 1014, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1038, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1111, 1116, 1117, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 130], "unset": [0, 12, 130, 139, 141], "adjust": [0, 12, 1056, 1077, 1080, 1085, 1088], "dict": [0, 12, 29, 31, 32, 33, 34, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 128, 133, 137, 142, 143, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 298, 300, 302, 369, 375, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 692, 708, 709, 710, 715, 717, 719, 760, 761, 763, 789, 791, 793, 831, 833, 835, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 983, 985, 986, 989, 992, 995, 996, 999, 1000, 1002, 1004, 1009, 1011, 1030, 1031, 1033, 1090, 1092, 1094, 1095, 1097, 1099], "previous": [0, 12, 18, 21, 127, 129, 139, 686, 697], "otherwis": [0, 12, 23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 45, 46, 51, 52, 70, 71, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 123, 127, 132, 133, 134, 135, 139, 141, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 206, 207, 208, 276, 283, 286, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 333, 336, 343, 346, 369, 375, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 696, 715, 717, 719, 760, 761, 763, 766, 771, 789, 790, 791, 792, 793, 807, 830, 831, 832, 833, 834, 835, 839, 841, 893, 895, 896, 898, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 979, 980, 981, 983, 996, 1002, 1004, 1006, 1019, 1020, 1021, 1023, 1030, 1031, 1033, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1111], "implement": [0, 12, 20, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 156, 276, 283, 286, 354, 357, 369, 393, 397, 402, 403, 406, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 573, 576, 578, 581, 610, 613, 630, 633, 635, 638, 650, 653, 655, 658, 675, 679, 680, 830, 845, 847, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1100], "wa": [0, 12, 15, 19, 70, 71, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 125, 139, 141, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 298, 300, 302, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 715, 717, 719, 760, 761, 763, 766, 789, 791, 793, 831, 833, 835, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 983, 996, 1002, 1004, 1006, 1030, 1031, 1033, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "last": [0, 12, 16, 19, 53, 54, 70, 71, 77, 78, 99, 100, 117, 118, 125, 127, 130, 137, 156, 167, 188, 191, 369, 375, 771, 812, 813, 827, 830, 836, 838, 842, 844, 858, 860, 890, 892, 893, 895, 902, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 936, 939, 953, 956, 958, 963, 966, 1045, 1046, 1049, 1051, 1054, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1127, 1137], "henc": [0, 12, 127, 133, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "here": [0, 12, 18, 19, 20, 122, 123, 125, 127, 128, 133, 139, 140, 141, 142, 143, 144, 155, 156], "tensor": [0, 12, 14, 77, 78, 122, 123, 128, 129, 130, 132, 134, 135, 136, 139, 141, 142, 143, 144, 156, 206, 234, 235, 237, 238, 276, 310, 313, 402, 448, 451, 608, 609, 686, 740, 743, 744, 813, 825, 827, 830, 887, 889, 918, 932, 935, 949, 952, 958, 1007, 1008, 1019, 1022, 1100, 1107, 1110, 1127, 1135, 1137], "howev": [0, 12, 15, 18, 20, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 141, 142, 143, 144, 156], "befor": [0, 12, 18, 19, 20, 77, 78, 124, 127, 132, 134, 135, 136, 139, 142, 156, 369, 392, 402, 681, 685, 813, 828, 829, 979, 980, 981, 983, 995, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1073, 1076, 1081, 1084], "becom": [0, 12, 14, 16, 19, 125, 133, 139, 144, 156, 918, 919, 922], "swap": [0, 12, 918, 967, 970], "python": [0, 12, 13, 14, 15, 18, 19, 21, 127, 137, 139, 141, 142, 156, 206, 207, 208, 369, 387, 401, 402, 635, 638, 1100, 1106], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 56, 58, 60, 62, 63, 65, 67, 69, 71, 73, 76, 77, 78, 80, 82, 84, 86, 88, 90, 91, 92, 94, 96, 98, 100, 102, 104, 106, 108, 109, 110, 112, 114, 116, 118, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 135, 138, 141, 144, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1153], "op": [0, 12, 122, 139, 156], "eagertensor": [0, 12], "def": [1, 20, 122, 123, 125, 127, 128, 129, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 277, 278, 279, 280, 370, 772, 1100, 1119, 1122, 1125], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 63, 65, 67, 69, 71, 73, 76, 77, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 109, 110, 112, 114, 116, 118, 120, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 144, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1153], "backend": [4, 5, 6, 12, 14, 19, 20, 29, 32, 34, 77, 78, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 141, 144, 276, 321, 322, 324, 325, 332, 368, 369, 383, 385, 399, 686, 728, 731, 732, 738, 759, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 811, 1100, 1106, 1116, 1117, 1143, 1144, 1145, 1146, 1147, 1148], "ml": [13, 15, 16, 17, 138, 139, 140, 142, 143, 144, 155, 1100, 1106], "explos": [13, 15, 1100], "A": [13, 14, 15, 16, 21, 35, 36, 70, 71, 74, 77, 78, 79, 80, 101, 102, 117, 118, 121, 127, 129, 133, 134, 135, 139, 142, 156, 206, 220, 221, 245, 246, 248, 369, 392, 402, 625, 628, 686, 722, 758, 830, 868, 870, 877, 878, 880, 881, 883, 918, 919, 921, 923, 958, 963, 966, 983, 984, 986, 988, 990, 991, 992, 993, 994, 997, 998, 999, 1000, 1056, 1057, 1060, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1149, 1150], "huge": [13, 15, 142, 1100], "number": [13, 14, 18, 23, 26, 27, 55, 56, 64, 65, 70, 71, 74, 77, 78, 79, 80, 101, 102, 111, 112, 117, 118, 125, 127, 133, 135, 136, 139, 142, 144, 203, 204, 205, 206, 207, 208, 210, 212, 220, 221, 234, 235, 237, 238, 240, 243, 245, 248, 276, 288, 291, 309, 315, 316, 319, 327, 330, 333, 336, 338, 341, 343, 346, 348, 351, 354, 357, 369, 384, 385, 386, 402, 418, 421, 438, 441, 478, 481, 518, 521, 523, 526, 608, 610, 613, 630, 633, 635, 638, 640, 643, 645, 648, 681, 685, 686, 687, 690, 713, 722, 724, 739, 765, 770, 813, 828, 830, 842, 844, 845, 847, 862, 864, 877, 881, 883, 893, 895, 918, 919, 920, 921, 922, 923, 928, 931, 940, 943, 944, 947, 953, 954, 955, 956, 957, 958, 963, 966, 971, 974, 975, 978, 979, 980, 981, 982, 1007, 1008, 1017, 1019, 1022, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1110, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138], "tool": [13, 16, 19, 140, 144, 155, 156, 1100], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 155, 156, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 288, 291, 293, 296, 316, 319, 369, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 727, 740, 743, 744, 771, 789, 790, 791, 792, 793, 807, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1110, 1111], "explod": [13, 14, 1100], "onto": [13, 14, 983, 989, 995, 1100], "scene": [13, 14, 121, 138, 140, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1100], "b": [13, 16, 17, 23, 26, 27, 74, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 121, 125, 129, 130, 133, 138, 139, 140, 142, 143, 144, 154, 198, 199, 201, 206, 271, 275, 276, 298, 300, 301, 302, 310, 313, 343, 346, 402, 403, 405, 406, 407, 418, 420, 421, 422, 423, 426, 428, 430, 431, 432, 438, 440, 441, 442, 448, 451, 463, 465, 466, 467, 473, 476, 478, 480, 481, 483, 485, 486, 487, 488, 491, 493, 495, 496, 497, 513, 515, 516, 518, 520, 521, 523, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 620, 623, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 663, 665, 668, 675, 676, 678, 679, 680, 686, 687, 689, 690, 691, 694, 695, 703, 704, 711, 714, 715, 717, 718, 719, 760, 761, 763, 764, 765, 771, 773, 775, 776, 777, 789, 791, 792, 793, 813, 816, 819, 820, 822, 823, 824, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 844, 868, 870, 878, 880, 887, 889, 899, 901, 902, 903, 905, 906, 907, 908, 910, 912, 913, 915, 917, 918, 919, 921, 922, 923, 932, 935, 936, 939, 944, 946, 947, 948, 953, 955, 956, 957, 959, 961, 962, 963, 966, 967, 970, 983, 986, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1015, 1019, 1021, 1022, 1023, 1024, 1030, 1031, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1099, 1100, 1106, 1107, 1109, 1110, 1111], "why": [13, 15, 19, 123, 133, 136, 141, 1100], "unifi": [13, 15, 77, 78, 132, 139, 156, 369, 392, 1100], "should": [13, 15, 18, 19, 20, 21, 23, 26, 27, 35, 36, 41, 42, 51, 52, 74, 75, 76, 77, 78, 79, 80, 87, 88, 97, 98, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 188, 190, 192, 198, 199, 200, 201, 203, 204, 206, 240, 243, 258, 260, 262, 263, 265, 267, 276, 293, 296, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 623, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 697, 731, 740, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 851, 853, 854, 857, 862, 864, 868, 870, 871, 873, 874, 876, 878, 880, 881, 883, 887, 889, 890, 892, 893, 895, 896, 898, 918, 949, 952, 1007, 1018, 1019, 1020, 1021, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1100, 1107, 1108, 1109], "them": [13, 14, 15, 16, 127, 130, 132, 133, 139, 141, 142, 143, 156, 1100], "c": [13, 15, 16, 17, 45, 46, 87, 88, 91, 92, 105, 106, 121, 125, 129, 133, 138, 139, 140, 142, 156, 276, 316, 319, 327, 330, 402, 620, 623, 645, 647, 648, 686, 694, 695, 703, 765, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 819, 918, 963, 966, 983, 986, 999, 1000, 1009, 1011, 1019, 1022, 1056, 1057, 1060, 1077, 1080, 1085, 1088, 1100, 1106, 1107, 1110], "standard": [13, 57, 58, 103, 104, 121, 122, 123, 124, 126, 127, 132, 136, 156, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 830, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 956, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1012, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1077, 1080, 1085, 1088, 1089, 1090, 1093, 1100, 1106, 1107, 1108, 1141, 1142], "re": [13, 14, 15, 17, 18, 19, 20, 21, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 144, 156, 369, 392, 686, 708, 830, 887, 889, 918, 953, 956, 1019, 1023, 1100, 1107, 1111], "collabor": [13, 14, 15, 1100], "consortium": [13, 15, 1100, 1106], "data": [13, 15, 23, 26, 27, 28, 35, 36, 38, 41, 42, 45, 46, 51, 52, 55, 56, 64, 65, 70, 71, 74, 77, 78, 79, 80, 84, 87, 88, 91, 92, 97, 98, 101, 102, 111, 112, 117, 118, 121, 122, 123, 124, 129, 131, 133, 135, 136, 141, 198, 199, 200, 201, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 281, 282, 283, 286, 293, 296, 298, 299, 300, 301, 302, 303, 310, 313, 315, 316, 319, 321, 322, 324, 325, 327, 330, 332, 333, 336, 338, 341, 343, 346, 348, 351, 353, 359, 363, 368, 369, 372, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 694, 695, 733, 734, 736, 755, 771, 789, 790, 791, 792, 793, 811, 813, 826, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 878, 880, 881, 883, 887, 889, 890, 892, 893, 895, 896, 898, 918, 932, 935, 936, 939, 940, 943, 949, 952, 953, 954, 955, 956, 957, 959, 962, 963, 966, 1007, 1018, 1019, 1020, 1021, 1022, 1031, 1032, 1033, 1045, 1046, 1049, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1106, 1107, 1108, 1109, 1110, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138], "api": [13, 14, 18, 19, 121, 123, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 138, 140, 142, 156, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 830, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 956, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1089, 1090, 1093, 1100, 1106, 1107, 1108], "open": [14, 15, 16, 17, 18, 21, 105, 106, 124, 155, 206, 207, 208, 1007, 1009, 1010, 1011, 1013, 1015, 1100], "project": [14, 15, 16, 18, 19, 21, 122, 127, 130, 141, 143, 155, 156, 1007, 1008, 1012, 1143, 1144, 1145, 1146, 1148], "grown": 14, "consider": [14, 123, 125], "recent": [14, 15, 18, 19, 127], "year": [14, 16, 156, 1100], "especi": [14, 18], "deep": [14, 17, 19, 20, 77, 78, 133, 138, 142, 1100], "learn": [14, 15, 18, 20, 121, 129, 138, 144, 155, 402, 528, 531, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 979, 980, 981, 982, 1100, 1143, 1144, 1145, 1146, 1147, 1148], "can": [14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 83, 84, 105, 106, 121, 122, 123, 124, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 155, 156, 206, 210, 211, 212, 245, 248, 276, 298, 299, 300, 301, 302, 369, 390, 391, 392, 830, 851, 853, 918, 949, 952, 1007, 1009, 1010, 1011, 1100, 1106], "seen": [14, 15, 125, 127, 141, 142], "rapidli": 14, "increas": [14, 918, 928, 931, 975, 978, 983, 995], "github": [14, 19, 20, 124, 127], "repo": [14, 15, 16, 18, 19, 126, 139, 141, 142, 143, 144, 155, 1100, 1106], "contain": [14, 18, 20, 21, 23, 26, 27, 29, 33, 34, 35, 36, 41, 42, 51, 52, 53, 54, 55, 56, 64, 65, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 129, 134, 136, 138, 139, 140, 143, 144, 156, 167, 168, 173, 178, 181, 183, 186, 188, 193, 196, 198, 200, 206, 207, 208, 210, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 245, 250, 251, 253, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 275, 276, 283, 288, 293, 298, 301, 305, 310, 313, 316, 319, 321, 324, 327, 330, 333, 336, 338, 343, 346, 348, 354, 369, 376, 382, 386, 393, 402, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 501, 503, 504, 508, 509, 511, 513, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 672, 674, 675, 677, 679, 680, 681, 683, 685, 686, 687, 690, 692, 695, 698, 699, 701, 703, 704, 711, 714, 715, 718, 723, 726, 735, 747, 758, 760, 764, 765, 767, 771, 773, 776, 778, 782, 785, 789, 792, 794, 798, 802, 813, 816, 819, 820, 823, 829, 830, 831, 832, 834, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 902, 903, 904, 906, 908, 909, 911, 913, 914, 916, 918, 919, 920, 922, 924, 928, 932, 935, 936, 939, 940, 943, 944, 947, 949, 953, 956, 958, 959, 962, 963, 967, 970, 971, 975, 979, 980, 981, 982, 983, 996, 999, 1001, 1002, 1005, 1007, 1008, 1009, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1032, 1034, 1035, 1040, 1044, 1045, 1046, 1049, 1051, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1093, 1095, 1096, 1098, 1100, 1107, 1108, 1109, 1110, 1111, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "term": [14, 19, 133, 813, 827, 1127, 1137], "time": [14, 15, 16, 18, 19, 20, 64, 65, 111, 112, 123, 127, 129, 133, 134, 139, 142, 144, 156, 771, 778, 780, 794, 796, 813, 827, 918, 971, 974, 979, 980, 981, 982, 1019, 1020, 1021, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1107, 1108, 1109, 1127, 1138, 1139, 1140], "These": [14, 15, 16, 19, 123, 124, 125, 127, 128, 129, 133, 134, 136, 139, 140, 142, 143, 144, 156, 830, 845, 847, 1100, 1106], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 41, 42, 43, 44, 55, 56, 74, 77, 78, 79, 80, 87, 88, 89, 90, 101, 102, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 155, 156, 157, 165, 206, 207, 208, 369, 382, 386, 388, 392, 402, 483, 484, 485, 486, 487, 593, 596, 598, 601, 640, 643, 650, 651, 652, 653, 654, 675, 676, 677, 678, 679, 686, 687, 688, 689, 690, 691, 694, 695, 696, 720, 723, 727, 728, 732, 739, 741, 747, 755, 767, 771, 812, 813, 826, 830, 836, 838, 854, 857, 858, 860, 862, 864, 871, 873, 881, 883, 884, 886, 893, 895, 918, 919, 920, 921, 922, 923, 936, 939, 953, 954, 955, 956, 957, 983, 985, 989, 995, 1007, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1024, 1025, 1029, 1100, 1107, 1108, 1109, 1110, 1149, 1150], "written": [14, 18, 122, 123, 124, 127, 128, 132, 136, 139, 141, 144, 156], "mani": [14, 15, 16, 18, 19, 20, 77, 78, 123, 124, 125, 127, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 156, 918, 958], "differ": [14, 15, 16, 18, 19, 41, 42, 74, 77, 78, 79, 80, 121, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 156, 276, 316, 319, 402, 418, 421, 610, 613, 670, 672, 674, 813, 826, 918, 963, 966, 1056, 1073, 1076, 1081, 1084, 1100], "while": [14, 15, 18, 19, 74, 77, 78, 79, 80, 125, 127, 130, 136, 137, 143, 144, 156, 402, 593, 596, 598, 601, 1024, 1025, 1029, 1056, 1065, 1068], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 155, 156, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 298, 299, 300, 301, 302, 316, 319, 327, 330, 333, 336, 343, 346, 369, 376, 377, 378, 380, 387, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 691, 713, 714, 715, 716, 717, 719, 731, 742, 748, 760, 761, 762, 763, 771, 773, 774, 775, 777, 778, 780, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 811, 812, 813, 816, 820, 821, 822, 823, 824, 826, 829, 830, 831, 832, 833, 834, 835, 839, 841, 842, 844, 858, 860, 877, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 932, 935, 936, 939, 944, 945, 946, 948, 949, 952, 953, 954, 955, 956, 957, 959, 960, 961, 963, 966, 983, 989, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1011, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1045, 1046, 1049, 1056, 1061, 1064, 1065, 1068, 1077, 1080, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1106, 1107, 1108, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148], "wonder": [14, 16, 141], "thing": [14, 15, 16, 18, 19, 20, 127, 130, 141, 142], "research": [14, 155], "develop": [14, 15, 16, 17, 18, 19, 20, 155, 156, 1100], "also": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 156, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 298, 299, 300, 301, 302, 333, 336, 343, 346, 376, 377, 378, 380, 393, 394, 395, 396, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 691, 714, 715, 716, 717, 719, 731, 760, 761, 762, 763, 771, 773, 774, 775, 777, 778, 780, 789, 790, 791, 793, 813, 816, 820, 821, 822, 823, 824, 826, 829, 830, 831, 832, 833, 834, 835, 839, 841, 842, 844, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 932, 935, 936, 939, 944, 945, 946, 948, 953, 954, 955, 956, 957, 959, 960, 961, 979, 980, 981, 982, 983, 984, 985, 993, 994, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1011, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1107, 1108, 1127, 1137], "consid": [14, 15, 77, 78, 122, 129, 140, 141, 142, 402, 593, 596, 598, 601, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "speed": [14, 127], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 41, 42, 74, 77, 78, 79, 80, 91, 92, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 156, 167, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 202, 369, 393, 397, 402, 473, 476, 635, 636, 665, 668, 771, 773, 775, 776, 777, 812, 813, 819, 820, 823, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1100, 1106], "significantli": 14, "hinder": [14, 123], "librari": [14, 15, 16, 23, 26, 27, 128, 139, 144, 154, 156, 369, 393, 397, 402, 513, 516, 593, 596, 598, 601, 830, 845, 847, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1100], "outdat": 14, "month": 14, "rigor": [14, 127], "maintain": [14, 19, 1045, 1046, 1049, 1051, 1054], "against": [14, 77, 78, 127, 156, 276, 288, 291, 830, 854, 857, 858, 860, 862, 864, 871, 873, 1019, 1020, 1107, 1108], "newest": 14, "version": [14, 15, 16, 18, 19, 124, 128, 134, 139, 141, 830, 845, 847, 1100], "For": [14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 45, 46, 91, 92, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 156, 206, 207, 208, 240, 243, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 771, 789, 790, 791, 792, 793, 811, 830, 881, 883, 890, 892, 918, 919, 922, 963, 966, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1069, 1072, 1081, 1084, 1116, 1117], "softwar": [14, 15, 18, 19], "pipelin": [14, 132, 144], "where": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 35, 36, 55, 56, 70, 71, 74, 77, 78, 79, 80, 101, 102, 117, 118, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 142, 143, 144, 156, 206, 228, 229, 230, 232, 240, 243, 402, 438, 441, 508, 511, 573, 576, 610, 613, 630, 633, 686, 727, 731, 740, 771, 812, 830, 845, 847, 862, 864, 871, 873, 874, 876, 881, 883, 884, 886, 890, 892, 893, 895, 918, 919, 920, 921, 922, 923, 928, 931, 932, 935, 940, 943, 963, 966, 975, 978, 983, 984, 994, 1007, 1008, 1019, 1022, 1056, 1077, 1080, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1110], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 144], "signific": [14, 15, 156], "bottleneck": 14, "As": [14, 19, 72, 73, 119, 120, 123, 127, 128, 129, 132, 133, 134, 135, 136, 139, 141, 142, 143, 156, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 43, 44, 57, 58, 77, 78, 83, 84, 89, 90, 103, 104, 121, 122, 124, 125, 127, 131, 133, 134, 136, 138, 141, 144, 155, 206, 214, 223, 226, 228, 229, 232, 250, 251, 253, 256, 268, 270, 271, 275, 276, 363, 402, 443, 446, 573, 576, 625, 628, 686, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 743, 744, 745, 746, 753, 754, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 918, 932, 935, 949, 952, 963, 966, 983, 988, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1100, 1116, 1117, 1127, 1137, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148], "futur": [14, 16, 18, 19, 141, 156, 830, 845, 847], "avail": [14, 18, 19, 77, 78, 124, 128, 135, 156, 369, 375, 383, 384, 385, 399, 686, 709], "specif": [14, 20, 77, 78, 123, 127, 128, 129, 132, 133, 134, 135, 136, 139, 140, 141, 143, 144, 155, 156, 276, 354, 357, 369, 390, 393, 397, 402, 593, 596, 598, 601, 686, 708, 709, 710, 738, 830, 845, 847, 887, 889, 918, 963, 966, 979, 980, 981, 982, 1007, 1008, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1100, 1103, 1105, 1106, 1139, 1140], "quickli": [14, 16, 18, 19, 142, 143], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 121, 127, 128, 130, 133, 136, 138, 156, 1127, 1138, 1139, 1140], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 72, 73, 119, 120, 125, 127, 128, 133, 137, 138, 141, 142, 143, 144, 156, 1100], "desir": [14, 37, 38, 77, 78, 83, 84, 128, 276, 283, 286, 298, 299, 300, 301, 302, 369, 393, 397, 686, 727, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138], "provid": [14, 18, 19, 70, 71, 77, 78, 117, 118, 123, 124, 125, 127, 129, 132, 133, 134, 135, 136, 139, 143, 155, 156, 203, 204, 206, 240, 243, 276, 304, 305, 306, 308, 309, 332, 354, 357, 368, 369, 375, 686, 707, 740, 744, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 830, 893, 895, 918, 936, 939, 963, 966, 1019, 1020, 1056, 1077, 1080, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1143, 1144, 1145, 1146, 1147, 1148], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 33, 34, 35, 36, 43, 44, 55, 56, 70, 71, 72, 73, 77, 78, 89, 90, 101, 102, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 155, 156, 157, 165, 203, 204, 206, 207, 208, 258, 260, 262, 263, 265, 267, 369, 382, 388, 686, 687, 690, 694, 695, 720, 741, 760, 761, 762, 763, 764, 813, 827, 830, 878, 880, 887, 889, 896, 898, 918, 936, 939, 953, 954, 955, 956, 957, 979, 980, 981, 982, 983, 984, 985, 994, 995, 996, 1007, 1008, 1013, 1015, 1089, 1094, 1100, 1103, 1105], "modern": [14, 15], "simpl": [14, 18, 19, 122, 124, 125, 127, 129, 132, 133, 134, 135, 136, 139, 141, 143, 144, 156, 686, 711], "scalabl": [14, 139], "manner": [14, 29, 33, 34, 77, 78, 122, 124, 127, 135, 142, 155, 156, 983, 995], "must": [14, 16, 18, 19, 20, 23, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 122, 123, 124, 125, 129, 132, 133, 134, 135, 139, 143, 144, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 288, 291, 293, 296, 369, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 727, 740, 743, 744, 771, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1110, 1111, 1143, 1147], "determin": [14, 23, 26, 27, 41, 42, 51, 52, 70, 71, 74, 77, 78, 79, 80, 87, 88, 97, 98, 117, 118, 124, 129, 133, 134, 135, 198, 199, 200, 201, 276, 298, 301, 303, 315, 332, 333, 336, 338, 341, 343, 346, 348, 351, 368, 369, 383, 384, 385, 399, 402, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 508, 509, 510, 511, 512, 513, 515, 516, 517, 523, 524, 525, 527, 538, 541, 543, 546, 548, 551, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 603, 606, 610, 611, 612, 613, 614, 630, 631, 632, 633, 634, 635, 636, 638, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 686, 687, 690, 694, 695, 726, 728, 732, 733, 734, 735, 736, 755, 770, 771, 789, 792, 813, 828, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 851, 853, 854, 857, 862, 864, 868, 870, 871, 873, 877, 878, 880, 890, 892, 893, 895, 896, 898, 979, 980, 981, 982, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "exactli": [14, 16, 125, 133, 135, 1100, 1106], "common": [14, 20, 77, 78, 125, 129, 131, 133, 135, 137, 156], "ground": [14, 127], "li": 14, "between": [14, 53, 54, 74, 77, 78, 79, 80, 99, 100, 123, 125, 127, 129, 132, 133, 138, 140, 141, 142, 144, 155, 206, 207, 208, 276, 316, 319, 402, 438, 441, 630, 633, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 932, 935, 963, 966, 983, 989, 1007, 1009, 1010, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1100, 1143, 1145], "find": [14, 18, 19, 77, 78, 127, 139, 142, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1100], "exist": [14, 15, 18, 20, 21, 23, 26, 27, 74, 77, 78, 79, 80, 124, 125, 126, 127, 129, 130, 131, 136, 139, 156, 686, 707, 1143, 1147], "essenti": [14, 15, 20, 125, 129, 135], "order": [14, 18, 19, 21, 74, 77, 78, 79, 80, 123, 124, 125, 128, 130, 132, 133, 134, 135, 141, 142, 144, 156, 402, 438, 441, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 830, 845, 847, 858, 860, 881, 883, 884, 886, 896, 898, 918, 936, 939, 979, 980, 981, 1019, 1022, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1107, 1110, 1149, 1150], "design": [14, 15, 121, 136, 139, 141, 156], "univers": 14, "abstract": [14, 133, 143, 156, 369, 371, 1143, 1147], "In": [14, 16, 18, 19, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 155, 156, 369, 387, 393, 397, 398, 401, 402, 418, 421, 610, 613, 635, 638, 686, 692, 731, 918, 949, 952, 1007, 1013, 1015, 1100], "search": [14, 18, 29, 33, 34, 62, 63, 77, 78, 108, 109, 110, 122, 125, 127, 1020, 1021, 1022, 1023, 1108, 1109, 1110, 1111], "languag": [14, 16, 139], "first": [14, 15, 18, 19, 21, 23, 26, 27, 41, 42, 64, 65, 74, 79, 80, 87, 88, 111, 112, 123, 125, 127, 129, 132, 133, 139, 141, 142, 144, 203, 204, 206, 234, 235, 237, 238, 276, 353, 363, 369, 375, 402, 418, 419, 420, 421, 422, 438, 439, 440, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 498, 499, 501, 523, 526, 528, 529, 533, 534, 536, 553, 554, 556, 558, 559, 561, 583, 584, 586, 588, 589, 591, 598, 599, 601, 603, 604, 606, 610, 611, 613, 620, 621, 623, 630, 631, 633, 670, 671, 672, 673, 674, 686, 694, 771, 782, 783, 830, 836, 838, 842, 844, 845, 847, 854, 857, 868, 870, 874, 876, 881, 883, 887, 889, 893, 895, 918, 924, 927, 953, 956, 963, 966, 967, 970, 979, 980, 981, 982, 983, 984, 993, 994, 1007, 1018, 1019, 1020, 1021, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1107, 1108, 1109, 1127, 1138, 1139, 1140, 1143, 1147], "see": [14, 17, 18, 19, 20, 23, 26, 27, 41, 42, 70, 71, 74, 79, 80, 87, 88, 117, 118, 123, 126, 129, 133, 135, 141, 142, 155, 156, 206, 207, 208, 223, 226, 234, 235, 237, 238, 276, 293, 296, 354, 357, 402, 418, 419, 420, 421, 422, 438, 439, 440, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 493, 494, 495, 496, 497, 498, 499, 500, 502, 513, 516, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 553, 554, 555, 556, 557, 558, 559, 560, 562, 583, 584, 585, 586, 587, 588, 589, 590, 592, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 620, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 670, 671, 672, 673, 674, 830, 862, 864, 871, 873, 878, 880, 893, 895, 896, 898, 1019, 1021, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1109], "clear": [14, 15, 16, 19, 20, 125, 134, 135, 139, 141, 369, 374], "front": [14, 138, 139, 142, 1100, 1106], "runner": 14, "look": [14, 18, 19, 21, 122, 123, 125, 127, 128, 129, 130, 133, 134, 135, 139, 141, 143, 144, 1100], "littl": [14, 141], "deeper": [14, 19, 121, 138, 983, 994, 995], "follow": [14, 15, 18, 19, 20, 21, 77, 78, 122, 124, 125, 127, 130, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 156, 276, 327, 330, 369, 392, 402, 635, 638, 686, 729, 730, 731, 753, 754, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 828, 829, 830, 874, 876, 896, 898, 983, 989, 995, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1100, 1127, 1137, 1143, 1147], "same": [14, 16, 18, 19, 21, 29, 31, 32, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 64, 65, 77, 78, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 111, 112, 122, 123, 125, 127, 128, 129, 132, 133, 135, 136, 137, 139, 141, 143, 144, 206, 207, 208, 215, 216, 218, 229, 230, 232, 240, 243, 253, 254, 256, 258, 260, 262, 263, 265, 267, 271, 273, 275, 276, 283, 286, 288, 291, 293, 296, 369, 392, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 418, 421, 423, 424, 433, 434, 453, 454, 455, 456, 457, 463, 464, 465, 467, 478, 479, 480, 481, 482, 518, 519, 520, 521, 522, 610, 613, 615, 616, 617, 619, 625, 626, 627, 629, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 681, 682, 683, 684, 685, 686, 712, 714, 715, 716, 717, 718, 719, 740, 743, 744, 771, 789, 790, 791, 792, 793, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 865, 867, 871, 873, 874, 876, 878, 880, 881, 883, 890, 892, 893, 895, 918, 924, 927, 936, 939, 940, 943, 953, 954, 955, 956, 957, 959, 962, 963, 966, 979, 980, 981, 983, 996, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1081, 1084, 1085, 1088, 1100, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "core": [14, 18, 20, 135, 139, 144, 369, 384, 1100], "principl": 14, "oper": [14, 18, 20, 23, 26, 27, 49, 50, 74, 77, 78, 79, 80, 95, 96, 124, 125, 127, 128, 129, 132, 133, 135, 136, 142, 143, 206, 234, 235, 237, 238, 276, 354, 357, 402, 418, 421, 468, 471, 473, 476, 533, 536, 615, 618, 620, 623, 635, 638, 665, 668, 686, 696, 708, 709, 710, 755, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826], "expos": [14, 139, 143, 686, 702], "almost": [14, 19, 133, 140, 142], "ident": [14, 16, 77, 78, 128, 129, 131, 133, 141, 142, 156, 369, 382, 983, 996, 1100], "uniqu": [14, 64, 65, 111, 112, 127, 129, 133, 156, 979, 980, 981, 982, 983, 989, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1040, 1044], "syntax": [14, 15, 137], "There": [14, 18, 19, 125, 128, 129, 132, 133, 134, 137, 139, 142, 156], "onli": [14, 17, 18, 19, 23, 26, 27, 77, 78, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 154, 156, 369, 388, 402, 593, 596, 598, 601, 830, 854, 857, 874, 876, 918, 936, 939, 983, 984, 985, 993, 994, 1019, 1020, 1021, 1056, 1065, 1068, 1100, 1107, 1108, 1109, 1143, 1144, 1145, 1146, 1147, 1148], "so": [14, 15, 18, 19, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 156, 157, 165, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 215, 216, 223, 224, 229, 230, 245, 246, 253, 254, 258, 260, 263, 265, 271, 273, 298, 299, 300, 302, 376, 377, 378, 380, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 760, 761, 762, 763, 773, 774, 775, 777, 789, 790, 791, 793, 820, 821, 822, 824, 831, 832, 833, 835, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 919, 920, 921, 923, 944, 945, 946, 948, 953, 954, 955, 957, 959, 960, 961, 983, 984, 994, 1002, 1003, 1004, 1006, 1009, 1011, 1030, 1031, 1032, 1033, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100], "wai": [14, 15, 18, 127, 130, 136, 141, 142, 143, 144, 156], "manipul": [14, 56, 102, 122, 144, 155, 919, 922, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 956, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978], "unsurprisingli": [14, 125], "fundament": [14, 133, 139], "consist": [14, 77, 78, 132, 134, 136, 830, 845, 847, 1056, 1057, 1060, 1139, 1140], "each": [14, 15, 16, 19, 20, 41, 42, 43, 44, 49, 50, 51, 52, 55, 56, 64, 65, 74, 77, 78, 79, 80, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 144, 155, 156, 167, 178, 181, 183, 186, 193, 196, 198, 199, 200, 201, 206, 240, 243, 276, 288, 291, 369, 392, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 498, 501, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 586, 588, 591, 593, 595, 596, 597, 598, 601, 603, 606, 610, 613, 615, 616, 617, 618, 619, 620, 623, 625, 626, 627, 628, 629, 630, 633, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 845, 847, 854, 857, 862, 864, 865, 867, 871, 873, 878, 880, 881, 883, 918, 928, 931, 944, 947, 953, 954, 955, 956, 957, 958, 963, 966, 971, 974, 975, 978, 983, 989, 996, 1007, 1008, 1019, 1022, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1056, 1057, 1060, 1100, 1106, 1107, 1110, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "veri": [14, 15, 18, 19, 122, 123, 125, 127, 129, 133, 135, 136, 140, 142, 143, 144, 156, 1100], "similar": [14, 122, 127, 133, 134, 135, 142, 156, 402, 635, 638, 813, 828, 1127, 1138], "convent": [14, 155, 830, 854, 857, 1056, 1057, 1060], "those": [14, 18, 19, 20, 55, 56, 77, 78, 101, 102, 127, 133, 139, 144, 206, 207, 208, 771, 811, 830, 874, 876, 881, 883, 918, 919, 920, 921, 922, 923], "introduc": [14, 133, 142, 918, 953, 956, 1024, 1025, 1029], "2006": 14, "layer": [14, 50, 57, 58, 96, 103, 104, 122, 124, 139, 140, 143, 814, 815, 816, 817, 818, 819, 820, 823, 825, 826, 827, 828, 829, 1001, 1002, 1003, 1004, 1005, 1006, 1100, 1118, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1150], "therefor": [14, 19, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 139, 141, 143, 156, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 714, 813, 816, 820, 823, 829, 830, 831, 834, 842, 844, 918, 953, 956, 1001, 1002, 1005, 1019, 1020, 1024, 1030, 1034, 1056, 1061, 1064, 1089, 1090, 1093, 1107, 1108], "present": [14, 19, 77, 78, 123, 126, 133, 134, 135, 136, 139], "itself": [14, 18, 19, 123, 128, 133, 136, 143, 155, 156, 686, 692, 983, 995], "cut": 14, "cloth": 14, "adher": [14, 15, 124, 126, 139, 144], "semant": [14, 139, 144, 402, 635, 638], "round": [14, 15, 16, 18, 19, 20, 21, 41, 42, 87, 88, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 402, 418, 421, 478, 479, 480, 481, 482, 518, 519, 520, 521, 522, 523, 526, 610, 613, 644, 660, 663, 681, 682, 683, 684, 685, 1100], "up": [14, 15, 16, 17, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 155, 156], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155], "paint": [14, 139], "pictur": [14, 139], "how": [14, 16, 17, 18, 19, 20, 21, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 155, 156, 1100, 1106, 1127, 1138, 1139, 1140], "pleas": [14, 15, 16, 18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 1100], "check": [14, 15, 16, 18, 19, 29, 31, 32, 33, 34, 45, 46, 77, 78, 91, 92, 127, 133, 138, 139, 141, 142, 143, 144, 155, 276, 303, 321, 322, 324, 325, 332, 338, 341, 348, 351, 368, 369, 387, 401, 686, 696, 711, 723, 726, 733, 734, 735, 736, 747, 755, 767, 770, 771, 789, 790, 791, 792, 793, 830, 845, 847, 983, 984, 993, 994, 995, 1100], "out": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 155, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 285, 286, 287, 293, 294, 295, 296, 297, 310, 312, 314, 369, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 700, 701, 703, 704, 705, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 727, 740, 743, 744, 771, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 877, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1111, 1127, 1135], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 156, 1100], "faq": [14, 15, 16, 139, 141, 142, 143, 144, 155], "reach": [14, 15, 16, 18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 983, 995], "discord": [14, 15, 16, 18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 1100], "you": [14, 15, 16, 17, 18, 19, 20, 21, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 155, 156, 1100, 1106], "question": [14, 15, 16, 18, 19, 125, 127, 139, 141, 142, 143, 144, 155, 156, 1100], "With": [15, 16, 18, 23, 26, 27, 41, 42, 43, 44, 45, 46, 74, 77, 78, 79, 80, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 125, 127, 128, 139, 167, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 202, 206, 240, 243, 271, 275, 276, 298, 301, 310, 313, 316, 319, 327, 330, 343, 346, 359, 369, 386, 402, 403, 406, 418, 421, 422, 423, 426, 428, 431, 438, 441, 448, 451, 463, 466, 467, 473, 476, 478, 481, 483, 484, 485, 486, 487, 488, 491, 493, 494, 495, 496, 497, 513, 516, 518, 521, 523, 524, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 675, 679, 680, 686, 687, 688, 689, 690, 691, 695, 703, 704, 711, 714, 715, 718, 719, 758, 760, 761, 762, 763, 764, 765, 771, 773, 774, 776, 789, 790, 791, 792, 793, 813, 816, 819, 820, 823, 829, 830, 831, 834, 835, 836, 838, 839, 841, 842, 844, 858, 860, 887, 889, 902, 903, 906, 907, 908, 912, 913, 916, 917, 918, 919, 922, 923, 932, 935, 936, 939, 944, 947, 953, 956, 957, 958, 959, 962, 967, 970, 983, 986, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1089, 1090, 1093, 1107, 1108, 1109, 1110, 1111], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 77, 78, 123, 125, 127, 131, 132, 133, 134, 135, 136, 137, 139, 142, 155, 156, 206, 207, 208, 686, 742, 748, 1024, 1035, 1039, 1100], "would": [15, 18, 19, 21, 121, 123, 124, 125, 127, 130, 131, 132, 133, 136, 138, 139, 141, 143, 144, 156, 167, 188, 191, 369, 393, 397, 1100], "entir": [15, 16, 19, 70, 71, 77, 78, 117, 118, 125, 126, 127, 132, 133, 136, 141, 142, 143, 144, 156, 369, 392, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1127, 1136], "forgiven": 15, "rais": [15, 19, 70, 71, 77, 78, 117, 118, 136, 137, 139, 141, 276, 293, 296, 402, 508, 511, 630, 633, 686, 696, 721, 731, 745, 754, 766, 771, 812, 830, 854, 857, 861, 893, 895, 918, 959, 962, 963, 966, 1019, 1022, 1056, 1061, 1064, 1069, 1072, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1110, 1139, 1140, 1143, 1147], "an": [15, 16, 18, 19, 20, 21, 23, 26, 27, 29, 33, 34, 35, 36, 41, 42, 45, 46, 51, 52, 55, 56, 64, 65, 70, 71, 72, 73, 77, 78, 87, 88, 91, 92, 101, 102, 105, 106, 111, 112, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 155, 156, 167, 178, 181, 183, 186, 193, 196, 198, 199, 200, 201, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 288, 291, 293, 296, 298, 301, 316, 319, 327, 330, 333, 336, 343, 346, 354, 357, 369, 393, 397, 402, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 501, 503, 504, 508, 509, 511, 513, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 606, 608, 609, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 657, 658, 659, 660, 661, 663, 665, 666, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 697, 698, 699, 701, 703, 712, 713, 714, 727, 731, 733, 734, 735, 736, 760, 764, 765, 766, 771, 789, 790, 791, 792, 793, 807, 810, 811, 812, 813, 816, 820, 823, 829, 830, 831, 832, 834, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 861, 862, 864, 865, 867, 871, 873, 874, 876, 877, 878, 880, 881, 883, 890, 892, 893, 895, 896, 898, 918, 919, 920, 922, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 949, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 983, 989, 1001, 1002, 1005, 1007, 1009, 1010, 1011, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1110, 1111, 1116, 1117, 1139, 1140, 1143, 1144, 1145, 1147], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 123, 128, 129, 134, 135, 136, 139, 141, 144, 156, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1100, 1143, 1144, 1145, 1146, 1147, 1148], "other": [15, 18, 19, 23, 26, 27, 43, 44, 74, 77, 78, 79, 80, 89, 90, 122, 124, 125, 127, 128, 129, 132, 133, 136, 137, 139, 141, 143, 144, 154, 155, 156, 203, 204, 206, 207, 208, 402, 513, 516, 686, 687, 688, 689, 690, 691, 692, 771, 782, 783, 1007, 1013, 1015, 1024, 1035, 1039, 1056, 1077, 1080, 1085, 1088, 1100], "strong": [15, 156], "industri": 15, "back": [15, 132, 138, 139, 141, 156, 1100, 1106, 1139, 1140, 1143, 1147], "momentum": 15, "won": [15, 16, 19, 144], "ad": [15, 18, 19, 20, 119, 120, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 136, 139, 143, 156, 686, 753, 754, 830, 845, 847, 918, 932, 935, 1149, 1150], "just": [15, 16, 18, 19, 124, 125, 127, 128, 129, 136, 139, 141, 142, 156, 1056, 1057, 1060, 1127, 1136], "make": [15, 16, 18, 19, 20, 122, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 139, 141, 142, 144], "problem": [15, 19, 132, 141], "even": [15, 16, 18, 19, 123, 124, 129, 134, 135, 141, 142, 143, 144, 156, 402, 630, 633, 640, 643], "wors": 15, "rather": [15, 19, 45, 46, 77, 78, 91, 92, 122, 124, 127, 133, 144, 156, 206, 207, 208, 369, 392, 686, 733, 734, 736, 771, 789, 790, 791, 792, 793], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 129, 133], "feasibl": 15, "space": [15, 206, 207, 208, 234, 235, 237, 238, 686, 713, 771, 812], "case": [15, 18, 19, 20, 29, 33, 34, 74, 77, 78, 79, 80, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 141, 143, 144, 156, 206, 240, 243, 369, 387, 398, 401, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 473, 476, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 686, 731, 743, 744, 830, 858, 860, 918, 949, 952, 983, 986, 992, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1085, 1088, 1127, 1138, 1139, 1140, 1143, 1147], "unlik": [15, 125, 133], "charger": 15, "charact": [15, 137], "encod": [15, 142, 686, 713], "instant": [15, 1100], "messag": [15, 19, 137, 139, 141, 1152, 1153], "much": [15, 19, 122, 132, 133, 136, 139, 141, 142], "doe": [15, 19, 21, 77, 78, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 136, 139, 141, 142, 156, 402, 473, 476, 686, 731, 918, 958], "mandat": [15, 127, 136], "adopt": [15, 19, 132], "continu": [15, 16, 126, 127, 137, 156], "own": [15, 16, 18, 124, 127, 137, 139, 156], "signatur": [15, 122, 123, 124, 125, 127, 133, 134, 135, 136, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 830, 842, 844, 918, 932, 935, 953, 956, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064], "replac": [15, 19, 21, 55, 56, 77, 78, 101, 102, 125, 127, 131, 133, 134, 135, 139, 141, 144, 156, 686, 743, 744, 918, 919, 920, 921, 922, 923, 1007, 1008], "your": [15, 16, 17, 18, 20, 21, 122, 124, 142, 143, 156, 1100], "10": [15, 18, 21, 41, 42, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 125, 127, 133, 139, 141, 142, 206, 228, 237, 238, 239, 402, 448, 451, 453, 456, 488, 491, 513, 516, 533, 536, 558, 561, 568, 569, 570, 571, 572, 655, 656, 657, 658, 659, 660, 663, 686, 704, 714, 742, 748, 771, 794, 795, 796, 797, 813, 819, 830, 839, 841, 842, 844, 868, 870, 887, 889, 918, 936, 939, 958, 959, 961, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1019, 1022, 1024, 1025, 1029, 1056, 1057, 1060, 1061, 1064, 1107, 1110, 1143, 1145], "100": [15, 16, 105, 106, 127, 142, 143, 144, 156, 402, 660, 663, 1009, 1011, 1100], "despit": [15, 133, 135], "distinct": [15, 124, 133, 136, 138, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1100], "still": [15, 19, 77, 78, 124, 127, 134, 141, 143, 156, 1100], "believ": [15, 19], "share": [15, 77, 78, 125, 127, 129, 130, 133, 139, 276, 363], "bring": [15, 127, 139, 140], "benefit": [15, 16, 18, 19, 132, 133, 136, 141, 142, 156], "unrel": [15, 19], "what": [15, 16, 19, 121, 123, 124, 125, 127, 131, 133, 137, 138, 139, 141, 142, 143, 144, 155, 156, 1100], "again": [15, 16, 19, 122, 125, 127, 133, 136, 142, 144, 156], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 142], "most": [15, 18, 19, 77, 78, 122, 123, 127, 129, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 156, 830, 845, 847], "technolog": 15, "sector": [15, 41, 42, 87, 88, 402, 413, 414, 415, 416, 417, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447], "full": [15, 16, 19, 23, 26, 27, 74, 79, 80, 123, 124, 127, 134, 139, 156, 206, 276, 316, 319, 402, 533, 536, 558, 561, 813, 819, 830, 874, 876, 878, 880, 881, 883], "success": 15, "reason": [15, 19, 122, 125, 129, 132, 133, 134, 136, 139, 141, 402, 635, 638], "build": [15, 17, 18, 129, 138, 140, 143, 144, 156, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1100, 1127, 1138, 1139, 1140], "custom": [15, 127, 143], "comput": [15, 16, 18, 23, 26, 27, 41, 42, 53, 54, 75, 76, 77, 78, 87, 88, 99, 100, 127, 128, 129, 133, 139, 142, 156, 188, 190, 192, 369, 392, 402, 418, 421, 448, 451, 463, 466, 473, 476, 498, 501, 503, 504, 505, 506, 507, 528, 531, 533, 536, 553, 556, 558, 561, 588, 591, 593, 596, 598, 601, 603, 606, 610, 613, 615, 618, 620, 623, 686, 698, 699, 701, 704, 705, 771, 773, 776, 778, 780, 782, 783, 785, 787, 794, 796, 798, 800, 802, 804, 807, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 826, 828, 830, 831, 834, 836, 838, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 874, 876, 877, 878, 880, 881, 883, 893, 895, 896, 898, 902, 903, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 983, 989, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088], "thank": [15, 142], "interoper": 15, "compon": [15, 139, 771, 812], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 74, 77, 78, 79, 80, 127, 130, 134, 135, 813, 827, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1143, 1147], "pcie": 15, "interfac": [15, 144, 156], "motherboard": 15, "raid": 15, "storag": [15, 142], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 31, 32, 33, 34, 35, 36, 51, 52, 77, 78, 97, 98, 127, 129, 143, 144, 206, 210, 211, 212, 245, 248, 258, 260, 262, 263, 265, 267, 686, 692, 757, 759, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 830, 831, 832, 833, 834, 835, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 862, 864, 865, 867, 871, 873, 874, 876, 878, 880, 881, 883, 884, 886, 890, 892, 983, 985, 995], "factor": [15, 45, 46, 49, 50, 51, 52, 91, 92, 95, 96, 97, 98, 369, 390, 391, 392, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 798, 800, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 830, 831, 832, 833, 834, 835, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1143, 1144, 1145, 1146], "sata": 15, "connect": [15, 18, 143, 144, 1127, 1137, 1138], "host": [15, 156], "bu": 15, "adapt": [15, 771, 798, 800, 1143, 1146], "devic": [15, 19, 23, 26, 27, 35, 36, 40, 43, 44, 77, 78, 81, 82, 86, 89, 90, 105, 106, 121, 122, 129, 131, 134, 141, 142, 156, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 686, 714, 715, 716, 717, 718, 719, 740, 743, 744, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1116, 1117, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150], "html": [15, 21, 124, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 830, 842, 844, 918, 932, 935, 953, 956, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064], "enabl": [15, 18, 19, 74, 77, 78, 79, 80, 127, 129, 132, 133, 136, 138, 139, 140, 142, 144, 156, 771, 812], "anyon": [15, 17, 156], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 77, 78, 133, 983, 984, 993, 994], "commun": [15, 17, 19, 20, 156, 1100, 1106], "network": [15, 129, 133, 139, 143, 155, 813, 826, 1100, 1113, 1127, 1139, 1140], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 124, 125, 127, 133, 134, 136, 139, 142, 155, 156, 686, 737, 758, 1056, 1061, 1064, 1069, 1072], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 205, 276, 316, 319, 402, 418, 421, 513, 516, 610, 613, 635, 638, 660, 663], "754": [15, 205, 276, 316, 319, 402, 418, 421, 513, 516, 610, 613, 635, 638, 660, 663], "allow": [15, 19, 127, 128, 139, 156, 206, 234, 235, 237, 238, 686, 737, 1139, 1140], "calcul": [15, 53, 54, 74, 77, 78, 79, 80, 99, 100, 124, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 493, 496, 508, 511, 513, 516, 563, 566, 568, 571, 573, 576, 578, 581, 583, 586, 610, 613, 630, 633, 650, 653, 655, 658, 660, 663, 670, 674, 675, 679, 680, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088], "live": [15, 16], "depend": [15, 18, 19, 23, 26, 27, 124, 127, 128, 131, 133, 134, 139, 156, 276, 283, 286, 402, 403, 406, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 573, 576, 578, 581, 630, 633, 650, 653, 655, 658, 675, 679, 680, 830, 845, 847, 874, 876, 878, 880, 881, 883, 1019, 1023, 1045, 1046, 1049, 1051, 1054, 1107, 1111], "did": [15, 20, 144], "aris": [15, 156], "until": [15, 19, 137, 156, 1100], "substanti": [15, 19, 127, 132], "innov": 15, "growth": 15, "usag": [15, 139, 369, 392], "relev": [15, 18, 20, 125, 133, 134, 142, 1143, 1144, 1145, 1146, 1147, 1148], "area": [15, 41, 42, 87, 88, 136, 154, 402, 413, 414, 415, 416, 417, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447, 1100], "necess": 15, "parti": [15, 156], "could": [15, 16, 18, 19, 125, 127, 133, 134, 136, 139, 141, 142, 143, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "easili": [15, 19, 142, 143, 144, 156, 1100], "engag": [15, 17, 18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "regard": [15, 133], "effect": [15, 123, 124, 132, 133, 156, 206, 240, 243, 771, 802, 804, 1056, 1077, 1080, 1085, 1088], "2015": 15, "sinc": [15, 18, 19, 127, 156], "alongsid": 15, "machin": [15, 18, 129, 155, 276, 316, 319, 327, 330, 402, 528, 531, 830, 862, 864, 871, 873], "given": [15, 16, 18, 19, 20, 21, 43, 44, 53, 54, 55, 56, 77, 78, 89, 90, 99, 100, 101, 102, 105, 106, 122, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 143, 144, 155, 206, 207, 208, 214, 234, 235, 237, 238, 276, 309, 369, 381, 387, 389, 390, 391, 392, 398, 401, 686, 704, 705, 715, 716, 717, 718, 719, 743, 744, 749, 769, 771, 773, 776, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 814, 815, 816, 817, 818, 819, 820, 823, 830, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 922, 932, 935, 936, 939, 944, 947, 953, 954, 955, 956, 957, 958, 971, 974, 983, 990, 991, 1007, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1045, 1051, 1054, 1116, 1117], "frame": [15, 155], "less": [15, 19, 23, 26, 27, 41, 42, 77, 78, 87, 88, 123, 125, 133, 138, 139, 402, 408, 411, 413, 416, 423, 426, 438, 441, 478, 481, 557, 563, 566, 568, 571, 578, 581, 630, 633, 635, 638, 645, 648, 660, 663, 830, 862, 864, 871, 873, 896, 898, 1007, 1013, 1015, 1056, 1085, 1088], "matur": [15, 156], "state": [15, 123, 124, 127, 138, 139, 140, 142, 155, 276, 367, 402, 610, 613, 686, 752, 767, 768, 813, 827, 1100, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "than": [15, 19, 23, 26, 27, 45, 46, 64, 65, 77, 78, 91, 92, 111, 112, 122, 125, 127, 133, 136, 139, 142, 143, 144, 156, 206, 207, 208, 276, 316, 319, 369, 392, 402, 408, 411, 413, 416, 423, 426, 438, 441, 458, 461, 468, 471, 478, 481, 518, 521, 523, 526, 563, 566, 568, 571, 578, 581, 608, 630, 633, 635, 638, 645, 648, 660, 663, 681, 685, 686, 733, 734, 736, 771, 789, 790, 791, 792, 793, 830, 836, 838, 854, 857, 862, 864, 871, 873, 896, 898, 918, 919, 922, 936, 939, 959, 962, 1007, 1013, 1015, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1056, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088], "preced": [15, 143], "mention": [15, 18, 19, 123, 125, 129, 136], "aros": 15, "70": [15, 830, 868, 870, 1056, 1057, 1060], "80": [15, 830, 868, 870, 1056, 1057, 1060], "90": [15, 87, 88, 105, 106, 402, 473, 476, 640, 642, 643, 644, 830, 868, 870, 1009, 1011, 1056, 1057, 1060], "effort": [15, 17, 127, 156], "stage": [15, 17, 19, 21, 121, 137, 1100], "complet": [15, 19, 20, 77, 78, 132, 133, 141, 142, 830, 874, 876], "natur": [15, 125, 132, 133, 155, 402, 508, 511, 563, 566, 573, 576, 830, 877], "like": [15, 18, 19, 21, 45, 46, 91, 92, 121, 122, 123, 124, 125, 127, 128, 135, 136, 138, 139, 141, 142, 143, 144, 155, 156, 771, 789, 790, 791, 792, 793, 1007, 1013, 1015, 1100], "certainli": 15, "mission": [15, 1100], "creat": [15, 17, 18, 19, 21, 35, 36, 43, 44, 77, 78, 89, 90, 105, 106, 127, 128, 134, 135, 136, 139, 140, 143, 154, 155, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 228, 229, 230, 232, 234, 235, 237, 238, 245, 246, 248, 250, 251, 253, 254, 256, 268, 270, 271, 273, 275, 686, 714, 715, 716, 717, 718, 719, 740, 743, 744, 758, 771, 810, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1100, 1106, 1116, 1117, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 127, 129, 133, 139, 144, 369, 387, 401], "ourselv": 15, "lead": [15, 16, 74, 77, 78, 79, 80, 156, 830, 874, 876, 881, 883], "quansight": 15, "compani": 15, "made": [15, 19, 20, 133, 136, 139, 141], "organ": [15, 122, 129, 132, 133], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 139, 144], "sympi": 15, "rai": [15, 402, 438, 441], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 35, 36, 70, 71, 77, 78, 117, 118, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 155, 156, 206, 207, 208, 210, 211, 212, 245, 248, 686, 726, 770, 830, 896, 898, 983, 984, 1007, 1013, 1015, 1019, 1021, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1103, 1105, 1107, 1109, 1127, 1137, 1138, 1141, 1142], "member": [15, 19], "googl": [15, 1100], "octoml": 15, "einop": [15, 77, 78, 686, 708, 709, 710], "further": [15, 16, 19, 21, 125, 128, 132, 138, 142, 143, 1100], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 49, 50, 95, 96, 105, 106, 121, 133, 142, 686, 695, 703, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 830, 842, 844, 868, 870, 983, 986, 999, 1000, 1009, 1011, 1100, 1106], "shaw": 15, "co": [15, 41, 42, 87, 88, 139, 155, 402, 487, 686, 713, 1100], "intel": 15, "togeth": [15, 77, 78, 132, 133, 137, 143, 144, 156, 1149, 1150], "major": [15, 127, 128, 134, 135, 156, 1019, 1022, 1107, 1110], "involv": [15, 17, 21, 121, 134, 144, 276, 354, 357, 402, 418, 421, 610, 613, 1100, 1106], "anoth": [15, 18, 19, 77, 78, 127, 128, 129, 133, 134, 141, 144, 206, 223, 226, 276, 288, 291, 298, 301], "promis": 15, "sign": [15, 18, 41, 42, 87, 88, 140, 144, 206, 207, 208, 402, 403, 406, 418, 421, 438, 441, 468, 471, 610, 613, 635, 636, 637, 638, 639, 649, 830, 877, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1073, 1076, 1081, 1084], "pursuit": 15, "unif": [15, 17, 141, 1100, 1106], "clearli": [15, 19, 20, 125, 127], "lot": [15, 16, 131, 141, 156], "thought": [15, 18, 19, 123], "care": [15, 19, 144], "attent": [15, 19, 132, 133, 813, 828, 829, 1127, 1138], "gone": [15, 138], "simplifi": [15, 139, 140, 141, 143], "compat": [15, 23, 26, 27, 41, 42, 70, 71, 74, 79, 80, 87, 88, 117, 118, 123, 156, 276, 293, 296, 402, 418, 419, 420, 421, 422, 438, 439, 440, 441, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 620, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 670, 671, 672, 673, 674, 830, 862, 864, 871, 873, 878, 880, 887, 889, 893, 895, 896, 898, 918, 949, 952, 1019, 1021, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1109], "excit": [15, 17, 121, 1100], "complianc": 15, "hope": [15, 156], "due": [15, 18, 23, 26, 27, 128, 133, 136, 402, 610, 613], "suit": [15, 18, 121, 126, 127, 142, 155], "some": [15, 16, 18, 19, 20, 77, 78, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 155, 156, 402, 513, 516, 771, 773, 776, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 811, 813, 825, 1100, 1127, 1135], "motiv": [15, 141], "great": [15, 16, 127, 139, 141], "convinc": 15, "celebr": 15, "encourag": [15, 155, 156, 1100, 1106], "foundat": 15, "point": [16, 19, 41, 42, 51, 52, 87, 88, 97, 98, 123, 124, 125, 127, 132, 136, 139, 141, 142, 155, 198, 199, 200, 201, 205, 206, 207, 208, 214, 220, 221, 228, 250, 251, 268, 270, 276, 283, 286, 316, 319, 338, 341, 354, 357, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 473, 476, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 610, 613, 630, 633, 635, 638, 640, 643, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 675, 676, 677, 678, 679, 680, 681, 685, 830, 831, 832, 833, 834, 835, 839, 841, 845, 847, 848, 850, 851, 853, 862, 864, 871, 873, 874, 876, 878, 880, 881, 883, 896, 898, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088], "mai": [16, 18, 19, 23, 26, 27, 41, 42, 87, 88, 127, 128, 133, 141, 143, 206, 207, 208, 223, 226, 369, 393, 397, 402, 498, 499, 500, 501, 502, 533, 536, 558, 561, 593, 596, 598, 601, 620, 621, 622, 624, 686, 707, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072], "ask": [16, 139, 141, 156, 1100], "perfectli": 16, "happi": [16, 18, 156], "abund": 16, "better": [16, 121, 128, 137, 138, 141, 142, 143], "ll": [16, 17, 19, 125, 133, 136, 142], "give": [16, 18, 19, 121, 123, 124, 125, 130, 141, 918, 949, 952], "two": [16, 35, 36, 51, 52, 74, 79, 80, 97, 98, 124, 125, 127, 128, 132, 133, 138, 142, 144, 206, 207, 208, 220, 221, 240, 243, 258, 260, 262, 263, 265, 267, 276, 353, 363, 402, 468, 471, 640, 643, 686, 694, 830, 831, 832, 833, 834, 835, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 890, 892, 893, 895, 918, 967, 970, 1024, 1025, 1029, 1030, 1034, 1035, 1039, 1040, 1044, 1100], "streamlin": 16, "workflow": [16, 19, 142, 154, 1100], "save": [16, 77, 78, 127, 137, 156, 686, 750, 1139, 1140], "week": [16, 19, 20, 1100], "let": [16, 124, 125, 127, 128, 133, 134, 135, 139, 141, 142, 143, 144, 1056, 1065, 1068, 1077, 1080, 1081, 1084, 1085, 1088, 1100], "sai": [16, 18, 131, 141], "deepmind": 16, "releas": [16, 18, 20, 1100], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 136, 142, 1056, 1077, 1080, 1085, 1088], "perceiverio": 16, "happen": [16, 18, 19, 127, 142], "slew": 16, "rush": 16, "f": [16, 21, 121, 127, 133, 137, 139, 142, 144, 402, 528, 531, 686, 728, 732, 983, 986, 999, 1000], "g": [16, 121, 133, 156, 276, 282, 354, 357, 369, 372, 983, 986, 999, 1007, 1012, 1013, 1015, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1069, 1072, 1073, 1076, 1081, 1084], "inevit": 16, "deviat": [16, 57, 58, 103, 104, 127, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1012, 1056, 1077, 1080, 1141, 1142], "origin": [16, 19, 55, 56, 74, 77, 78, 79, 80, 101, 102, 128, 130, 131, 134, 139, 141, 402, 438, 441, 830, 858, 860, 918, 949, 952, 953, 954, 955, 956, 957], "often": [16, 127, 129, 137, 156], "erron": 16, "train": [16, 45, 46, 91, 92, 129, 133, 135, 142, 143, 144, 154, 155, 156, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1100], "poor": 16, "converg": 16, "perform": [16, 70, 71, 77, 78, 117, 118, 122, 123, 125, 127, 129, 130, 132, 133, 135, 136, 139, 142, 156, 167, 188, 191, 206, 234, 235, 237, 238, 686, 704, 708, 709, 710, 729, 730, 731, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 825, 827, 830, 881, 883, 979, 980, 981, 982, 983, 990, 991, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "issu": [16, 17, 20, 127, 139, 141, 143, 156], "etc": [16, 18, 19, 20, 43, 44, 72, 73, 77, 78, 89, 90, 105, 106, 119, 120, 122, 123, 125, 127, 132, 133, 134, 139, 141, 142, 156, 206, 234, 235, 237, 238, 686, 714, 715, 716, 717, 718, 719, 740, 743, 744, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150], "publish": [16, 156], "manag": [16, 17, 136, 156], "get": [16, 17, 18, 20, 77, 78, 121, 127, 129, 134, 135, 136, 139, 140, 141, 142, 143, 276, 310, 313, 315, 316, 319, 327, 330, 369, 375, 376, 379, 381, 382, 387, 391, 398, 401, 686, 693, 720, 721, 722, 723, 742, 752, 1100, 1106, 1127, 1136], "work": [16, 18, 19, 20, 121, 127, 128, 133, 134, 135, 138, 139, 140, 141, 143, 144, 1100, 1106], "repositori": [16, 18, 19, 21, 126, 137], "pull": [16, 17, 18, 21, 122, 156], "request": [16, 17, 122, 369, 384], "confus": [16, 136], "do": [16, 18, 19, 20, 45, 46, 77, 78, 91, 92, 122, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 156, 402, 635, 638, 686, 731, 771, 789, 790, 791, 792, 793, 811, 983, 984, 993, 994, 995], "don": [16, 18, 19, 20, 72, 73, 119, 120, 127, 134, 143, 156], "expect": [16, 19, 127, 156, 686, 693, 1100], "codebas": [16, 17, 121, 122, 136, 138, 369, 390, 391, 1100], "total": [16, 17, 19, 74, 77, 78, 79, 80, 125, 127, 135, 142, 143, 156, 369, 398, 1019, 1022, 1056, 1077, 1080, 1085, 1088, 1107, 1110], "hour": 16, "spent": 16, "spin": 16, "off": [16, 138, 830, 842, 844, 890, 892], "test": [16, 18, 20, 41, 42, 70, 71, 87, 88, 117, 118, 121, 125, 137, 156, 276, 333, 336, 343, 346, 402, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "error": [16, 18, 41, 42, 77, 78, 87, 88, 123, 125, 127, 132, 135, 137, 141, 156, 167, 168, 171, 402, 503, 504, 505, 506, 507, 1056, 1061, 1064, 1069, 1072, 1139, 1140, 1143, 1147], "iter": [16, 29, 31, 32, 33, 34, 43, 44, 72, 73, 74, 77, 78, 79, 80, 89, 90, 119, 120, 133, 139, 142, 203, 204, 369, 392, 686, 687, 688, 689, 690, 691, 918, 928, 931, 944, 947, 958, 971, 974, 975, 978, 983, 984, 985, 986, 989, 993, 994, 995, 1000], "address": [16, 19, 20, 132, 139], "sake": 16, "singl": [16, 19, 77, 78, 122, 123, 125, 127, 129, 131, 133, 136, 139, 142, 143, 144, 156, 686, 765, 770, 1007, 1012, 1013, 1015, 1024, 1025, 1029], "multipl": [16, 19, 57, 58, 70, 71, 77, 78, 87, 88, 89, 90, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 117, 118, 125, 129, 133, 156, 402, 418, 422, 463, 467, 608, 609, 610, 613, 686, 687, 689, 690, 691, 715, 719, 737, 771, 789, 791, 792, 793, 830, 831, 834, 835, 851, 853, 918, 919, 922, 923, 953, 956, 957, 958, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1011, 1019, 1020, 1021, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1127, 1137], "line": [16, 18, 125, 127, 132, 137, 140, 141, 142, 143, 154, 1100, 1106], "convert": [16, 29, 31, 32, 33, 34, 35, 36, 77, 78, 127, 132, 139, 156, 157, 165, 206, 210, 211, 212, 245, 248, 276, 281, 282, 369, 372, 373, 374, 375, 387, 398, 401, 686, 757, 759, 760, 764, 765, 830, 899, 901, 983, 985, 995, 996, 1117], "directli": [16, 19, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 139, 141, 143, 144, 155, 156, 983, 995], "graph": [16, 23, 26, 27, 129, 133, 140, 156, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1139, 1140], "guarante": [16, 132, 156, 1024, 1025, 1029], "turn": [16, 125, 127, 133], "4": [16, 21, 23, 26, 27, 41, 42, 45, 46, 51, 52, 55, 56, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 125, 127, 130, 133, 139, 141, 142, 143, 144, 167, 173, 176, 178, 181, 188, 191, 198, 199, 201, 206, 229, 232, 240, 243, 253, 256, 271, 275, 276, 298, 300, 301, 302, 310, 313, 316, 319, 343, 346, 369, 381, 386, 390, 402, 403, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 430, 431, 432, 438, 440, 441, 442, 448, 451, 463, 464, 465, 466, 467, 473, 476, 478, 480, 481, 483, 486, 488, 491, 493, 494, 495, 496, 497, 513, 515, 516, 518, 520, 521, 523, 524, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 650, 652, 653, 654, 655, 658, 660, 663, 665, 668, 675, 676, 678, 679, 680, 686, 695, 704, 713, 714, 715, 717, 718, 719, 736, 758, 771, 773, 775, 776, 777, 789, 790, 791, 792, 793, 813, 816, 817, 818, 820, 823, 827, 829, 830, 831, 832, 834, 836, 838, 839, 841, 842, 844, 851, 853, 862, 864, 868, 870, 887, 889, 890, 892, 902, 913, 916, 918, 919, 920, 921, 922, 923, 924, 927, 932, 935, 936, 939, 944, 946, 947, 948, 949, 952, 953, 955, 956, 957, 958, 959, 962, 967, 970, 983, 986, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1089, 1090, 1093, 1100, 1107, 1108, 1109, 1110, 1111, 1143, 1144, 1145, 1146, 1148], "step": [16, 18, 19, 21, 45, 46, 77, 78, 81, 82, 91, 92, 125, 130, 132, 133, 134, 135, 139, 142, 143, 144, 155, 206, 207, 208, 209, 234, 235, 237, 238, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 785, 787, 794, 795, 796, 797, 798, 800, 802, 804, 979, 980, 981, 982, 1100, 1143, 1144, 1145, 1146, 1147, 1148], "take": [16, 17, 18, 19, 124, 125, 127, 133, 134, 135, 139, 141, 143, 144, 156, 402, 473, 476, 1100, 1106], "few": [16, 19, 20, 127, 129, 133, 134, 135, 136, 137, 140, 141, 142, 143, 154, 1100, 1106], "second": [16, 18, 23, 26, 27, 41, 42, 45, 46, 64, 65, 74, 79, 80, 87, 88, 91, 92, 111, 112, 125, 127, 128, 136, 141, 276, 353, 363, 402, 418, 419, 420, 421, 422, 438, 439, 440, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 498, 499, 501, 523, 526, 528, 529, 533, 534, 536, 553, 554, 556, 558, 559, 561, 583, 584, 586, 588, 589, 591, 598, 599, 601, 603, 604, 606, 610, 611, 613, 620, 621, 623, 630, 631, 633, 670, 671, 672, 673, 674, 686, 694, 742, 748, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 830, 836, 838, 842, 844, 845, 847, 854, 857, 868, 870, 874, 876, 881, 883, 887, 889, 893, 895, 918, 963, 966, 967, 970, 979, 981, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1143, 1144, 1145], "automat": [16, 18, 19, 121, 123, 129, 133, 138, 139, 140, 143, 144, 1100], "convers": [16, 30, 31, 32, 33, 34, 77, 78, 138, 140, 144, 155, 156, 1100, 1106], "everyon": [16, 17, 19, 156], "regardless": [16, 17, 77, 78, 141, 144, 203, 204], "wouldn": 16, "nice": [16, 127], "write": [16, 19, 20, 21, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 71, 75, 76, 77, 78, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118, 121, 122, 124, 125, 129, 130, 136, 139, 141, 144, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 293, 296, 369, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 705, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 727, 740, 743, 744, 771, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1023, 1024, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1111], "onc": [16, 18, 19, 127, 133, 134, 135, 139, 142, 156, 369, 392, 830, 851, 853, 881, 883, 1007, 1008], "know": [16, 19, 127, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "among": [16, 77, 78, 127], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 129, 139], "understand": [16, 18, 19, 20, 21, 121, 123, 124, 125, 126, 128, 137, 138], "pattern": [16, 77, 78, 124, 134, 686, 708, 709, 710], "hasn": 16, "chang": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 124, 126, 127, 128, 133, 139, 143, 156, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 215, 216, 223, 224, 229, 230, 245, 246, 253, 254, 258, 260, 263, 265, 271, 273, 298, 299, 300, 302, 376, 377, 378, 380, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 760, 761, 762, 763, 773, 774, 775, 777, 789, 790, 791, 793, 820, 821, 822, 824, 830, 831, 832, 833, 835, 836, 838, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 944, 945, 946, 948, 949, 952, 953, 954, 955, 957, 959, 960, 961, 983, 985, 995, 1002, 1003, 1004, 1006, 1009, 1011, 1030, 1031, 1032, 1033, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1106], "now": [16, 18, 21, 77, 78, 122, 123, 127, 131, 133, 134, 137, 141, 142, 144, 155, 156, 206, 271, 275, 1127, 1138, 1139, 1140], "spend": 16, "torchvis": 16, "probabl": [16, 127, 813, 825, 1007, 1008, 1127, 1135], "sonnet": 16, "about": [16, 18, 19, 126, 127, 138, 139, 143, 144, 156, 276, 316, 319, 327, 330], "next": [16, 18, 19, 20, 21, 124, 125, 130, 131, 137, 141, 142, 276, 316, 319, 1100, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148], "everyth": [16, 19, 20, 127, 140, 156], "zero": [16, 23, 26, 27, 35, 36, 41, 42, 45, 46, 70, 71, 74, 77, 78, 79, 80, 87, 88, 91, 92, 117, 118, 123, 125, 127, 132, 133, 134, 135, 139, 142, 143, 167, 173, 176, 178, 181, 206, 214, 220, 221, 240, 243, 258, 260, 262, 263, 265, 267, 271, 273, 275, 276, 283, 286, 402, 418, 421, 423, 426, 428, 431, 438, 441, 458, 461, 483, 484, 486, 488, 491, 513, 516, 518, 521, 543, 546, 593, 596, 598, 601, 608, 609, 610, 613, 615, 618, 620, 623, 630, 633, 635, 638, 640, 643, 650, 653, 655, 656, 657, 659, 660, 663, 665, 668, 675, 679, 680, 686, 704, 740, 743, 744, 771, 773, 774, 775, 776, 777, 778, 780, 789, 792, 794, 796, 798, 800, 813, 825, 830, 831, 834, 839, 841, 854, 857, 862, 864, 871, 873, 893, 895, 896, 898, 918, 932, 935, 936, 939, 953, 956, 975, 978, 1001, 1002, 1005, 1007, 1009, 1010, 1019, 1020, 1021, 1022, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1110, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1143, 1144, 1145, 1146], "need": [16, 18, 19, 20, 21, 122, 124, 125, 126, 128, 129, 132, 133, 136, 139, 141, 142, 155, 156, 686, 698, 699, 701, 918, 919, 922, 932, 935], "said": 16, "high": [16, 20, 77, 78, 105, 106, 142, 1007, 1009, 1010, 1011, 1013, 1014, 1015, 1016], "level": [16, 17, 20, 129, 138, 139, 142, 143, 144, 156], "optim": [16, 136, 140, 142, 144, 155, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 979, 980, 981, 982, 1100, 1144, 1145, 1146, 1148], "trainer": [16, 154, 156, 1100], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 144], "flax": [16, 144, 156], "trax": [16, 144], "objax": [16, 144], "idea": [16, 128, 137, 155], "fulli": [16, 123, 132, 133, 139, 140, 141, 142, 143, 144, 156, 1127, 1137, 1138], "offer": [16, 143], "strongli": [17, 18, 1100, 1106], "welcom": [17, 18, 19, 1100, 1106], "absolut": [17, 41, 42, 77, 78, 87, 88, 402, 403, 404, 405, 406, 407, 830, 877], "skill": 17, "whether": [17, 18, 23, 26, 27, 29, 31, 32, 33, 34, 43, 44, 45, 46, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 119, 120, 123, 133, 134, 136, 167, 168, 170, 171, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 203, 204, 276, 283, 286, 298, 300, 302, 309, 310, 313, 332, 333, 336, 338, 341, 343, 346, 348, 351, 368, 369, 375, 376, 379, 383, 384, 387, 388, 392, 399, 401, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 551, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 704, 707, 711, 713, 715, 717, 719, 723, 724, 726, 728, 731, 732, 733, 734, 735, 736, 737, 747, 749, 751, 755, 760, 761, 763, 767, 769, 770, 771, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 812, 813, 825, 830, 831, 833, 835, 845, 847, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 979, 980, 981, 982, 983, 984, 985, 989, 993, 994, 995, 996, 1002, 1004, 1006, 1007, 1008, 1030, 1031, 1033, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1116, 1117, 1127, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 77, 78, 81, 82, 121, 124, 125, 128, 134, 138, 139, 141, 142, 143, 155, 156, 206, 207, 208, 209, 234, 235, 236, 237, 238, 239, 369, 371], "aspect": [17, 142, 1100], "guid": [17, 18, 19, 137, 1100], "through": [17, 19, 20, 121, 125, 127, 128, 129, 130, 133, 137, 138, 139, 141, 142, 143, 144, 155, 402, 438, 441, 983, 986], "journei": [17, 1100, 1106], "inclusvi": 17, "big": [17, 156], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 138, 1100], "split": [17, 19, 23, 26, 27, 77, 78, 138, 139, 156, 369, 390, 391, 392, 686, 737, 918, 1100], "section": [17, 19, 20, 121, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "below": [17, 18, 20, 21, 35, 36, 121, 122, 125, 127, 129, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 155, 206, 258, 260, 262, 263, 265, 267, 402, 438, 441, 448, 451, 473, 476, 488, 491, 640, 643, 680, 830, 839, 841, 842, 844, 890, 892, 918, 932, 935, 936, 939, 1024, 1025, 1029, 1045, 1046, 1049, 1100], "best": [17, 18, 19, 20, 21, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 686, 737], "go": [17, 18, 19, 20, 121, 122, 125, 128, 133, 138, 142, 156, 983, 994], "finish": [17, 18, 121, 1100], "dive": [17, 19, 20, 133, 138, 141, 142, 156, 1100], "right": [17, 18, 19, 77, 78, 121, 125, 142, 402, 458, 461, 468, 471, 830, 881, 883], "environ": [17, 19, 21, 155], "basic": [17, 20, 21], "fork": [17, 18, 686, 738], "doc": [17, 20, 123, 124, 139, 142, 143, 1100], "document": [17, 19, 127, 128, 140, 142, 144], "local": [17, 18, 21, 129], "task": [17, 19, 155, 979, 980, 981, 982, 1100], "help": [17, 18, 125, 127, 128, 130, 132, 133, 141, 142, 143, 154, 686, 692, 1056, 1081, 1084, 1100], "video": [17, 19, 122, 123, 124, 125, 127, 128, 129, 130], "realli": [18, 133, 156], "contribut": [18, 19, 20, 139, 1106], "toward": [18, 55, 56, 101, 102, 139, 918, 953, 954, 955, 956, 957, 1100, 1106], "page": [18, 19, 140, 144, 154, 1100, 1106], "explain": [18, 19, 20, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 1100, 1106], "main": [18, 21, 35, 36, 131, 133, 206, 220, 221, 258, 260, 262, 263, 265, 267, 830, 842, 844, 890, 892], "prefer": [18, 128, 133], "mode": [18, 19, 51, 52, 77, 78, 125, 133, 156, 203, 204, 369, 392, 402, 418, 421, 610, 613, 686, 723, 747, 749, 767, 768, 830, 874, 875, 876], "git": [18, 19, 127], "recurs": [18, 21, 29, 31, 32, 33, 34, 77, 78, 129, 133, 143, 156, 983, 984, 985, 993, 994, 995], "submodul": [18, 19, 20, 21, 126, 127, 129, 135, 138, 139, 143, 1100, 1141, 1142, 1149, 1150], "com": 18, "unifyai": [18, 19, 21], "http": [18, 124, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 771, 773, 776, 778, 780, 830, 842, 844, 918, 932, 935, 953, 956, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1107, 1108], "gh": 18, "your_fold": 18, "id": [18, 132, 133, 137, 369, 375, 1139, 1140], "cours": [18, 19, 125, 142, 156], "whatev": [18, 156], "integr": [18, 276, 283, 286], "familiar": [18, 20], "decid": [18, 77, 78, 128, 983, 994], "sure": [18, 20, 126, 127], "elig": 18, "free": [18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 155, 1100], "student": 18, "licenc": 18, "peopl": [18, 19, 121], "seem": [18, 143, 156], "miss": [18, 125, 127, 132, 133, 137, 1143, 1147], "add": [18, 19, 20, 23, 26, 27, 41, 42, 57, 58, 72, 73, 74, 77, 78, 79, 80, 87, 88, 89, 90, 103, 104, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 139, 141, 156, 402, 403, 406, 422, 608, 609, 687, 691, 771, 812, 1001, 1002, 1003, 1004, 1005, 1006, 1100, 1106, 1141, 1142], "explicit": [18, 21, 133, 134, 136, 139, 156], "remind": 18, "channel": [18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 686, 713, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137], "pace": 18, "updat": [18, 19, 20, 21, 45, 46, 77, 78, 91, 92, 121, 123, 125, 126, 131, 132, 133, 134, 139, 141, 142, 144, 156, 686, 731, 743, 744, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 827, 979, 980, 981, 983, 990, 991, 999, 1000, 1116, 1117, 1143, 1144, 1145, 1146, 1147, 1148], "suggest": [18, 19, 122, 127], "latest": [18, 19, 20, 21, 124, 156, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 830, 842, 844, 918, 932, 935, 953, 956, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1107, 1108, 1127, 1136], "packag": [18, 21, 128, 137, 156], "ensur": [18, 19, 123, 127, 128, 132, 134, 137, 686, 731], "align": [18, 77, 78, 139, 141, 1100, 1106], "accord": [18, 21, 37, 38, 77, 78, 83, 84, 128, 129, 134, 276, 298, 299, 300, 301, 302, 309, 316, 319, 402, 418, 421, 468, 471, 610, 613, 686, 714, 743, 744, 830, 893, 895, 918, 928, 931, 975, 978, 1056, 1077, 1080, 1085, 1088], "stabl": [18, 66, 67, 113, 114, 139, 156, 686, 721, 722, 745, 746, 753, 754, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055], "pypi": [18, 20, 156], "mayb": [18, 29, 33, 34, 139, 141], "person": [18, 19], "experi": [18, 140, 142, 156], "avoid": [18, 19, 127, 130, 131, 133, 137, 141, 402, 513, 516], "pip": [18, 155, 1100], "instal": [18, 19, 21, 137, 155, 1100], "abil": [18, 140, 156], "certain": [18, 77, 78, 127, 128, 134, 156, 206, 207, 208, 234, 235, 237, 238], "perhap": [18, 141, 142, 143, 156], "keep": [18, 19, 77, 78, 126, 127, 133, 140, 142, 144, 686, 769], "track": [18, 19, 983, 995, 1139, 1140], "termin": [18, 19, 21, 74, 77, 78, 79, 80, 133, 139, 142], "run": [18, 21, 45, 46, 91, 92, 123, 125, 126, 127, 130, 137, 139, 140, 141, 142, 143, 144, 155, 156, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 979, 980, 981, 982, 1127, 1138, 1139, 1140], "command": [18, 21, 1100], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 26, 27, 64, 65, 111, 112, 124, 127, 128, 134, 137, 139, 141, 142, 144, 203, 204, 686, 692, 830, 845, 847, 874, 876, 881, 883, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034], "3": [18, 21, 23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 74, 75, 76, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 125, 127, 130, 133, 139, 141, 142, 143, 144, 167, 168, 169, 170, 172, 173, 176, 178, 181, 183, 186, 188, 191, 198, 199, 201, 205, 206, 229, 232, 240, 243, 253, 256, 268, 270, 271, 275, 276, 298, 299, 300, 301, 302, 310, 313, 316, 319, 343, 346, 369, 375, 386, 390, 393, 397, 402, 403, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 448, 451, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 480, 481, 483, 484, 486, 488, 491, 493, 494, 495, 496, 497, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 533, 536, 543, 546, 553, 556, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 678, 679, 680, 686, 687, 688, 689, 694, 695, 704, 711, 714, 715, 716, 717, 718, 719, 736, 751, 758, 765, 771, 773, 774, 775, 776, 777, 789, 792, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 851, 853, 862, 864, 868, 870, 881, 883, 887, 889, 890, 892, 899, 901, 902, 903, 905, 906, 907, 908, 910, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 932, 935, 936, 939, 944, 946, 947, 948, 949, 952, 953, 955, 956, 957, 958, 959, 962, 967, 970, 983, 986, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1073, 1076, 1081, 1084, 1089, 1090, 1093, 1100, 1107, 1108, 1109, 1110, 1111], "8": [18, 21, 23, 26, 27, 41, 42, 53, 54, 55, 56, 74, 79, 80, 87, 88, 91, 92, 99, 100, 105, 106, 125, 127, 133, 138, 142, 167, 183, 186, 206, 271, 275, 276, 309, 316, 319, 369, 381, 398, 402, 418, 421, 422, 428, 431, 432, 448, 451, 478, 481, 488, 491, 523, 524, 525, 526, 527, 533, 536, 558, 561, 608, 609, 635, 636, 640, 642, 643, 644, 645, 646, 647, 648, 649, 660, 663, 665, 668, 680, 686, 695, 714, 736, 771, 773, 776, 789, 791, 792, 793, 813, 820, 823, 830, 836, 838, 839, 841, 842, 844, 868, 870, 887, 889, 902, 903, 904, 905, 906, 907, 908, 910, 912, 913, 914, 915, 917, 918, 919, 920, 922, 936, 939, 958, 1007, 1008, 1009, 1010, 1011, 1019, 1023, 1024, 1025, 1029, 1056, 1057, 1060, 1100, 1107, 1111, 1127, 1138], "activ": [18, 19, 21, 25, 72, 73, 76, 119, 120, 122, 143, 168, 171, 173, 176, 178, 180, 181, 182, 183, 186, 188, 191, 193, 196, 198, 202, 1100, 1114, 1115], "setup": [18, 19], "click": [18, 19, 124, 1100], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 144, 369, 393, 397, 402, 593, 596, 598, 601, 1019, 1023, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1107, 1111], "left": [18, 19, 77, 78, 125, 134, 402, 458, 461, 830, 845, 847, 858, 860, 881, 883, 1019, 1020, 1100, 1107, 1108], "panel": 18, "select": [18, 19, 127, 139, 141, 144, 156], "drop": [18, 156], "down": [18, 127, 141], "path": [18, 21], "manual": [18, 19, 127, 143, 983, 984, 993, 994], "builtin": [18, 21, 141, 143], "requir": [18, 21, 122, 123, 124, 125, 127, 131, 132, 134, 135, 141, 156, 203, 204, 402, 660, 663, 830, 845, 847, 918, 963, 966, 1116, 1117], "cmd": [18, 21], "directori": [18, 19, 21, 127, 128, 686, 750], "folder": [18, 19, 21, 122, 126, 127, 129], "file": [18, 19, 21, 77, 78, 122, 124, 127, 129, 130, 132, 133, 137, 139, 142, 686, 750, 1139, 1140], "abov": [18, 19, 21, 35, 36, 105, 106, 123, 124, 125, 127, 128, 129, 130, 132, 133, 136, 137, 141, 142, 143, 144, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 610, 613, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 813, 816, 820, 823, 829, 830, 831, 834, 839, 841, 842, 844, 845, 847, 890, 892, 918, 932, 935, 936, 939, 953, 956, 1001, 1002, 1005, 1007, 1009, 1010, 1011, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1073, 1076, 1077, 1080, 1081, 1084, 1089, 1090, 1093, 1107, 1108], "m": [18, 19, 21, 35, 36, 51, 52, 97, 98, 121, 139, 206, 240, 243, 258, 260, 262, 263, 265, 267, 686, 695, 830, 831, 832, 833, 834, 835, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 878, 880, 881, 883, 884, 886, 890, 892, 1007, 1012, 1013, 1015], "python3": [18, 19, 21], "script": [18, 19, 21, 125, 139, 156], "bat": [18, 19, 21], "OR": [18, 19, 21, 70, 71, 117, 118, 402, 463, 466, 598, 601, 1089, 1095, 1096, 1097, 1098, 1099], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 74, 77, 78, 79, 80, 124, 132, 133, 137, 369, 382], "os": 18, "note": [18, 19, 122, 124, 125, 127, 133, 134, 402, 635, 638, 830, 845, 847, 881, 883, 918, 963, 966, 1024, 1030, 1034, 1056, 1065, 1068], "tick": [18, 19], "abl": [18, 19, 77, 78, 129, 134, 136, 137, 141, 144], "To": [18, 125, 127, 129, 133, 137, 142, 143, 144, 1100], "ivy_test": [18, 19], "test_array_api": [18, 19, 126, 127], "cd": [18, 19, 21], "r": [18, 77, 78, 686, 695, 769, 830, 874, 876, 899, 901], "txt": 18, "visual": [18, 137, 156], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 138, 402, 513, 516], "conflict": [18, 19, 142], "addit": [18, 19, 57, 58, 77, 78, 103, 104, 122, 124, 127, 128, 133, 134, 141, 142, 144, 369, 393, 397, 402, 418, 421, 686, 708, 709, 710, 1001, 1002, 1003, 1004, 1005, 1006, 1127, 1137], "yet": [18, 20, 133], "particular": [18, 19, 122, 125, 127, 134, 136, 402, 403, 406], "system": [18, 19, 156, 830, 878, 880], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": [18, 128], "imag": [18, 21, 48, 49, 50, 94, 95, 96, 122, 139, 140, 142, 144, 155, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 1100], "profession": 18, "execut": [18, 19, 21, 133, 136, 139, 141, 144, 156, 686, 766], "deploy": 18, "top": [18, 19, 127, 128, 142, 143, 1100], "press": [18, 142, 1100], "ok": 18, "correctli": [18, 77, 78, 123, 127, 133, 134, 137, 143, 156, 830, 858, 860, 1019, 1020, 1107, 1108], "caus": [18, 19, 125, 127, 133, 136, 137, 156], "earlier": [18, 19], "might": [18, 19, 122, 127, 131, 134, 139, 141, 142, 686, 707], "necessari": [18, 125, 130, 133, 136], "virtualis": 18, "detail": [18, 19, 20, 122, 123, 126, 127, 129, 130, 131, 133, 142, 143, 206, 223, 226, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 77, 78, 89, 90, 206, 240, 243, 686, 698, 699, 700, 701, 813, 825, 830, 858, 860, 896, 898, 1127, 1135], "keyr": 18, "fssl": 18, "download": [18, 127], "gpg": 18, "dearmor": 18, "o": [18, 121, 139, 686, 695], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 144, 156], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 57, 58, 72, 73, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 119, 120, 122, 123, 125, 127, 128, 133, 134, 135, 137, 139, 142, 143, 144, 156, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 206, 207, 208, 210, 211, 212, 240, 241, 243, 245, 248, 276, 288, 289, 291, 298, 300, 302, 369, 375, 392, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 695, 715, 717, 719, 758, 760, 761, 763, 769, 771, 773, 775, 777, 789, 791, 793, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 830, 831, 833, 835, 887, 889, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 919, 921, 923, 924, 927, 936, 939, 953, 955, 957, 958, 963, 966, 983, 984, 985, 986, 989, 994, 995, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1011, 1019, 1022, 1024, 1030, 1031, 1033, 1034, 1090, 1092, 1094, 1095, 1097, 1099, 1100, 1107, 1110, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "dev": [18, 39, 40, 77, 78, 85, 86, 129, 135, 139, 141, 143, 369, 380, 382], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 127, 133, 156], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 127, 137, 155, 369], "post": [18, 57, 58, 103, 104, 144, 1001, 1002, 1003, 1004, 1005, 1006, 1100, 1106], "It": [18, 19, 21, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 71, 75, 76, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118, 121, 122, 124, 125, 127, 128, 130, 132, 133, 134, 136, 139, 141, 142, 143, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 293, 296, 369, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 727, 740, 743, 744, 771, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1023, 1024, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1111], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 123, 124, 125, 127, 129, 133, 136, 139, 141, 142, 156], "featur": [18, 122, 123, 142, 1100], "vm": 18, "azur": 18, "cloud": [18, 155], "mean": [18, 19, 68, 69, 77, 78, 115, 116, 119, 120, 121, 125, 127, 129, 133, 134, 135, 136, 139, 141, 142, 143, 144, 155, 156, 369, 392, 686, 709, 979, 980, 981, 982, 983, 989, 1007, 1012, 1024, 1025, 1029, 1056, 1100, 1118], "configur": [18, 19, 21, 77, 78, 134, 369, 391, 983, 996], "defin": [18, 20, 105, 106, 122, 123, 124, 127, 134, 141, 143, 156, 402, 610, 613, 635, 638, 686, 740, 830, 836, 838, 845, 847, 878, 880, 1007, 1009, 1010, 1011, 1056, 1061, 1064, 1065, 1068, 1069, 1072], "dockerfil": [18, 21], "longer": [18, 127, 134, 136], "worri": 18, "platform": 18, "agnost": [18, 123, 132, 139, 141, 144, 156, 1100], "usual": [18, 127, 128], "studio": 18, "favourit": 18, "extens": [18, 19, 124, 127, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 830, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 956, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1089, 1090, 1093], "theme": 18, "too": [18, 19, 137, 156, 402, 418, 421, 610, 613], "done": [18, 19, 125, 127, 137, 142], "unsupport": [18, 128, 137, 276, 324, 325], "old": [18, 77, 78, 136], "slow": 18, "ipad": 18, "long": [18, 19, 125, 813, 827], "browser": 18, "cool": [18, 122], "requisit": 18, "head": [18, 133, 813, 828, 1100, 1127, 1138], "pane": [18, 19], "readi": [18, 20], "begin": [18, 983, 984, 994], "outlin": [18, 19, 20, 121, 124, 127, 129, 133, 136, 141], "green": [18, 19, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 1152, 1153], "dropdown": 18, "tab": [18, 142, 1100], "master": [18, 19, 133], "vs": [18, 127], "view": [18, 19, 206, 223, 226, 813, 816, 820, 823], "log": [18, 19, 41, 42, 87, 88, 129, 133, 136, 139, 142, 206, 237, 238, 402, 567, 573, 576, 583, 586, 830, 877, 1100], "built": [18, 19, 127, 140, 206, 207, 208, 1127, 1138, 1139, 1140], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 41, 42, 105, 106, 125, 127, 276, 316, 319, 402, 448, 451, 493, 496, 635, 636, 638, 640, 643, 645, 646, 813, 816, 830, 842, 844, 868, 870, 887, 889, 918, 953, 956, 1007, 1009, 1010, 1011, 1019, 1022, 1024, 1025, 1029, 1056, 1057, 1060, 1107, 1110], "minut": 18, "launch": 18, "12": [18, 87, 88, 101, 102, 103, 104, 105, 106, 125, 127, 133, 402, 448, 451, 473, 476, 488, 491, 493, 495, 496, 497, 640, 643, 655, 657, 659, 686, 704, 722, 771, 773, 776, 830, 842, 844, 868, 870, 887, 889, 918, 936, 939, 953, 956, 959, 961, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1019, 1023, 1024, 1025, 1029, 1056, 1057, 1060, 1107, 1111], "output": [18, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 71, 75, 76, 77, 78, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118, 121, 122, 123, 124, 125, 127, 129, 132, 133, 135, 136, 139, 141, 143, 144, 156, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 293, 296, 369, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 697, 698, 699, 701, 704, 705, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 727, 740, 743, 744, 771, 782, 783, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 983, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1023, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1111, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138], "That": [18, 19, 127, 141, 142, 143, 402, 635, 638], "alreadi": [18, 19, 77, 78, 123, 130, 133, 134, 141, 156, 402, 478, 481, 518, 521, 610, 613, 640, 643, 681, 685, 830, 868, 870, 1100], "refer": [18, 19, 70, 71, 117, 118, 123, 127, 128, 129, 134, 156, 206, 220, 221, 402, 513, 516, 573, 576, 771, 773, 776, 778, 780, 830, 893, 895, 899, 901, 1056, 1077, 1080, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1127, 1137], "approach": [18, 19, 127, 129, 133, 141, 142, 156], "colour": 18, "applic": [18, 134, 135, 143, 813, 828, 829, 983, 989, 995], "good": [18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 143], "chanc": 18, "vscode": 18, "show": [18, 19, 77, 78, 125, 127, 136, 155, 156, 1100], "explor": [18, 19, 140, 144, 155], "troubleshoot": 18, "sometim": [18, 19, 127], "ever": [18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "64": [18, 49, 50, 95, 96, 127, 142, 143, 402, 660, 663, 665, 668, 813, 819, 820, 821, 822, 823, 824, 830, 868, 870, 1056, 1057, 1060, 1100, 1127, 1138], "bit": [18, 125, 127, 129, 133, 141, 276, 315, 316, 319, 327, 330, 402, 453, 456, 458, 461, 468, 471, 1056, 1073, 1076, 1081, 1084], "usr": 18, "more": [18, 19, 20, 23, 26, 27, 64, 65, 111, 112, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 155, 156, 206, 207, 208, 276, 288, 291, 402, 513, 516, 830, 854, 857, 918, 936, 939, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1100], "nutshel": [18, 123], "hook": 18, "lint": 18, "accept": [18, 19, 29, 123, 124, 125, 127, 129, 132, 133, 135, 136, 141, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 593, 596, 598, 601, 608, 609, 620, 623, 635, 638, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 813, 816, 820, 823, 829, 830, 831, 834, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 956, 1001, 1002, 1005, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1065, 1068, 1089, 1090, 1093, 1100, 1107, 1108], "fix": [18, 19], "fail": [18, 20, 126, 127, 137, 139, 141], "attempt": [18, 137, 156], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 123, 124, 125, 127, 129, 131, 133, 134, 135, 136, 139, 141, 142, 143, 144, 154, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 215, 216, 223, 224, 229, 230, 245, 246, 253, 254, 258, 260, 263, 265, 271, 273, 276, 298, 299, 300, 302, 354, 357, 376, 377, 378, 380, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 686, 687, 688, 689, 691, 708, 709, 710, 715, 716, 717, 719, 760, 761, 762, 763, 771, 773, 774, 775, 777, 789, 790, 791, 793, 794, 796, 798, 800, 813, 820, 821, 822, 824, 826, 828, 829, 830, 831, 832, 833, 835, 862, 864, 871, 873, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 944, 945, 946, 948, 953, 954, 955, 957, 959, 960, 961, 963, 966, 979, 980, 981, 983, 989, 992, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1011, 1030, 1031, 1032, 1033, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1113, 1114, 1115, 1141, 1142], "proce": [18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "modifi": [18, 19, 124, 129, 134, 135, 137, 139], "properli": [18, 121], "enter": [18, 19, 123, 132, 134, 135, 369, 771, 812], "unsur": [18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "feel": [18, 19, 20, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 1100], "server": [19, 1100], "appropri": [19, 72, 73, 119, 120, 127, 131, 402, 418, 421, 610, 613, 1019, 1020, 1107, 1108], "context": [19, 125, 127, 133, 134, 135, 369, 686, 738, 813, 828, 1127, 1138], "suitabl": [19, 122, 133], "quick": [19, 121, 143], "alwai": [19, 20, 45, 46, 77, 78, 91, 92, 122, 123, 124, 127, 129, 130, 132, 133, 136, 137, 139, 141, 156, 276, 283, 286, 402, 418, 421, 610, 613, 686, 731, 771, 789, 790, 791, 792, 793, 807], "correct": [19, 20, 68, 69, 115, 116, 121, 123, 129, 133, 134, 135, 137, 276, 363, 918, 919, 922, 1056, 1077, 1078, 1079, 1080, 1085, 1086, 1087, 1088, 1100], "tendenc": 19, "gener": [19, 20, 21, 44, 45, 46, 72, 73, 77, 78, 90, 91, 92, 119, 120, 121, 122, 123, 124, 125, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 155, 156, 203, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 635, 638, 650, 653, 660, 663, 665, 668, 687, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 766, 767, 768, 769, 770, 771, 789, 790, 791, 792, 793, 830, 842, 844, 918, 932, 935, 953, 956, 1007, 1008, 1009, 1010, 1013, 1015, 1017, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1100, 1143, 1147], "land": 19, "end": [19, 133, 136, 138, 155, 156, 206, 207, 208, 402, 438, 441, 1100, 1106], "world": 19, "come": [19, 20, 127, 143, 154, 1100, 1106], "fly": 19, "hard": [19, 141], "receiv": [19, 127, 134, 135, 686, 693, 737, 1127, 1137], "respons": [19, 21], "internship": 19, "comment": [19, 137], "trigger": 19, "unansw": 19, "label": [19, 53, 54, 99, 100, 139, 140, 144, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917], "respond": 19, "remov": [19, 20, 21, 77, 78, 124, 127, 129, 134, 136, 144, 830, 842, 844, 854, 857, 890, 892, 918, 959, 962, 979, 980, 981], "someon": [19, 156], "els": [19, 20, 122, 129, 130, 136, 139, 141, 143, 144, 156, 276, 309, 686, 696, 707, 711, 983, 993], "strive": [19, 127, 156], "repli": 19, "newli": [19, 127, 136, 203, 204, 276, 283, 286, 686, 697], "place": [19, 35, 36, 55, 56, 77, 78, 101, 102, 121, 122, 123, 124, 125, 127, 128, 129, 133, 135, 137, 144, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 262, 263, 267, 268, 270, 271, 273, 275, 276, 298, 301, 333, 336, 343, 346, 369, 393, 397, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 729, 730, 731, 813, 816, 820, 823, 829, 830, 831, 834, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 954, 955, 956, 957, 1001, 1002, 1005, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1089, 1090, 1093, 1107, 1108, 1143, 1144, 1145, 1146, 1147, 1148], "bug": [19, 127], "serv": [19, 123, 127, 129, 132, 133, 138, 1100], "suspect": 19, "behaviour": [19, 123, 124, 127, 128, 132, 133, 136, 141], "observ": 19, "confid": 19, "noth": [19, 77, 78], "wrong": 19, "someth": [19, 122, 142, 143, 156], "bet": 19, "act": [19, 125, 128, 156], "placehold": [19, 123, 132, 137, 983, 995], "sub": [19, 20, 77, 78, 121, 127, 128, 133, 141, 142, 143, 830, 842, 844, 918, 958, 979, 980, 981, 982, 1100], "mark": [19, 127], "ii": [19, 1056, 1057, 1060], "iii": 19, "titl": [19, 1100], "issue_numb": 19, "delet": [19, 21], "No": [19, 139], "wait": [19, 74, 77, 78, 79, 80], "progress": [19, 133, 140, 144], "pr": 19, "soon": [19, 133, 154, 156, 1100, 1106], "partial": [19, 77, 78, 1139, 1140], "solut": [19, 127, 133, 830, 878, 880], "review": [19, 122], "merg": 19, "everi": [19, 20, 21, 35, 36, 43, 44, 89, 90, 123, 125, 126, 127, 129, 130, 131, 133, 134, 136, 139, 141, 143, 206, 228, 229, 230, 232, 686, 687, 688, 689, 690, 691], "shape": [19, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 75, 76, 77, 78, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 122, 123, 124, 125, 127, 134, 135, 136, 139, 141, 142, 143, 144, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 250, 251, 252, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 269, 270, 271, 273, 275, 276, 283, 286, 288, 291, 293, 294, 295, 296, 297, 369, 388, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 724, 727, 740, 743, 744, 749, 757, 759, 768, 771, 773, 775, 777, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1023, 1031, 1032, 1033, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1110, 1111, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1141, 1142], "move": [19, 77, 78, 122, 369, 393, 397], "within": [19, 29, 33, 34, 127, 143, 156, 206, 207, 208, 1007, 1013, 1015], "7": [19, 21, 23, 26, 27, 41, 42, 45, 46, 53, 54, 55, 56, 74, 79, 80, 87, 88, 91, 92, 99, 100, 103, 104, 105, 106, 125, 127, 129, 133, 136, 167, 173, 176, 178, 181, 276, 316, 319, 327, 330, 369, 381, 402, 403, 406, 418, 419, 420, 421, 422, 428, 430, 448, 451, 453, 456, 463, 464, 465, 466, 467, 473, 476, 478, 481, 488, 491, 493, 494, 496, 508, 511, 518, 521, 523, 524, 525, 526, 527, 533, 536, 558, 561, 608, 609, 635, 638, 640, 642, 643, 644, 645, 646, 647, 648, 650, 653, 655, 658, 660, 663, 675, 679, 680, 686, 695, 704, 714, 736, 771, 773, 774, 775, 776, 777, 778, 780, 789, 790, 792, 794, 796, 813, 819, 820, 823, 829, 830, 836, 838, 839, 841, 842, 844, 868, 870, 887, 889, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 932, 935, 936, 939, 958, 967, 970, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1019, 1023, 1024, 1025, 1029, 1056, 1057, 1060, 1107, 1111], "dai": 19, "close": [19, 124, 127, 402, 513, 516, 640, 643, 830, 881, 883], "likewis": [19, 123, 124, 129, 133, 134, 142], "freed": 19, "flag": [19, 45, 46, 77, 78, 91, 92, 134, 136, 141, 369, 375, 771, 789, 790, 791, 792, 793], "purpos": [19, 21, 123, 125, 127, 129, 131, 132, 133, 138, 141, 402, 513, 516, 1100], "remain": [19, 125, 156, 402, 418, 421, 610, 613, 635, 638, 918, 949, 952, 983, 989], "access": [19, 21, 77, 78, 128, 134], "short": [19, 143, 813, 827], "basi": [19, 126, 142], "situat": [19, 144], "alloc": [19, 35, 36, 156, 206, 258, 260, 262, 263, 265, 267, 276, 283, 286], "upon": [19, 125, 127, 136, 156], "period": 19, "prevent": [19, 45, 46, 91, 92, 136, 137, 141, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1056, 1081, 1084, 1143, 1144, 1145], "unabl": 19, "obvious": 19, "never": [19, 127, 133], "reflect": [19, 132], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 141, 144], "becaus": [19, 123, 124, 127, 128, 129, 130, 132, 134, 135, 136, 139, 143, 144, 156], "inact": 19, "limit": [19, 74, 77, 78, 79, 80, 125, 127, 137, 139, 142, 144, 156, 276, 316, 319, 327, 330, 686, 698, 699, 701, 918, 919, 922], "me": 19, "unfairli": 19, "definit": [19, 51, 52, 97, 98, 129, 134, 141, 830, 831, 832, 833, 834, 835, 836, 838], "investig": 19, "Then": [19, 21, 128, 141, 156], "practic": 19, "separ": [19, 127, 132, 133, 137, 139, 141, 142], "branch": [19, 133, 156, 203, 204, 402, 438, 441], "simpli": [19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 123, 124, 125, 127, 128, 129, 132, 133, 135, 136, 139, 143, 144, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 215, 216, 223, 224, 229, 230, 245, 246, 253, 254, 258, 260, 263, 265, 271, 273, 298, 299, 300, 302, 376, 377, 378, 380, 393, 394, 395, 396, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 760, 761, 762, 763, 773, 774, 775, 777, 789, 790, 791, 793, 820, 821, 822, 824, 831, 832, 833, 835, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 919, 920, 921, 923, 944, 945, 946, 948, 953, 954, 955, 957, 959, 960, 961, 1002, 1003, 1004, 1006, 1009, 1011, 1030, 1031, 1032, 1033, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099], "role": [19, 128, 140], "kept": [19, 74, 77, 78, 79, 80, 136, 979, 980, 981], "date": 19, "upstream": [19, 126], "complic": [19, 139], "root": [19, 21, 41, 42, 87, 88, 142, 402, 660, 661, 662, 663, 664, 1007, 1008, 1012, 1143, 1144, 1145, 1146, 1148], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 1056, 1073, 1076, 1081, 1084], "clone": [19, 21, 77, 78], "push": [19, 126, 137], "both": [19, 123, 124, 125, 127, 128, 129, 133, 135, 136, 139, 141, 142, 143, 144, 155, 156, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 353, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 630, 633, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 714, 771, 773, 776, 813, 816, 820, 823, 829, 830, 831, 834, 836, 838, 842, 844, 854, 857, 893, 895, 918, 953, 956, 1001, 1002, 1005, 1019, 1020, 1024, 1030, 1034, 1056, 1061, 1064, 1089, 1090, 1093, 1107, 1108], "abort": 19, "tediou": 19, "resolut": [19, 276, 316, 319], "stash": 19, "reinstat": 19, "correspond": [19, 41, 42, 55, 56, 74, 77, 78, 79, 80, 87, 88, 101, 102, 123, 124, 125, 126, 127, 129, 132, 133, 134, 276, 288, 291, 402, 438, 439, 440, 441, 442, 630, 631, 633, 830, 836, 838, 845, 847, 878, 880, 918, 924, 927, 953, 954, 955, 956, 957, 1007, 1008, 1019, 1020, 1021, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1107, 1108, 1109], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 123, 124, 128, 133, 141], "atlassian": 19, "tutori": [19, 128], "wrote": 19, "piec": [19, 129, 131, 132, 139], "inform": [19, 127, 133, 137, 276, 316, 319, 327, 330, 686, 692, 771, 807], "tag": 19, "describ": [19, 127, 140, 144, 1056, 1057, 1060, 1073, 1076, 1077, 1080, 1081, 1084], "navig": [19, 121], "blame": 19, "revis": 19, "author": [19, 1100], "eg": [19, 127], "16": [19, 51, 52, 87, 88, 105, 106, 125, 127, 142, 276, 327, 330, 402, 675, 676, 678, 679, 813, 819, 820, 823, 830, 831, 832, 834, 842, 844, 868, 870, 1009, 1011, 1019, 1023, 1056, 1057, 1060, 1107, 1111], "5": [19, 21, 23, 26, 27, 41, 42, 43, 44, 51, 52, 55, 56, 57, 58, 74, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 123, 125, 127, 130, 141, 142, 143, 167, 173, 176, 178, 181, 188, 191, 198, 199, 201, 206, 229, 232, 240, 243, 253, 256, 268, 270, 271, 275, 276, 298, 300, 301, 302, 310, 313, 316, 319, 343, 346, 369, 386, 390, 402, 403, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 430, 431, 432, 438, 439, 440, 441, 442, 443, 446, 448, 451, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 488, 491, 493, 494, 495, 496, 497, 513, 514, 515, 516, 518, 519, 520, 521, 523, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 650, 652, 653, 654, 660, 663, 665, 668, 675, 676, 678, 679, 680, 686, 687, 688, 695, 704, 714, 715, 718, 719, 736, 758, 771, 773, 775, 776, 777, 789, 792, 813, 816, 818, 819, 820, 823, 829, 830, 831, 832, 834, 836, 838, 839, 841, 842, 844, 851, 853, 868, 870, 887, 889, 890, 892, 902, 913, 916, 918, 919, 920, 921, 922, 923, 924, 927, 932, 935, 936, 939, 944, 946, 947, 948, 949, 952, 953, 955, 956, 957, 958, 959, 962, 967, 970, 983, 986, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1089, 1090, 1093, 1107, 1109, 1110, 1111, 1127, 1138], "past": 19, "l": [19, 51, 52, 97, 98, 121, 830, 831, 832, 833, 834, 835, 845, 847, 854, 857, 890, 892], "filepath": [19, 77, 78], "grep": 19, "v": [19, 139, 142, 143, 144, 813, 829, 1100, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1147, 1149, 1150], "commit_id": 19, "handi": [19, 127], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 125], "previou": [19, 123, 127, 128, 144, 156, 276, 367, 686, 767, 768, 771, 778, 780, 794, 796], "shown": [19, 72, 73, 77, 78, 119, 120, 123, 125, 127, 128, 137, 139, 141, 156, 402, 438, 441, 448, 451, 473, 476, 488, 491, 640, 643, 680, 830, 839, 841, 918, 932, 935, 936, 939, 1024, 1025, 1029, 1045, 1046, 1049], "whenev": [19, 127, 141, 142], "think": [19, 125], "gain": [19, 138, 143, 1118], "quit": [19, 20, 124, 127, 129, 131, 132], "repeat": [19, 55, 56, 77, 78, 101, 102, 124, 125, 127, 130, 132, 133, 134, 137, 686, 710, 918, 948, 971, 974], "yourself": [19, 20, 127, 155], "simpler": [19, 141], "cannot": [19, 128, 130, 134, 144], "least": [19, 125, 127, 129, 132, 830, 854, 857], "final": [19, 124, 125, 129, 132, 134, 136, 137, 139, 141, 142, 206, 234, 235, 237, 238, 686, 713, 1127, 1138], "tickbox": 19, "lower": [19, 35, 36, 51, 52, 77, 78, 97, 98, 125, 127, 139, 156, 206, 220, 221, 258, 260, 262, 402, 608, 830, 831, 832, 833, 834, 835, 1007, 1013, 1015], "corner": 19, "without": [19, 77, 78, 122, 123, 125, 128, 129, 132, 133, 135, 137, 139, 141, 142, 143, 155, 156, 686, 742, 748, 918, 949, 952, 983, 985, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "span": 19, "intent": [19, 136], "larg": [19, 142, 402, 418, 421, 610, 613], "discourag": 19, "philosophi": 19, "increment": [19, 686, 730], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 1100], "wast": 19, "spot": [19, 129], "mistak": [19, 137], "propos": 19, "mountain": 19, "around": [19, 74, 77, 78, 79, 80, 123, 129, 132, 141, 156], "advoc": [19, 156], "individu": [19, 20, 129], "per": [19, 49, 50, 95, 96, 127, 142, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "style": [19, 1019, 1022, 1107, 1110], "ve": [19, 138, 141, 1007, 1008, 1100], "were": [19, 77, 78, 122, 127, 133, 137], "actual": [19, 121, 129, 136, 138, 141, 143, 156], "aim": [19, 138], "part": [19, 35, 36, 122, 126, 127, 129, 139, 140, 144, 155, 156, 206, 258, 260, 262, 263, 265, 267, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1139, 1140], "subsect": 19, "session": [19, 1100], "block": [19, 127, 129, 137, 138, 140, 144, 156, 369, 771, 812, 1100], "smaller": [19, 55, 56, 101, 102, 139, 144, 918, 919, 922, 953, 954, 955, 956, 957, 1056, 1073, 1076, 1081, 1084], "edit": 19, "exact": [19, 75, 76, 77, 78, 139, 168, 170, 172, 1024, 1025, 1029], "beauti": 19, "particularli": [19, 127, 142, 156], "concern": [19, 121, 125, 133, 136, 138], "effici": [19, 123, 127, 129, 133, 136, 137, 139, 142, 156], "difficult": [19, 127, 156, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "undo": 19, "stress": 19, "frequenc": [19, 686, 713], "advantag": 19, "nifti": 19, "reassur": 19, "isol": 19, "bash": [19, 21], "shell": 19, "rm": 19, "structur": [19, 21, 74, 77, 78, 79, 80, 122, 129, 132, 133, 142, 143, 686, 702, 983, 996], "fact": [19, 127, 142], "mount": 19, "local_path_to_ivi": 19, "overwrit": [19, 77, 78, 136, 139, 369, 392], "subfold": [19, 122, 127], "insid": [19, 21, 122, 127, 133, 134], "wide": [19, 127], "via": [19, 122, 133, 134, 135, 136, 139, 141, 142, 155, 983, 984, 993, 994], "dep": 19, "fresh": 19, "copi": [19, 21, 35, 36, 37, 38, 43, 44, 77, 78, 81, 82, 83, 84, 89, 90, 124, 130, 134, 139, 141, 142, 155, 156, 206, 210, 211, 212, 213, 223, 226, 276, 283, 284, 285, 286, 287, 369, 393, 397, 686, 703, 760, 761, 762, 763, 764, 765, 918, 949, 952, 983, 985, 1045, 1051, 1054], "arsen": 19, "pycharm": 19, "pytest": [19, 127], "button": 19, "declar": 19, "exec": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "test_ivi": [19, 127], "test_funct": [19, 127], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 77, 78, 83, 84, 127, 276, 304, 305, 306, 308, 360, 361, 686, 702, 706, 725, 771, 806], "q": [19, 156, 813, 829, 830, 845, 847, 874, 876], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 49, 50, 95, 96, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "variou": [19, 123, 124, 131, 155], "valu": [19, 23, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 55, 56, 57, 58, 64, 65, 74, 77, 78, 79, 80, 87, 88, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 105, 106, 111, 112, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136, 137, 139, 141, 144, 156, 198, 199, 200, 201, 206, 207, 208, 220, 221, 228, 229, 230, 232, 234, 235, 237, 238, 276, 283, 286, 304, 305, 306, 308, 369, 391, 392, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 418, 421, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 439, 440, 442, 478, 481, 493, 494, 495, 497, 498, 501, 503, 506, 508, 510, 512, 513, 515, 517, 518, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 603, 604, 608, 609, 610, 611, 612, 613, 614, 620, 623, 625, 628, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 643, 660, 661, 662, 664, 665, 666, 667, 669, 670, 672, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 702, 707, 713, 714, 715, 716, 717, 718, 719, 725, 728, 732, 742, 743, 744, 745, 746, 748, 770, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 794, 796, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 827, 828, 829, 830, 862, 864, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 896, 898, 918, 919, 920, 921, 922, 923, 928, 929, 930, 931, 944, 947, 949, 952, 975, 977, 978, 979, 980, 981, 983, 987, 988, 989, 990, 991, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1107, 1108, 1109, 1111, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147], "cpu": [19, 43, 44, 77, 78, 89, 90, 105, 106, 135, 156, 206, 234, 235, 237, 238, 271, 275, 369, 375, 376, 379, 381, 384, 387, 389, 390, 393, 397, 398, 400, 401, 686, 714, 715, 716, 717, 718, 719, 740, 743, 744, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150], "gpu": [19, 105, 106, 135, 141, 156, 369, 375, 381, 383, 385, 389, 390, 391, 398, 400, 1009, 1011], "combin": [19, 74, 77, 78, 79, 80, 125, 127, 129, 132, 133, 144, 830, 836, 838], "wherebi": [20, 133, 983, 995], "broad": 20, "distribut": [20, 53, 54, 77, 78, 99, 100, 105, 106, 127, 135, 156, 813, 825, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1127, 1135, 1139, 1140], "across": [20, 77, 78, 123, 125, 127, 129, 133, 134, 369, 390, 391, 686, 694, 695, 983, 989, 1019, 1021, 1107, 1109], "todo": 20, "commit": [20, 127], "NOT": [20, 402, 593, 596], "static": [20, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 117, 118, 119, 120, 124, 125, 129, 156, 168, 172, 173, 177, 178, 182, 183, 187, 188, 192, 193, 197, 198, 199, 203, 204, 298, 302, 376, 380, 402, 403, 407, 408, 412, 413, 417, 418, 422, 423, 427, 428, 432, 433, 437, 438, 442, 443, 447, 448, 452, 453, 457, 458, 462, 463, 467, 468, 472, 473, 477, 478, 482, 483, 487, 488, 492, 493, 497, 498, 502, 503, 507, 508, 512, 513, 516, 517, 518, 522, 523, 527, 528, 532, 533, 537, 538, 542, 543, 547, 548, 552, 553, 557, 558, 562, 563, 567, 568, 572, 573, 577, 578, 582, 583, 587, 588, 592, 593, 597, 598, 602, 603, 607, 610, 614, 615, 619, 620, 624, 625, 629, 630, 634, 635, 639, 640, 644, 645, 649, 650, 654, 660, 664, 665, 669, 670, 671, 675, 676, 681, 682, 687, 691, 715, 719, 760, 761, 789, 793, 820, 824, 831, 835, 903, 907, 908, 912, 913, 917, 919, 923, 944, 948, 953, 957, 1002, 1006, 1009, 1011, 1030, 1031, 1090, 1094, 1095, 1099], "method": [20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 132, 137, 139, 140, 143, 144, 156, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 210, 211, 215, 216, 223, 224, 226, 229, 230, 245, 246, 253, 254, 258, 260, 263, 265, 271, 273, 275, 276, 298, 299, 300, 302, 310, 313, 316, 319, 327, 330, 376, 377, 378, 380, 393, 394, 395, 396, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 684, 686, 687, 688, 689, 691, 702, 703, 714, 715, 716, 717, 719, 743, 744, 758, 760, 761, 762, 763, 764, 765, 771, 773, 774, 775, 777, 789, 790, 791, 793, 794, 796, 798, 800, 812, 813, 819, 820, 821, 822, 824, 829, 830, 831, 832, 833, 835, 836, 838, 839, 841, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 932, 935, 936, 939, 944, 945, 946, 948, 953, 954, 955, 956, 957, 958, 959, 960, 961, 967, 970, 983, 984, 994, 995, 996, 1002, 1003, 1004, 1006, 1007, 1009, 1011, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1107, 1108, 1109, 1110, 1111, 1127, 1138, 1139, 1140], "instanc": [20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 119, 120, 123, 124, 125, 127, 128, 129, 132, 134, 136, 142, 143, 144, 157, 165, 167, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 298, 299, 300, 301, 310, 313, 316, 319, 327, 330, 333, 336, 343, 346, 369, 376, 377, 378, 389, 393, 394, 395, 396, 402, 403, 404, 405, 406, 408, 409, 410, 413, 414, 415, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 488, 489, 490, 491, 493, 494, 495, 498, 499, 500, 503, 504, 505, 508, 509, 510, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 528, 529, 530, 533, 534, 535, 536, 538, 539, 540, 543, 544, 545, 546, 548, 549, 550, 553, 554, 555, 558, 559, 560, 561, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 583, 584, 585, 588, 589, 590, 593, 594, 595, 598, 599, 600, 603, 604, 605, 608, 609, 610, 611, 612, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 630, 631, 632, 635, 636, 637, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 672, 673, 675, 677, 678, 679, 680, 681, 683, 684, 686, 687, 688, 689, 703, 714, 715, 716, 717, 731, 749, 758, 760, 762, 763, 764, 765, 773, 774, 775, 777, 789, 790, 791, 813, 816, 819, 820, 821, 822, 823, 829, 830, 831, 832, 833, 834, 836, 838, 839, 841, 842, 844, 902, 903, 904, 905, 906, 908, 909, 910, 913, 914, 915, 918, 919, 920, 921, 932, 935, 936, 939, 944, 945, 946, 953, 954, 955, 956, 958, 959, 960, 961, 967, 970, 1001, 1002, 1003, 1004, 1005, 1007, 1012, 1013, 1015, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1032, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1107, 1108, 1109, 1110, 1111, 1116, 1117], "revers": [20, 23, 26, 27, 74, 79, 80, 124, 125, 144, 156, 686, 707, 918, 936, 939], "resourc": 20, "content": [20, 21, 77, 78, 128, 136, 139, 142], "thei": [20, 77, 78, 121, 122, 125, 127, 129, 131, 133, 134, 135, 136, 137, 141, 142, 143, 144, 156, 276, 353, 979, 980, 981, 1007, 1008, 1100, 1149, 1150], "hypothesi": 20, "cover": [20, 124, 125, 127, 129, 131, 138], "lambda": [20, 139, 142, 1143, 1146, 1148], "direct": [20, 128, 143, 144, 155, 1045, 1051, 1054], "bind": [20, 133], "special": [20, 23, 26, 27, 74, 79, 80, 122, 123, 124, 125, 132, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 473, 476, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1085, 1088], "aforement": 20, "categori": [20, 122, 128, 132, 133, 134, 138, 1100], "parent": [20, 141, 771, 812], "arraywithelementwis": [20, 23, 26, 27, 41, 132], "containerwithmanipul": [20, 74, 79, 80, 101], "hint": [20, 122, 123, 124, 129, 132, 136, 137, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 813, 816, 820, 823, 829, 830, 831, 834, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 956, 1001, 1002, 1005, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1089, 1090, 1093, 1107, 1108], "its": [20, 21, 55, 56, 101, 102, 124, 127, 128, 137, 144, 276, 288, 291, 369, 392, 686, 759, 830, 854, 857, 918, 932, 935, 949, 952, 953, 954, 955, 956, 957, 967, 970], "docstr": [20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 121, 122, 123, 129, 133, 137, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 240, 243, 245, 246, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 298, 299, 300, 301, 302, 316, 319, 327, 330, 376, 377, 378, 380, 393, 394, 395, 396, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 760, 761, 762, 763, 773, 774, 775, 777, 789, 790, 791, 793, 820, 821, 822, 824, 830, 831, 832, 833, 835, 839, 841, 842, 844, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 932, 935, 936, 939, 944, 945, 946, 948, 953, 954, 955, 956, 957, 959, 960, 961, 1002, 1003, 1004, 1006, 1009, 1011, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099], "thorough": [20, 123, 124, 127], "transpil": [20, 128, 138, 140, 1100, 1106], "builder": [21, 154, 156, 1100], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 55, 56, 101, 102, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 830, 842, 844, 862, 864, 871, 873, 890, 892, 918, 936, 939, 953, 954, 955, 956, 957, 1045, 1046, 1049, 1051, 1054, 1100], "synchron": 21, "rest": [21, 140, 144], "remove_doc": 21, "_": [21, 41, 42, 87, 88, 124, 127, 133, 136, 141, 142, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 514, 515, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 771, 773, 776, 778, 780, 830, 842, 844, 899, 901, 918, 932, 935, 953, 956, 1019, 1020, 1024, 1025, 1029, 1045, 1046, 1049, 1056, 1061, 1064, 1107, 1108], "indic": [21, 43, 44, 49, 50, 55, 56, 57, 58, 77, 78, 89, 90, 95, 96, 101, 102, 103, 104, 128, 137, 140, 144, 167, 188, 191, 402, 645, 648, 686, 714, 715, 716, 717, 718, 719, 727, 740, 743, 744, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 830, 896, 898, 918, 953, 954, 955, 956, 957, 983, 984, 986, 988, 990, 991, 992, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1024, 1025, 1029, 1035, 1039, 1045, 1046, 1049, 1051, 1054, 1100, 1103, 1105, 1107, 1108, 1109, 1110, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1139, 1140], "privat": [21, 127, 1143, 1147], "fulfil": [21, 138, 1100], "autogenerated_sourc": 21, "format": [21, 77, 78, 121, 124, 134, 135, 139, 141, 142, 276, 310, 313, 369, 376, 379, 1056, 1057, 1060, 1100], "png": [21, 142], "_imag": 21, "lastli": 21, "rst": 21, "skip": [21, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 127, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 298, 300, 302, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 715, 717, 719, 760, 761, 763, 789, 791, 793, 831, 833, 835, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 983, 996, 1002, 1004, 1006, 1030, 1031, 1033, 1090, 1092, 1094, 1095, 1097, 1099], "read": [21, 77, 78, 1100], "partial_sourc": 21, "conf": 21, "create_rst_fil": 21, "filter": [21, 49, 50, 95, 96, 127, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "repres": [21, 41, 42, 87, 88, 127, 141, 198, 199, 200, 201, 206, 240, 243, 276, 315, 402, 413, 414, 415, 416, 417, 418, 421, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447, 488, 489, 490, 491, 492, 610, 613, 655, 656, 657, 658, 659, 680, 771, 812, 813, 826, 830, 877, 878, 880], "overal": [21, 124, 133, 134, 135, 144], "markup": 21, "6": [21, 23, 26, 27, 41, 42, 45, 46, 55, 56, 74, 79, 80, 87, 88, 89, 90, 99, 100, 103, 104, 105, 106, 125, 127, 130, 133, 141, 142, 143, 167, 173, 176, 178, 181, 188, 191, 206, 229, 232, 271, 275, 276, 310, 313, 316, 319, 369, 386, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 431, 438, 440, 441, 442, 448, 451, 453, 456, 463, 464, 465, 466, 467, 473, 476, 478, 479, 480, 481, 483, 485, 486, 487, 488, 491, 493, 495, 496, 497, 513, 515, 518, 521, 523, 525, 526, 527, 533, 536, 543, 546, 558, 561, 608, 609, 615, 618, 635, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 660, 663, 665, 668, 675, 679, 680, 686, 695, 704, 714, 715, 718, 719, 736, 758, 771, 773, 774, 776, 813, 816, 819, 820, 823, 829, 830, 836, 838, 839, 841, 842, 844, 868, 870, 881, 883, 887, 889, 902, 903, 905, 906, 907, 908, 910, 912, 913, 915, 916, 917, 918, 919, 920, 922, 924, 927, 932, 935, 936, 939, 944, 947, 949, 952, 953, 956, 958, 959, 962, 967, 970, 983, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1019, 1020, 1023, 1024, 1025, 1029, 1030, 1034, 1056, 1057, 1060, 1061, 1064, 1073, 1076, 1107, 1108, 1111], "extract": [21, 122], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 156], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 77, 78, 127, 139, 142, 402, 458, 461, 830, 842, 844, 854, 857], "append_toctree_to_rst": 21, "9": [21, 23, 26, 27, 41, 42, 45, 46, 55, 56, 74, 79, 80, 87, 88, 91, 92, 105, 106, 125, 127, 142, 143, 276, 309, 316, 319, 327, 330, 402, 418, 419, 420, 421, 422, 428, 431, 448, 451, 453, 456, 493, 494, 495, 496, 497, 523, 525, 526, 527, 608, 609, 640, 642, 643, 644, 645, 648, 660, 663, 665, 668, 686, 714, 736, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 789, 792, 794, 795, 796, 797, 813, 816, 819, 820, 823, 830, 836, 838, 839, 841, 842, 844, 868, 870, 881, 883, 887, 889, 918, 919, 920, 922, 936, 939, 953, 956, 958, 1007, 1008, 1009, 1010, 1011, 1019, 1023, 1024, 1025, 1029, 1056, 1057, 1060, 1107, 1111, 1143, 1144, 1145], "index": [21, 35, 36, 43, 44, 64, 65, 77, 78, 81, 82, 89, 90, 111, 112, 129, 133, 141, 205, 206, 220, 221, 240, 241, 242, 243, 244, 369, 389, 686, 692, 714, 715, 716, 717, 718, 719, 918, 963, 966, 983, 986, 987, 990, 991, 992, 997, 999, 1019, 1020, 1021, 1022, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1045, 1046, 1049, 1103, 1105, 1107, 1108, 1109, 1110], "create_index_rst": 21, "14": [21, 41, 42, 87, 88, 103, 104, 105, 106, 125, 127, 133, 276, 316, 319, 327, 330, 402, 428, 431, 438, 439, 440, 441, 442, 473, 476, 645, 649, 655, 657, 659, 771, 773, 776, 813, 829, 830, 842, 844, 868, 870, 1002, 1004, 1006, 1009, 1011, 1024, 1025, 1029, 1056, 1057, 1060], "\u03c0": [21, 402, 408, 411, 423, 426, 433, 436, 438, 441], "namespac": [21, 122, 134, 139, 144], "arraywithactiv": [23, 24, 26, 27], "arraywithcr": [23, 26, 27, 35], "arraywithdatatyp": [23, 26, 27, 37], "arraywithdevic": [23, 26, 27, 39, 141], "arraywithgener": [23, 26, 27, 43, 141], "arraywithgradi": [23, 26, 27, 45, 141], "arraywithimag": [23, 26, 27, 47, 141], "arraywithlay": [23, 26, 27, 49], "arraywithlinearalgebra": [23, 26, 27, 51], "arraywithloss": [23, 26, 27, 53], "arraywithmanipul": [23, 26, 27, 55], "arraywithnorm": [23, 26, 27, 57], "arraywithrandom": [23, 26, 27, 59, 141], "arraywithsearch": [23, 26, 27, 61], "arraywithset": [23, 26, 27, 64], "arraywithsort": [23, 26, 27, 66], "arraywithstatist": [23, 26, 27, 68], "arraywithutil": [23, 26, 27, 70], "properti": [23, 26, 27, 77, 78, 125, 127, 129, 133, 141, 142, 143, 1139, 1140, 1143, 1144, 1145, 1146, 1148], "__add__": [23, 26, 27, 74, 79, 80, 123, 124, 125, 132, 133, 141], "variant": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 124, 125, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 215, 216, 223, 224, 229, 230, 245, 246, 253, 254, 258, 260, 263, 265, 271, 273, 298, 299, 300, 302, 376, 377, 378, 380, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 760, 761, 762, 763, 773, 774, 775, 777, 789, 790, 791, 793, 820, 821, 822, 824, 831, 832, 833, 835, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 919, 920, 921, 923, 944, 945, 946, 948, 953, 954, 955, 957, 959, 960, 961, 1002, 1003, 1004, 1006, 1009, 1011, 1030, 1031, 1032, 1033, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099], "wrap": [23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 120, 121, 123, 124, 127, 129, 130, 132, 133, 134, 135, 136, 139, 141, 144, 156, 157, 165, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 215, 216, 223, 224, 229, 230, 245, 246, 253, 254, 258, 260, 263, 265, 271, 273, 298, 299, 300, 302, 376, 377, 378, 380, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 686, 687, 688, 689, 691, 697, 715, 716, 717, 719, 760, 761, 762, 763, 771, 773, 774, 775, 777, 789, 790, 791, 793, 811, 820, 821, 822, 824, 831, 832, 833, 835, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 919, 920, 921, 923, 944, 945, 946, 948, 953, 954, 955, 957, 959, 960, 961, 1002, 1003, 1004, 1006, 1009, 1011, 1030, 1031, 1032, 1033, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099], "minim": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 124, 136, 139, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 215, 216, 223, 224, 229, 230, 245, 246, 253, 254, 258, 260, 263, 265, 271, 273, 298, 299, 300, 302, 376, 377, 378, 380, 393, 394, 395, 396, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 691, 715, 716, 717, 719, 760, 761, 762, 763, 773, 774, 775, 777, 789, 790, 791, 793, 820, 821, 822, 824, 831, 832, 833, 835, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 919, 920, 921, 923, 944, 945, 946, 948, 953, 954, 955, 957, 959, 960, 961, 1002, 1003, 1004, 1006, 1009, 1011, 1030, 1031, 1032, 1033, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099], "self": [23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 132, 133, 139, 141, 142, 143, 144, 168, 169, 170, 173, 174, 175, 178, 179, 180, 183, 184, 185, 188, 189, 190, 193, 194, 195, 198, 200, 201, 210, 211, 215, 216, 217, 223, 224, 225, 229, 230, 231, 240, 241, 242, 245, 246, 247, 253, 254, 255, 258, 260, 261, 263, 265, 266, 271, 273, 274, 283, 284, 285, 288, 289, 290, 293, 294, 295, 298, 299, 300, 310, 311, 312, 316, 317, 318, 327, 328, 329, 333, 334, 335, 338, 339, 340, 343, 344, 345, 348, 349, 350, 354, 355, 356, 369, 376, 377, 378, 393, 395, 396, 403, 404, 405, 408, 409, 410, 413, 414, 415, 418, 419, 420, 423, 424, 425, 428, 429, 430, 433, 434, 435, 438, 439, 440, 443, 444, 445, 448, 449, 450, 453, 454, 455, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 475, 478, 479, 480, 483, 484, 485, 488, 489, 490, 493, 494, 495, 498, 499, 500, 503, 504, 505, 508, 509, 510, 513, 514, 515, 518, 519, 520, 523, 524, 525, 528, 529, 530, 533, 534, 535, 538, 539, 540, 543, 544, 545, 548, 549, 550, 553, 554, 555, 558, 559, 560, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 583, 584, 585, 588, 589, 590, 593, 594, 595, 598, 599, 600, 603, 604, 605, 610, 611, 612, 615, 616, 617, 620, 621, 622, 625, 626, 627, 630, 631, 632, 635, 636, 637, 640, 641, 642, 645, 646, 647, 650, 651, 652, 655, 656, 657, 660, 661, 662, 665, 666, 667, 670, 672, 673, 675, 677, 678, 681, 683, 684, 687, 688, 689, 699, 700, 715, 716, 717, 760, 761, 762, 763, 773, 774, 775, 778, 779, 785, 786, 789, 790, 791, 794, 795, 798, 799, 802, 803, 820, 821, 822, 831, 832, 833, 835, 836, 837, 839, 840, 842, 843, 845, 846, 848, 849, 851, 852, 854, 855, 856, 858, 859, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 878, 879, 881, 882, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 903, 904, 905, 908, 909, 910, 913, 914, 915, 919, 920, 921, 924, 925, 926, 928, 929, 930, 932, 933, 934, 936, 937, 938, 940, 941, 942, 944, 945, 946, 949, 950, 951, 953, 954, 955, 959, 960, 961, 963, 964, 965, 967, 968, 969, 971, 972, 973, 975, 976, 977, 1002, 1003, 1004, 1013, 1014, 1025, 1027, 1028, 1030, 1032, 1033, 1035, 1037, 1038, 1040, 1042, 1043, 1046, 1047, 1048, 1051, 1052, 1053, 1057, 1058, 1059, 1061, 1062, 1063, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1143, 1147], "input": [23, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 156, 157, 165, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 288, 291, 293, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 319, 327, 330, 333, 336, 338, 341, 343, 346, 348, 351, 353, 354, 357, 359, 363, 368, 369, 375, 376, 379, 386, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 723, 724, 726, 727, 729, 730, 731, 733, 734, 735, 736, 740, 743, 744, 747, 751, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 769, 770, 771, 773, 774, 775, 776, 777, 782, 783, 789, 790, 791, 792, 793, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 980, 981, 982, 983, 986, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1110, 1111, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142], "numer": [23, 26, 27, 41, 42, 74, 79, 80, 87, 88, 122, 143, 206, 240, 243, 276, 283, 286, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 478, 479, 480, 481, 482, 493, 496, 513, 516, 518, 519, 520, 521, 522, 523, 526, 538, 541, 543, 546, 548, 551, 553, 556, 593, 596, 598, 601, 610, 613, 615, 616, 617, 618, 619, 620, 623, 625, 626, 627, 629, 630, 633, 635, 638, 640, 641, 642, 644, 645, 646, 647, 648, 649, 665, 668, 670, 671, 673, 674, 681, 685, 686, 721, 722, 745, 746, 753, 754, 830, 836, 838, 854, 857, 868, 870, 881, 883, 887, 889, 890, 892, 893, 895, 1007, 1018, 1019, 1020, 1021, 1056, 1061, 1064, 1073, 1076, 1081, 1084, 1107, 1108, 1109, 1118], "broadcast": [23, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 71, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118, 122, 124, 125, 127, 133, 134, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 288, 291, 293, 296, 369, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 708, 709, 710, 712, 715, 716, 717, 718, 719, 727, 740, 743, 744, 771, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1023, 1024, 1040, 1044, 1045, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1111], "element": [23, 26, 27, 35, 36, 41, 42, 43, 44, 55, 56, 64, 65, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 101, 102, 111, 112, 124, 127, 139, 144, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 228, 229, 230, 232, 258, 260, 262, 263, 265, 267, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 694, 695, 698, 699, 701, 704, 705, 712, 727, 760, 761, 762, 763, 764, 765, 771, 812, 813, 825, 830, 836, 838, 845, 847, 854, 857, 874, 876, 881, 883, 918, 919, 920, 921, 922, 923, 936, 939, 944, 947, 953, 954, 955, 956, 957, 958, 959, 962, 983, 986, 1007, 1008, 1019, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1040, 1044, 1045, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1093, 1095, 1098, 1107, 1110, 1111, 1127, 1135], "wise": [23, 26, 27, 41, 42, 74, 75, 76, 77, 78, 79, 80, 87, 88, 139, 144, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 202, 402, 403, 406, 408, 411, 418, 419, 420, 421, 422, 423, 426, 433, 436, 438, 441, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 620, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 670, 671, 672, 673, 674, 686, 712, 918, 919, 922, 1143, 1146], "sum": [23, 26, 27, 41, 42, 68, 69, 74, 77, 78, 79, 80, 87, 88, 115, 116, 129, 133, 134, 136, 139, 369, 392, 402, 418, 419, 420, 421, 422, 583, 586, 670, 671, 673, 686, 705, 709, 743, 744, 813, 829, 830, 881, 883, 890, 892, 896, 898, 1056, 1057, 1060, 1077, 1080], "promot": [23, 26, 27, 37, 38, 41, 42, 51, 52, 74, 79, 80, 83, 84, 87, 88, 97, 98, 124, 129, 134, 198, 199, 200, 201, 276, 283, 286, 298, 299, 300, 301, 302, 353, 354, 357, 363, 402, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 508, 509, 510, 511, 512, 513, 515, 516, 517, 523, 524, 525, 527, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 603, 606, 610, 611, 612, 613, 614, 630, 631, 632, 633, 634, 635, 636, 638, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 830, 831, 832, 833, 834, 835, 836, 838, 851, 853, 854, 857, 862, 864, 868, 870, 871, 873, 878, 880, 893, 895, 896, 898, 918, 963, 966, 1056, 1065, 1068], "y": [23, 24, 25, 26, 27, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 64, 65, 70, 71, 74, 75, 76, 79, 80, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 111, 112, 117, 118, 122, 125, 128, 130, 133, 139, 141, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 228, 229, 232, 240, 243, 250, 251, 253, 256, 271, 275, 276, 283, 286, 310, 313, 316, 319, 327, 330, 369, 376, 379, 382, 386, 391, 402, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 448, 451, 453, 456, 463, 464, 465, 466, 467, 468, 471, 473, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 491, 493, 494, 495, 496, 497, 508, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 527, 533, 536, 558, 561, 608, 609, 615, 618, 620, 623, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 668, 675, 676, 677, 678, 679, 680, 686, 687, 688, 689, 690, 691, 694, 695, 703, 704, 711, 712, 714, 715, 716, 717, 718, 719, 751, 758, 760, 761, 762, 763, 764, 765, 771, 782, 783, 813, 819, 820, 821, 822, 823, 824, 826, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 851, 853, 868, 870, 887, 889, 890, 892, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 932, 935, 936, 939, 944, 945, 946, 947, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 967, 970, 983, 986, 999, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1030, 1031, 1032, 1033, 1034, 1045, 1046, 1049, 1056, 1057, 1060, 1061, 1064, 1077, 1080, 1081, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1107, 1108, 1109, 1110, 1111], "z": [23, 26, 27, 41, 42, 43, 44, 53, 54, 74, 79, 80, 87, 88, 89, 90, 99, 100, 125, 130, 133, 139, 141, 369, 382, 402, 418, 419, 420, 421, 422, 438, 439, 440, 441, 442, 448, 451, 463, 464, 465, 466, 467, 473, 476, 533, 536, 543, 546, 558, 561, 608, 609, 686, 694, 695, 714, 715, 716, 717, 719, 751, 830, 836, 838, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 922, 983, 986, 999, 1019, 1020, 1056, 1057, 1060, 1061, 1064, 1073, 1076, 1107, 1108], "mix": [23, 26, 27, 41, 42, 43, 44, 74, 79, 80, 87, 88, 99, 100, 121, 125, 127, 139, 276, 354, 357, 369, 386, 402, 418, 421, 448, 451, 463, 466, 473, 476, 493, 494, 496, 523, 524, 525, 526, 527, 533, 536, 558, 561, 620, 623, 635, 636, 637, 638, 639, 686, 687, 688, 703, 711, 714, 715, 718, 758, 760, 764, 765, 813, 816, 819, 820, 823, 829, 830, 831, 834, 887, 889, 902, 903, 906, 907, 908, 912, 913, 916, 917, 918, 919, 922, 1001, 1002, 1005, 1019, 1023, 1056, 1057, 1060, 1065, 1068, 1107, 1111], "__le__": [23, 26, 27], "equal": [23, 26, 27, 35, 36, 41, 42, 43, 44, 77, 78, 87, 88, 89, 90, 125, 133, 134, 206, 220, 221, 228, 229, 230, 232, 276, 283, 286, 402, 458, 461, 468, 471, 502, 538, 541, 543, 546, 630, 633, 640, 643, 686, 687, 688, 689, 690, 691, 694, 695, 830, 842, 844, 862, 864, 871, 873, 918, 919, 922, 928, 931, 958, 975, 978, 1007, 1013, 1015, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1065, 1068, 1077, 1080, 1081, 1084, 1085, 1088], "result": [23, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 71, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118, 122, 123, 124, 125, 127, 128, 132, 133, 134, 136, 142, 156, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 237, 238, 250, 251, 253, 254, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 273, 275, 276, 283, 286, 293, 296, 354, 357, 369, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 699, 701, 704, 705, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 727, 740, 743, 744, 771, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 983, 986, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1029, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1107, 1108, 1109, 1111], "bool": [23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 70, 71, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 119, 120, 125, 133, 134, 136, 137, 144, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 203, 204, 206, 228, 276, 283, 286, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 313, 332, 333, 334, 336, 338, 339, 341, 343, 344, 346, 348, 349, 351, 359, 368, 369, 375, 376, 379, 383, 384, 387, 388, 392, 399, 401, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 462, 463, 465, 466, 467, 468, 470, 472, 473, 475, 476, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 610, 612, 614, 615, 617, 619, 620, 621, 622, 623, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 704, 707, 711, 713, 715, 717, 719, 723, 724, 726, 731, 733, 734, 735, 736, 751, 752, 760, 761, 763, 769, 770, 771, 789, 790, 791, 792, 793, 807, 812, 830, 831, 832, 833, 834, 835, 858, 860, 881, 883, 896, 898, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 919, 921, 923, 953, 955, 957, 958, 979, 980, 981, 982, 983, 984, 985, 989, 993, 994, 995, 1002, 1004, 1007, 1008, 1019, 1020, 1021, 1030, 1031, 1033, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1143, 1144, 1145, 1146, 1147, 1148], "true": [23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 127, 128, 129, 133, 134, 136, 137, 139, 141, 142, 143, 144, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 203, 204, 206, 207, 209, 210, 213, 215, 217, 219, 220, 222, 223, 225, 227, 229, 231, 233, 234, 235, 236, 237, 239, 240, 242, 244, 245, 247, 249, 250, 252, 253, 255, 257, 258, 259, 261, 263, 264, 266, 268, 269, 271, 272, 274, 276, 283, 284, 285, 286, 287, 288, 290, 292, 293, 295, 297, 298, 299, 300, 301, 302, 305, 307, 310, 312, 314, 316, 318, 320, 321, 323, 324, 326, 327, 329, 331, 333, 335, 336, 337, 338, 340, 342, 343, 345, 346, 347, 348, 350, 351, 352, 354, 356, 358, 368, 369, 375, 384, 388, 389, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 451, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 476, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 623, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 696, 697, 699, 700, 704, 711, 713, 715, 717, 719, 723, 726, 727, 734, 736, 747, 749, 751, 752, 758, 760, 761, 763, 765, 767, 768, 770, 771, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 812, 813, 825, 830, 831, 832, 833, 834, 835, 854, 856, 858, 860, 881, 882, 883, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 923, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 949, 951, 953, 955, 957, 958, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 980, 981, 982, 983, 984, 993, 994, 996, 1002, 1004, 1006, 1007, 1008, 1013, 1014, 1016, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1038, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1061, 1063, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1075, 1076, 1077, 1079, 1080, 1081, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1111, 1127, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148], "__radd__": [23, 26, 27, 74, 79, 80, 124, 125], "adam_upd": [23, 26, 27, 91, 92, 143, 771], "invok": [23, 26, 27], "function_nam": [23, 26, 27], "variabl": [23, 26, 27, 28, 29, 31, 32, 33, 34, 45, 46, 57, 58, 74, 77, 78, 79, 80, 91, 92, 103, 104, 123, 124, 127, 130, 133, 134, 136, 137, 142, 143, 144, 156, 686, 696, 729, 730, 731, 732, 733, 734, 736, 755, 771, 778, 780, 782, 783, 785, 787, 789, 790, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 811, 813, 828, 830, 878, 880, 979, 980, 981, 982, 1001, 1002, 1003, 1004, 1005, 1006, 1100, 1116, 1117, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "arang": [23, 26, 27, 74, 79, 80, 134, 206, 234, 235, 237, 238, 1056, 1057, 1060, 1100], "arg_info": [23, 26, 27, 74, 79, 80, 686], "arg_nam": [23, 26, 27, 74, 79, 80, 686], "argmax": [23, 26, 27, 61, 74, 79, 80, 107, 1019, 1100, 1107], "argmin": [23, 26, 27, 74, 79, 80, 1019, 1100, 1107], "array_equ": [23, 26, 27, 74, 79, 80, 686], "arrays_equ": [23, 26, 27, 74, 77, 78, 79, 80, 686], "as_ivy_dev": [23, 26, 27, 74, 79, 80, 141, 369], "as_ivy_dtyp": [23, 26, 27, 74, 79, 80, 128, 276], "as_native_dev": [23, 26, 27, 74, 79, 80, 369], "as_native_dtyp": [23, 26, 27, 74, 79, 80, 276], "assert_supports_inplac": [23, 26, 27, 74, 79, 80, 686], "cache_fn": [23, 26, 27, 74, 79, 80, 129, 686], "clear_mem_on_dev": [23, 26, 27, 74, 79, 80, 369], "clip_matrix_norm": [23, 26, 27, 74, 79, 80, 686], "clip_vector_norm": [23, 26, 27, 89, 90, 686], "closest_valid_dtyp": [23, 26, 27, 74, 79, 80, 276], "container_typ": [23, 26, 27, 74, 79, 80, 686], "conv1d": [23, 26, 27, 74, 79, 80, 813, 1127], "conv1d_transpos": [23, 26, 27, 74, 79, 80, 813], "conv2d": [23, 26, 27, 74, 79, 80, 813, 1100, 1127], "conv2d_transpos": [23, 26, 27, 74, 79, 80, 813], "conv3d": [23, 26, 27, 74, 79, 80, 813, 1127], "conv3d_transpos": [23, 26, 27, 74, 79, 80, 813], "copy_arrai": [23, 26, 27, 74, 79, 80, 686], "cumprod": [23, 26, 27, 74, 79, 80, 144, 686], "cumsum": [23, 26, 27, 74, 79, 80, 686, 1100], "current_backend_str": [23, 26, 27, 74, 79, 80, 686], "default_devic": [23, 26, 27, 74, 79, 80, 135, 139, 369, 386, 389, 390, 400], "default_dtyp": [23, 26, 27, 74, 79, 80, 129, 134, 276], "default_float_dtyp": [23, 26, 27, 74, 79, 80, 134, 276], "default_int_dtyp": [23, 26, 27, 74, 79, 80, 134, 276], "default_uint_dtyp": [23, 26, 27, 74, 79, 80, 276, 362, 367], "dev_util": [23, 26, 27, 74, 79, 80, 135, 369], "dropout": [23, 26, 27, 74, 79, 80, 142, 813, 1127, 1138], "dtype": [23, 26, 27, 35, 36, 37, 38, 68, 69, 77, 78, 81, 82, 83, 84, 89, 90, 115, 116, 122, 125, 127, 128, 129, 134, 135, 137, 141, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 285, 286, 287, 288, 291, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 315, 316, 319, 321, 322, 324, 325, 327, 330, 332, 333, 336, 338, 341, 343, 346, 348, 351, 353, 354, 355, 357, 359, 360, 361, 362, 367, 368, 369, 388, 402, 468, 471, 686, 694, 695, 740, 760, 761, 763, 764, 813, 825, 918, 932, 935, 1007, 1013, 1015, 1019, 1020, 1021, 1045, 1051, 1054, 1056, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1089, 1090, 1093, 1100, 1107, 1108, 1109, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1149, 1150], "dtype_bit": [23, 26, 27, 74, 79, 80, 276], "einops_rearrang": [23, 26, 27, 77, 78, 686], "einops_reduc": [23, 26, 27, 77, 78, 686], "einops_repeat": [23, 26, 27, 77, 78, 686], "empti": [23, 26, 27, 74, 77, 78, 79, 80, 132, 134, 135, 206, 207, 208, 771, 812, 1056, 1077, 1080, 1081, 1084, 1089, 1090, 1093, 1095, 1098], "execute_with_gradi": [23, 26, 27, 74, 79, 80, 133, 142, 143, 144, 156, 771, 1100], "ey": [23, 26, 27, 74, 79, 80, 144, 206, 813, 816, 820, 823], "floormod": [23, 26, 27, 74, 79, 80, 686, 1100], "fourier_encod": [23, 26, 27, 74, 79, 80, 686], "function_supported_dtyp": [23, 26, 27, 74, 79, 80, 276], "function_unsupported_dtyp": [23, 26, 27, 74, 79, 80, 276], "gather": [23, 26, 27, 43, 44, 77, 78, 89, 90, 686, 715, 716, 717, 718, 719], "get_all_arrays_in_memori": [23, 26, 27, 74, 79, 80, 686], "get_all_ivy_arrays_on_dev": [23, 26, 27, 74, 79, 80, 135, 369], "get_min_bas": [23, 26, 27, 74, 79, 80, 686], "get_min_denomin": [23, 26, 27, 74, 79, 80, 686], "get_nestable_mod": [23, 26, 27, 74, 79, 80, 686, 747, 767], "get_num_dim": [23, 26, 27, 74, 79, 80, 686, 1100], "get_referrers_recurs": [23, 26, 27, 74, 79, 80, 686], "gpu_is_avail": [23, 26, 27, 74, 79, 80, 369], "gradient_descent_upd": [23, 26, 27, 91, 92, 771, 979, 980, 981, 982, 1100], "handle_nest": [23, 26, 27, 74, 79, 80, 129, 133, 157], "handle_out_argu": [23, 26, 27, 74, 79, 80, 123, 131, 134, 135, 136, 157], "has_nan": [23, 26, 27, 77, 78, 686], "indices_wher": [23, 26, 27, 74, 79, 80, 137, 686, 1100], "infer_devic": [23, 26, 27, 74, 79, 80, 123, 134, 135, 157], "infer_dtyp": [23, 26, 27, 74, 79, 80, 123, 134, 135, 157], "inplace_arrays_support": [23, 26, 27, 74, 79, 80, 686], "inplace_decr": [23, 26, 27, 74, 79, 80, 686], "inplace_incr": [23, 26, 27, 74, 79, 80, 686], "inplace_upd": [23, 26, 27, 77, 78, 136, 686, 1116, 1117], "inplace_variables_support": [23, 26, 27, 74, 79, 80, 686], "inputs_to_native_arrai": [23, 26, 27, 74, 79, 80, 132, 157], "invalid_dtyp": [23, 26, 27, 74, 79, 80, 134, 276], "is_arrai": [23, 26, 27, 128, 686], "is_ivy_arrai": [23, 26, 27, 136, 141, 686], "is_ivy_contain": [23, 26, 27, 74, 79, 80, 686], "is_native_arrai": [23, 26, 27, 141, 686], "is_vari": [23, 26, 27, 45, 46, 91, 92, 136, 771, 793], "boolean": [23, 26, 27, 41, 42, 43, 44, 45, 46, 77, 78, 87, 88, 89, 90, 91, 92, 127, 133, 206, 228, 276, 283, 286, 332, 368, 369, 383, 399, 402, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 686, 687, 688, 689, 690, 691, 694, 695, 726, 727, 728, 732, 733, 734, 735, 736, 747, 749, 755, 770, 771, 789, 790, 791, 792, 793, 812, 979, 980, 981, 983, 993, 1056, 1069, 1072], "trainabl": [23, 26, 27, 45, 46, 91, 92, 124, 140, 142, 143, 771, 789, 790, 791, 792, 793, 1116, 1117, 1139, 1140, 1149], "lamb_upd": [23, 26, 27, 91, 92, 771], "lars_upd": [23, 26, 27, 91, 92, 771], "linear": [23, 26, 27, 74, 75, 76, 79, 80, 124, 139, 142, 143, 144, 167, 168, 171, 173, 176, 178, 180, 181, 182, 686, 713, 813, 825, 878, 880, 1100, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "linspac": [23, 26, 27, 74, 79, 80, 139, 206, 207, 208, 1100], "logspac": [23, 26, 27, 74, 79, 80, 139, 206], "lstm_updat": [23, 26, 27, 74, 79, 80, 139, 813], "mt": [23, 26, 27, 141], "match_kwarg": [23, 26, 27, 74, 79, 80, 686], "matrix_pow": [23, 26, 27, 74, 79, 80, 830], "maximum": [23, 26, 27, 55, 56, 74, 77, 78, 79, 80, 101, 102, 125, 139, 142, 144, 369, 392, 402, 686, 698, 699, 701, 713, 771, 794, 796, 918, 919, 920, 921, 922, 923, 983, 995, 1019, 1020, 1056, 1061, 1064, 1069, 1072, 1100, 1107, 1108], "minimum": [23, 26, 27, 55, 56, 77, 78, 101, 102, 139, 144, 402, 403, 406, 686, 721, 722, 745, 746, 753, 754, 918, 919, 920, 921, 922, 923, 1019, 1021, 1056, 1061, 1064, 1069, 1072, 1100, 1107, 1109], "multi_head_attent": [23, 26, 27, 74, 79, 80, 133, 136, 813], "multinomi": [23, 26, 27, 74, 79, 80, 1007], "multiprocess": [23, 26, 27, 74, 77, 78, 79, 80, 142, 156, 686], "ndim": [23, 26, 27, 127, 141, 830, 874, 876, 881, 883], "dimens": [23, 26, 27, 35, 36, 49, 50, 51, 52, 53, 54, 55, 56, 64, 65, 70, 71, 74, 77, 78, 79, 80, 95, 96, 97, 98, 99, 100, 101, 102, 111, 112, 117, 118, 125, 127, 128, 139, 142, 167, 188, 191, 206, 258, 260, 262, 263, 265, 267, 686, 708, 709, 710, 713, 724, 740, 769, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 827, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 871, 873, 874, 876, 878, 880, 881, 883, 884, 886, 890, 892, 893, 895, 896, 898, 902, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 924, 927, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 979, 980, 981, 982, 1007, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1110, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138], "ax": [23, 26, 27, 51, 52, 55, 56, 70, 71, 75, 76, 77, 78, 101, 102, 117, 118, 122, 125, 127, 134, 141, 188, 190, 192, 369, 392, 686, 704, 830, 858, 860, 878, 880, 887, 888, 889, 896, 898, 918, 928, 931, 936, 939, 940, 941, 942, 943, 953, 954, 955, 956, 957, 959, 962, 967, 970, 975, 978, 1019, 1020, 1021, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109], "nonzero": [23, 26, 27, 74, 79, 80, 402, 418, 421, 610, 613, 1019, 1107], "num_arrays_in_memori": [23, 26, 27, 74, 79, 80, 686], "num_cpu_cor": [23, 26, 27, 74, 79, 80, 135, 369], "num_gpu": [23, 26, 27, 74, 79, 80, 127, 135, 369], "num_ivy_arrays_on_dev": [23, 26, 27, 74, 79, 80, 369], "one_hot": [23, 26, 27, 74, 79, 80, 144, 686, 1100], "ones": [23, 26, 27, 35, 36, 74, 77, 78, 79, 80, 127, 139, 141, 142, 206, 220, 221, 253, 254, 256, 271, 275, 402, 478, 481, 686, 740, 1100], "optimizer_upd": [23, 26, 27, 91, 92, 771], "outputs_to_ivy_arrai": [23, 26, 27, 74, 79, 80, 123, 132, 134, 135, 157], "percent_used_mem_on_dev": [23, 26, 27, 74, 79, 80, 369], "print_all_arrays_in_memori": [23, 26, 27, 74, 79, 80, 686], "print_all_ivy_arrays_on_dev": [23, 26, 27, 74, 79, 80, 369], "promote_typ": [23, 26, 27, 74, 79, 80, 276], "queue_timeout": [23, 26, 27, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 686], "randint": [23, 26, 27, 49, 50, 74, 79, 80, 95, 96, 105, 106, 820, 821, 822, 824, 1007, 1011, 1100], "random_norm": [23, 26, 27, 49, 50, 74, 79, 80, 95, 96, 127, 813, 816, 819, 820, 821, 822, 823, 824, 830, 881, 883, 1007, 1024, 1025, 1029], "random_uniform": [23, 26, 27, 105, 106, 127, 135, 143, 1007, 1100], "scaled_dot_product_attent": [23, 26, 27, 74, 79, 80, 813], "scatter_flat": [23, 26, 27, 74, 79, 80, 686], "scatter_nd": [23, 26, 27, 74, 79, 80, 141, 686, 1100], "seed": [23, 26, 27, 74, 77, 78, 79, 80, 1007, 1100], "set_default_devic": [23, 26, 27, 74, 79, 80, 135, 369, 400], "set_default_dtyp": [23, 26, 27, 74, 79, 80, 129, 134, 276], "set_default_float_dtyp": [23, 26, 27, 74, 79, 80, 134, 276], "set_default_int_dtyp": [23, 26, 27, 74, 79, 80, 134, 276], "set_default_uint_dtyp": [23, 26, 27, 74, 79, 80, 276, 309, 367], "set_min_bas": [23, 26, 27, 74, 79, 80, 686], "set_min_denomin": [23, 26, 27, 74, 79, 80, 686], "set_nestable_mod": [23, 26, 27, 74, 79, 80, 686, 723, 767], "set_queue_timeout": [23, 26, 27, 74, 79, 80, 686], "set_shape_array_mod": [23, 26, 27, 74, 79, 80, 686, 752, 768], "set_split_factor": [23, 26, 27, 74, 79, 80, 369], "set_tmp_dir": [23, 26, 27, 74, 79, 80, 686], "set_with_grad": [23, 26, 27, 74, 79, 80, 771, 812], "shape_array_mod": [23, 26, 27, 74, 79, 80, 686, 749, 768], "shuffl": [23, 26, 27, 77, 78, 1007, 1100], "size": [23, 26, 27, 55, 56, 74, 77, 78, 79, 80, 101, 102, 127, 141, 142, 206, 234, 235, 237, 238, 369, 390, 391, 392, 686, 743, 813, 829, 830, 842, 844, 858, 860, 868, 870, 874, 876, 881, 883, 893, 895, 918, 932, 935, 953, 954, 955, 956, 957, 958, 959, 962, 1007, 1008, 1012, 1013, 1015, 1019, 1020, 1022, 1089, 1090, 1093, 1095, 1098, 1107, 1108, 1110, 1127, 1128, 1129], "product": [23, 26, 27, 41, 42, 133, 402, 610, 611, 613, 686, 704, 813, 828, 829, 830, 836, 838, 854, 857, 868, 870, 887, 889, 893, 895, 1056, 1057, 1060, 1073, 1076, 1127, 1138], "unknown": [23, 26, 27], "model": [23, 26, 27, 142, 143, 1100], "slogdet": [23, 26, 27, 74, 79, 80, 830], "split_factor": [23, 26, 27, 74, 79, 80, 369, 390], "split_func_cal": [23, 26, 27, 74, 79, 80, 369], "stable_divid": [23, 26, 27, 74, 79, 80, 129, 686], "stable_pow": [23, 26, 27, 74, 79, 80, 686], "stop_gradi": [23, 26, 27, 74, 77, 78, 79, 80, 91, 92, 143, 369, 392, 771, 778, 779, 780, 781, 785, 786, 787, 788, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 979, 980, 981, 982, 1100, 1143, 1144, 1145, 1146, 1147, 1148], "supports_inplac": [23, 26, 27, 74, 79, 80, 686], "tmp_dir": [23, 26, 27, 74, 79, 80, 686], "to_container_and_back": [23, 26, 27, 74, 79, 80, 771], "to_ivy_shap": [23, 26, 27, 74, 79, 80, 686], "to_list": [23, 26, 27, 77, 78, 686, 1100], "to_native_arrays_and_back": [23, 26, 27, 74, 79, 80, 123, 131, 157], "to_native_shap": [23, 26, 27, 74, 79, 80, 686], "to_scalar": [23, 26, 27, 74, 79, 80, 686], "total_mem_on_dev": [23, 26, 27, 74, 79, 80, 135, 369], "tpu_is_avail": [23, 26, 27, 74, 79, 80, 369], "try_else_non": [23, 26, 27, 74, 79, 80, 686], "type_promote_arrai": [23, 26, 27, 74, 79, 80, 276], "unset_default_devic": [23, 26, 27, 74, 79, 80, 369], "unset_default_dtyp": [23, 26, 27, 74, 79, 80, 276, 359], "unset_default_float_dtyp": [23, 26, 27, 74, 79, 80, 276], "unset_default_int_dtyp": [23, 26, 27, 74, 79, 80, 276], "unset_default_uint_dtyp": [23, 26, 27, 74, 79, 80, 276], "unset_nestable_mod": [23, 26, 27, 74, 79, 80, 686], "unset_shape_array_mod": [23, 26, 27, 74, 79, 80, 686], "unset_with_grad": [23, 26, 27, 74, 79, 80, 771], "unstack": [23, 26, 27, 77, 78, 133, 139, 142, 686, 1100], "used_mem_on_dev": [23, 26, 27, 74, 79, 80, 369], "valid_dtyp": [23, 26, 27, 74, 79, 80, 276], "value_is_nan": [23, 26, 27, 74, 79, 80, 686], "variable_data": [23, 26, 27, 74, 79, 80, 771], "with_grad": [23, 26, 27, 74, 79, 80, 771, 806], "abc": [24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 141, 369, 371, 686, 711, 983, 1000, 1139, 1140, 1143, 1147], "gelu": [24, 25, 75, 76, 167, 172, 1113], "approxim": [24, 25, 75, 76, 124, 167, 168, 169, 170, 171, 172, 402, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 573, 576, 578, 581, 630, 633, 650, 653, 655, 658, 675, 679, 680, 830, 862, 864, 871, 873], "185": [24, 25, 75, 76, 168, 169, 170, 172], "046": [24, 25, 75, 76, 168, 169, 170, 172], "leaky_relu": [24, 25, 75, 76, 127, 167, 177, 1100], "alpha": [24, 25, 75, 76, 127, 128, 167, 173, 174, 175, 176, 177], "39": [24, 25, 75, 76, 167, 173, 174, 175, 176, 177, 402, 428, 431, 508, 511, 771, 773, 776, 830, 868, 870, 1056, 1057, 1060], "85": [24, 25, 75, 76, 167, 173, 174, 175, 176, 177, 402, 473, 476], "17": [24, 25, 75, 76, 125, 133, 167, 173, 174, 175, 176, 177, 402, 493, 496, 830, 842, 844, 1007, 1012], "relu": [24, 25, 72, 73, 75, 76, 142, 143, 167, 173, 175, 176, 177, 182, 1100], "sigmoid": [24, 25, 75, 76, 139, 142, 143, 167, 187, 1100], "269": [24, 25, 75, 76, 167, 183, 184, 185, 186, 187], "731": [24, 25, 75, 76, 167, 183, 184, 185, 186, 187], "881": [24, 25, 41, 42, 75, 76, 87, 88, 167, 183, 184, 185, 186, 187, 402, 428, 429, 430, 431], "softmax": [24, 25, 72, 73, 75, 76, 167, 192, 813, 828, 829, 1100], "axi": [24, 25, 51, 52, 53, 54, 55, 56, 61, 63, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 81, 82, 99, 100, 101, 102, 107, 109, 110, 113, 114, 115, 116, 117, 118, 123, 125, 127, 128, 129, 133, 134, 136, 137, 139, 141, 144, 155, 167, 188, 189, 190, 191, 192, 206, 234, 235, 236, 237, 238, 239, 369, 392, 686, 704, 705, 714, 769, 830, 836, 837, 838, 842, 844, 893, 894, 895, 896, 897, 898, 902, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 924, 925, 926, 927, 928, 931, 932, 933, 934, 935, 936, 937, 938, 939, 944, 945, 946, 947, 948, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 974, 975, 978, 1007, 1018, 1019, 1020, 1021, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109], "422": [24, 25, 75, 76, 167, 188, 189, 190, 191, 192], "155": [24, 25, 75, 76, 167, 188, 189, 190, 191, 192], "softplu": [24, 25, 75, 76, 167, 197, 1100], "3461": [24, 25, 75, 76, 167, 193, 194, 195, 196, 197], "6491": [24, 25, 75, 76, 167, 193, 194, 195, 196, 197], "535": [24, 25, 75, 76, 167, 193, 194, 195, 196, 197], "42": [24, 25, 75, 76, 103, 104, 105, 106, 144, 167, 193, 194, 195, 196, 197, 771, 773, 776, 830, 868, 870, 1002, 1004, 1006, 1007, 1009, 1011, 1017, 1056, 1057, 1060], "tanh": [24, 25, 41, 42, 75, 76, 87, 88, 139, 167, 199, 402, 1100], "55": [24, 25, 75, 76, 167, 198, 202, 813, 819, 830, 868, 870, 1056, 1057, 1060], "501": [24, 25, 75, 76, 167, 198, 202], "collect": [29, 77, 78, 127, 155, 167, 203, 369, 686, 771, 813, 902, 983, 996, 1001, 1007, 1113, 1127, 1141, 1143], "args_to_contain": 29, "include_deriv": [29, 30, 31, 32, 33, 34, 983, 985, 995], "args_to_ivi": 29, "keyword": [29, 31, 32, 74, 77, 78, 79, 80, 122, 123, 127, 128, 134, 135, 136, 142, 206, 240, 243, 686, 693, 737, 983, 989, 1056, 1081, 1084, 1139, 1140], "nest": [29, 31, 32, 33, 34, 74, 77, 78, 79, 80, 122, 127, 129, 132, 133, 141, 142, 143, 156, 686, 758, 771, 812, 979, 980, 981, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148], "unchang": [29, 31, 32, 33, 34], "posit": [29, 31, 32, 41, 42, 51, 52, 55, 56, 87, 88, 97, 98, 101, 102, 123, 127, 128, 142, 155, 205, 206, 220, 221, 276, 316, 319, 402, 403, 406, 538, 541, 543, 544, 545, 546, 547, 610, 613, 629, 635, 638, 686, 713, 830, 831, 832, 833, 834, 835, 918, 932, 935, 953, 954, 955, 956, 957, 1007, 1017, 1019, 1022, 1089, 1090, 1093, 1095, 1098, 1107, 1110, 1116, 1117], "deriv": [29, 31, 32, 33, 34, 35, 36, 45, 46, 91, 92, 134, 135, 141, 143, 206, 215, 216, 218, 229, 230, 232, 253, 254, 256, 271, 273, 275, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 983, 985, 995, 1139, 1143, 1147, 1149], "tupl": [29, 31, 32, 33, 34, 35, 36, 49, 50, 51, 52, 55, 56, 70, 71, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 122, 123, 127, 128, 133, 134, 135, 137, 141, 142, 143, 156, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 206, 210, 211, 212, 245, 248, 276, 293, 296, 298, 300, 302, 321, 322, 324, 325, 363, 369, 375, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 713, 715, 717, 719, 760, 761, 763, 789, 791, 793, 813, 816, 819, 820, 821, 822, 823, 824, 827, 830, 831, 833, 835, 862, 864, 871, 873, 881, 882, 883, 887, 889, 896, 898, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 919, 921, 923, 924, 927, 928, 931, 936, 939, 940, 943, 953, 954, 955, 956, 957, 959, 962, 963, 966, 975, 978, 979, 980, 981, 982, 983, 985, 986, 988, 990, 991, 992, 994, 995, 997, 998, 999, 1000, 1002, 1004, 1006, 1019, 1022, 1024, 1030, 1031, 1033, 1034, 1035, 1039, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1110], "kei": [29, 31, 32, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 127, 133, 137, 142, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 298, 300, 302, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 692, 702, 715, 717, 719, 760, 761, 763, 789, 791, 793, 813, 828, 829, 831, 833, 835, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 979, 980, 981, 983, 986, 992, 996, 1002, 1004, 1006, 1009, 1011, 1030, 1031, 1033, 1090, 1092, 1094, 1095, 1097, 1099, 1116, 1117, 1127, 1138, 1143, 1147], "word": [29, 31, 32, 133, 206, 207, 208, 1007, 1013, 1015, 1116, 1117], "args_to_n": [29, 136, 141], "to_ivi": [29, 77, 78, 141, 983, 996], "leaf": [29, 33, 34, 77, 78, 129, 133, 142, 983, 984, 993, 994], "union": [29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 70, 71, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 122, 123, 125, 129, 132, 133, 134, 135, 136, 137, 139, 144, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 228, 229, 230, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 250, 251, 253, 254, 256, 258, 262, 263, 267, 268, 270, 271, 273, 275, 276, 281, 282, 283, 286, 288, 291, 293, 296, 298, 300, 302, 303, 304, 305, 306, 308, 309, 310, 313, 315, 316, 319, 327, 330, 332, 333, 336, 338, 341, 343, 346, 348, 351, 353, 354, 357, 359, 360, 361, 362, 363, 368, 369, 372, 373, 374, 375, 376, 377, 379, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 691, 694, 695, 698, 699, 701, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 724, 726, 727, 729, 730, 731, 736, 740, 743, 744, 751, 757, 758, 759, 760, 761, 763, 764, 765, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 789, 791, 792, 793, 794, 796, 798, 800, 802, 804, 807, 810, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 829, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 882, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 980, 981, 982, 983, 984, 985, 986, 994, 995, 999, 1000, 1001, 1002, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1033, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1110, 1111, 1143, 1144, 1145, 1147], "nativearrai": [29, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 75, 76, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 117, 118, 122, 123, 125, 129, 132, 133, 136, 137, 139, 141, 144, 157, 165, 167, 168, 171, 172, 173, 176, 177, 178, 181, 182, 183, 186, 187, 188, 191, 192, 193, 196, 197, 198, 202, 206, 207, 208, 210, 212, 215, 218, 229, 232, 234, 235, 237, 238, 240, 243, 245, 246, 248, 253, 256, 258, 262, 263, 267, 271, 275, 276, 283, 286, 288, 291, 293, 296, 298, 301, 310, 313, 316, 319, 327, 330, 333, 336, 338, 341, 343, 346, 348, 351, 354, 357, 363, 369, 375, 376, 379, 386, 392, 393, 397, 402, 403, 406, 407, 408, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 431, 433, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 486, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 511, 512, 513, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 571, 572, 573, 576, 577, 578, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 643, 644, 645, 648, 649, 650, 653, 655, 658, 660, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 685, 686, 687, 688, 690, 694, 695, 698, 699, 701, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 724, 726, 727, 729, 730, 731, 736, 740, 743, 744, 751, 758, 760, 761, 764, 765, 769, 770, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 789, 792, 793, 794, 796, 798, 800, 802, 804, 807, 810, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 829, 830, 831, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 949, 952, 953, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 983, 985, 986, 995, 999, 1000, 1001, 1002, 1005, 1007, 1008, 1013, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1034, 1035, 1039, 1040, 1044, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1093, 1094, 1095, 1098, 1099, 1107, 1108, 1109, 1110, 1111], "travers": [29, 33, 34, 77, 78, 133, 139, 141, 983, 995], "lowest": [29, 33, 34, 77, 78, 105, 106, 129, 156, 983, 995, 1007, 1009, 1010, 1011], "leav": [29, 33, 34, 74, 77, 78, 79, 80, 123, 124, 125, 127, 129, 133, 134, 136, 142, 143, 918, 963, 966, 983, 984, 985, 993, 994, 995], "to_n": [29, 77, 78], "item": [29, 34, 72, 73, 77, 78, 134, 139, 141, 142, 144, 276, 304, 369, 375, 686, 702, 725, 753, 754, 983, 988, 989, 990, 991, 995, 999, 1000, 1100, 1139, 1140], "asarrai": [35, 36, 74, 79, 80, 127, 136, 206, 813, 814, 1024, 1030, 1034], "nativedtyp": [35, 36, 122, 123, 134, 135, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 228, 229, 230, 232, 245, 246, 248, 250, 251, 253, 254, 256, 268, 270, 271, 273, 275, 276, 282, 283, 286, 305, 306, 308, 309, 310, 313, 353, 359, 368, 1056, 1081, 1084], "datatyp": [35, 36, 77, 78, 83, 84, 206, 210, 211, 212, 245, 246, 248, 276, 303, 353, 359], "nativedevic": [35, 36, 39, 40, 105, 106, 122, 123, 134, 135, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 228, 229, 230, 232, 234, 235, 237, 238, 245, 246, 248, 250, 251, 253, 254, 256, 268, 270, 271, 273, 275, 369, 373, 374, 375, 376, 377, 379, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 401, 686, 740, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1143, 1144, 1145, 1147], "interpret": [35, 36, 206, 210, 211, 212, 245, 246, 248], "empty_lik": [35, 36, 81, 82, 206], "uniniti": [35, 36, 206, 214, 215, 216, 218], "from_dlpack": [35, 36, 81, 82, 206], "full_lik": [35, 36, 81, 82, 206], "fill_valu": [35, 36, 81, 82, 134, 206, 228, 229, 230, 231, 232, 233, 402, 533, 536, 558, 561], "float": [35, 36, 41, 42, 45, 46, 51, 52, 53, 54, 57, 58, 87, 88, 91, 92, 97, 98, 99, 100, 103, 104, 123, 124, 127, 129, 133, 134, 136, 141, 143, 167, 173, 176, 198, 199, 200, 201, 205, 206, 207, 208, 214, 220, 221, 228, 229, 230, 232, 234, 235, 237, 238, 250, 251, 268, 270, 276, 283, 286, 305, 306, 316, 319, 338, 341, 354, 357, 369, 381, 387, 390, 391, 398, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 473, 476, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 498, 501, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 523, 526, 528, 531, 533, 536, 543, 546, 553, 556, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 674, 675, 676, 677, 678, 679, 680, 681, 685, 686, 698, 699, 701, 713, 721, 722, 745, 746, 753, 754, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 816, 820, 823, 829, 830, 831, 832, 833, 834, 835, 839, 841, 845, 847, 848, 850, 851, 853, 862, 864, 871, 873, 874, 876, 878, 880, 881, 883, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 979, 980, 981, 982, 1001, 1002, 1003, 1004, 1005, 1007, 1012, 1013, 1015, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1143, 1144, 1145, 1146, 1147, 1148], "scalar": [35, 36, 75, 76, 134, 139, 144, 156, 173, 175, 177, 206, 229, 230, 232, 686, 740, 765, 770, 830, 896, 898], "fill": [35, 36, 77, 78, 105, 106, 206, 214, 228, 229, 230, 232, 250, 251, 253, 254, 256, 268, 270, 271, 273, 275, 1007, 1009, 1010, 1011], "meshgrid": [35, 36, 81, 82, 206], "xy": [35, 36, 81, 82, 206, 240, 241, 242, 243, 244], "ones_lik": [35, 36, 81, 82, 144, 206, 1100], "tril": [35, 36, 81, 82, 206], "k": [35, 36, 81, 82, 121, 128, 139, 206, 220, 221, 222, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 686, 694, 813, 829, 830, 854, 857, 874, 876, 878, 880, 881, 883, 884, 886, 890, 892, 1007, 1012, 1013, 1015, 1019, 1022, 1107, 1110], "n": [35, 36, 70, 71, 117, 118, 121, 127, 206, 240, 243, 258, 260, 262, 263, 265, 267, 686, 695, 813, 825, 830, 842, 844, 854, 857, 861, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 881, 883, 884, 886, 890, 892, 893, 895, 896, 898, 899, 901, 918, 928, 931, 932, 935, 940, 943, 963, 966, 975, 978, 1007, 1012, 1013, 1015, 1019, 1022, 1056, 1065, 1068, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1110], "whose": [35, 36, 41, 42, 51, 52, 55, 56, 64, 65, 87, 88, 97, 98, 101, 102, 111, 112, 124, 127, 198, 199, 200, 201, 206, 258, 260, 262, 263, 265, 267, 402, 413, 414, 415, 416, 417, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 630, 631, 633, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 675, 676, 677, 678, 679, 680, 686, 697, 830, 831, 832, 833, 834, 835, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 878, 880, 881, 883, 884, 886, 890, 892, 918, 936, 939, 953, 954, 955, 956, 957, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1056, 1057, 1060], "innermost": [35, 36, 51, 52, 97, 98, 206, 258, 260, 262, 263, 265, 267, 830, 831, 832, 833, 834, 835, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 862, 864, 865, 867, 871, 873, 874, 876, 878, 880, 881, 883, 884, 886, 890, 892], "mxn": [35, 36, 206, 258, 260, 262, 263, 265, 267, 830, 842, 844, 862, 864, 865, 867, 871, 873, 874, 876, 884, 886, 890, 892], "matric": [35, 36, 51, 52, 97, 98, 155, 206, 240, 243, 258, 260, 262, 263, 265, 267, 813, 826, 830, 831, 832, 833, 834, 835, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 861, 862, 864, 865, 867, 871, 873, 874, 876, 878, 880, 881, 883, 884, 886, 890, 892], "int": [35, 36, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 70, 71, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118, 122, 123, 125, 128, 129, 133, 134, 135, 136, 137, 144, 167, 188, 191, 203, 204, 206, 220, 221, 228, 229, 232, 234, 235, 237, 238, 258, 260, 262, 263, 265, 267, 276, 293, 296, 308, 315, 316, 319, 327, 330, 343, 346, 369, 384, 385, 386, 392, 393, 397, 402, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 686, 692, 704, 705, 708, 709, 710, 713, 714, 724, 740, 743, 769, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 813, 814, 816, 818, 819, 820, 821, 822, 823, 824, 830, 831, 833, 835, 836, 838, 842, 844, 887, 889, 890, 892, 893, 895, 896, 898, 902, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 978, 979, 980, 981, 982, 983, 986, 995, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1017, 1019, 1020, 1021, 1045, 1046, 1049, 1051, 1054, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109], "diagon": [35, 36, 51, 52, 74, 79, 80, 206, 220, 221, 258, 260, 262, 263, 265, 267, 830, 890, 892], "triangular": [35, 36, 51, 52, 97, 98, 206, 258, 260, 262, 263, 265, 267, 830, 831, 832, 833, 834, 835, 874, 876], "triu": [35, 36, 81, 82, 206], "upper": [35, 36, 51, 52, 77, 78, 97, 98, 127, 206, 220, 221, 263, 265, 267, 830, 831, 832, 833, 834, 835, 874, 876, 1007, 1013, 1015], "zeros_lik": [35, 36, 81, 82, 128, 206, 813, 820, 823, 918, 919, 922, 1100], "creation": [36, 74, 77, 78, 79, 80, 82, 122, 127, 134, 135, 139, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 245, 248, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275], "data_typ": [37, 38, 83, 84, 122, 127, 134, 276, 281, 282, 283, 286, 288, 291, 293, 296, 298, 301, 303, 304, 305, 306, 308, 309, 310, 313, 315, 316, 319, 321, 322, 324, 325, 327, 330, 332, 333, 336, 338, 341, 343, 346, 348, 351, 353, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "astyp": [37, 38, 49, 50, 83, 84, 95, 96, 128, 134, 136, 276, 820, 821, 822, 824], "broadcast_arrai": [37, 38, 83, 84, 276], "broadcast_to": [37, 38, 83, 84, 134, 276], "can_cast": [37, 38, 83, 84, 129, 134, 276, 302, 316, 319], "cast": [37, 38, 83, 84, 128, 129, 134, 276, 283, 286, 298, 299, 300, 301, 302, 918, 924, 927, 1056, 1073, 1076, 1081, 1084, 1100], "occur": [37, 38, 64, 65, 83, 84, 111, 112, 276, 298, 299, 300, 301, 302, 1019, 1020, 1021, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1107, 1108, 1109], "rule": [37, 38, 51, 52, 83, 84, 97, 98, 125, 127, 129, 132, 133, 134, 137, 276, 283, 286, 298, 299, 300, 301, 302, 354, 357, 402, 443, 446, 468, 471, 493, 496, 610, 613, 635, 638, 830, 831, 832, 833, 834, 835, 836, 838, 868, 870, 878, 880], "float32": [37, 38, 49, 50, 83, 84, 89, 90, 95, 96, 125, 127, 134, 206, 271, 275, 276, 281, 282, 298, 299, 300, 302, 310, 313, 316, 319, 343, 346, 368, 686, 760, 761, 764, 820, 821, 822, 824], "float64": [37, 38, 127, 134, 276, 283, 286, 298, 299, 301, 316, 319, 343, 346, 359, 368], "as_n": [37, 38, 39, 40, 83, 84, 85, 86, 134, 276, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 369, 375, 376, 377, 378, 379, 380, 389], "finfo": [37, 38, 83, 84, 276], "iinfo": [37, 38, 83, 84, 137, 276], "is_bool_dtyp": [37, 38, 83, 84, 276], "is_float_dtyp": [37, 38, 83, 84, 276], "is_int_dtyp": [37, 38, 83, 84, 276, 686, 765], "is_uint_dtyp": [37, 38, 83, 84, 276], "result_typ": [37, 38, 83, 84, 134, 276], "arrays_and_dtyp": [37, 38, 83, 84, 276, 354, 355, 356, 357, 358], "to_devic": [39, 40, 77, 78, 85, 86, 369, 375, 394], "stream": [39, 40, 85, 86, 369, 393, 394, 395, 396, 397], "ab": [41, 42, 87, 88, 127, 131, 402, 407, 630, 633, 830, 896, 898, 1100], "aco": [41, 42, 87, 88, 402, 412, 1100], "real": [41, 42, 87, 88, 198, 199, 200, 201, 402, 408, 409, 410, 412, 413, 414, 423, 424, 425, 427, 433, 434, 435, 437, 438, 439, 440, 442, 493, 494, 495, 497, 508, 510, 512, 513, 515, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 603, 604, 610, 611, 612, 614, 630, 631, 632, 634, 635, 636, 637, 639, 660, 661, 662, 664, 665, 666, 667, 669, 670, 672, 680, 681, 682, 683, 684], "invers": [41, 42, 87, 88, 141, 155, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 830, 851, 853, 871, 873], "cosin": [41, 42, 87, 88, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "acosh": [41, 42, 87, 88, 276, 321, 322, 324, 325, 402, 1100], "hyperbol": [41, 42, 75, 76, 87, 88, 167, 198, 199, 200, 201, 202, 402, 413, 414, 415, 416, 417, 428, 429, 430, 431, 432, 443, 444, 445, 446, 447, 488, 489, 490, 491, 492, 655, 656, 657, 658, 659, 680], "x2": [41, 42, 43, 44, 51, 52, 77, 78, 87, 88, 89, 90, 97, 98, 123, 125, 128, 206, 271, 275, 276, 363, 369, 386, 402, 418, 419, 420, 421, 422, 438, 439, 440, 441, 442, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 620, 621, 622, 623, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 670, 671, 672, 673, 674, 686, 687, 688, 689, 690, 691, 813, 818, 830, 836, 837, 838, 854, 855, 856, 857, 868, 869, 870, 878, 879, 880, 887, 888, 889, 893, 894, 895, 1019, 1023, 1107, 1111], "asin": [41, 42, 87, 88, 402, 427, 1100], "sine": [41, 42, 87, 88, 402, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659], "asinh": [41, 42, 87, 88, 402, 432, 1100], "82": [41, 42, 428, 429], "atan": [41, 42, 87, 88, 402, 437, 1100], "tangent": [41, 42, 75, 76, 87, 88, 124, 167, 198, 199, 200, 201, 202, 402, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 675, 676, 677, 678, 679, 680], "atan2": [41, 42, 87, 88, 402, 442, 1100], "coordin": [41, 42, 87, 88, 206, 240, 243, 402, 438, 439, 440, 441, 442], "quotient": [41, 42, 87, 88, 402, 438, 439, 440, 441, 442], "785": [41, 42, 87, 88, 402, 438, 439, 440, 441, 442], "245": [41, 42, 438, 439], "57": [41, 42, 369, 381, 402, 423, 426, 428, 431, 438, 439, 441, 473, 476, 488, 491], "atanh": [41, 42, 87, 88, 402, 447, 1100], "bitwise_and": [41, 42, 87, 88, 402, 452], "integ": [41, 42, 70, 71, 77, 78, 87, 88, 105, 106, 117, 118, 127, 133, 134, 141, 206, 207, 208, 228, 276, 327, 330, 343, 346, 354, 357, 402, 403, 406, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 518, 521, 523, 526, 603, 606, 630, 633, 635, 638, 640, 643, 681, 685, 830, 861, 893, 895, 896, 898, 918, 958, 1007, 1009, 1010, 1011, 1017, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "bitwise_invert": [41, 42, 87, 88, 402, 457], "bitiwse_invert": [41, 42, 453, 454], "bitwise_left_shift": [41, 42, 87, 88, 402, 462], "bitwise_or": [41, 42, 87, 88, 402, 467], "bitwise_right_shift": [41, 42, 87, 88, 402, 472], "bitwise_xor": [41, 42, 87, 88, 402, 477], "ceil": [41, 42, 87, 88, 206, 207, 208, 402, 482, 1100], "express": [41, 42, 87, 88, 124, 137, 139, 144, 402, 408, 411, 423, 426, 433, 436, 438, 441, 483, 484, 485, 486, 487, 650, 651, 652, 653, 654, 675, 676, 677, 678, 679], "radian": [41, 42, 87, 88, 124, 402, 408, 411, 423, 426, 433, 436, 438, 441, 483, 484, 485, 486, 487, 650, 651, 652, 653, 654, 675, 676, 677, 678, 679], "54": [41, 42, 87, 88, 103, 104, 125, 402, 483, 484, 485, 486, 487, 488, 491, 660, 663, 813, 829, 830, 868, 870, 1002, 1004, 1006, 1007, 1012, 1056, 1057, 1060], "416": [41, 42, 402, 483, 484, 486], "99": [41, 42, 402, 428, 431, 483, 484, 1056, 1057, 1060], "cosh": [41, 42, 87, 88, 402, 413, 417, 492, 1100], "angl": [41, 42, 87, 88, 155, 198, 199, 200, 201, 402, 438, 441, 488, 489, 490, 491, 492, 655, 656, 657, 658, 659, 680], "divid": [41, 42, 77, 78, 87, 88, 125, 132, 402, 497, 523, 526, 686, 753, 918, 958], "dividend": [41, 42, 87, 88, 402, 493, 494, 495, 496, 497, 523, 524, 525, 527, 635, 636, 638], "divisor": [41, 42, 45, 46, 87, 88, 91, 92, 402, 493, 494, 495, 496, 497, 523, 524, 525, 527, 528, 530, 532, 635, 636, 638, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1056, 1077, 1080, 1085, 1088, 1143, 1144, 1145], "x1": [41, 42, 43, 44, 87, 88, 89, 90, 123, 125, 128, 206, 271, 275, 276, 310, 313, 363, 369, 386, 402, 418, 421, 422, 438, 441, 442, 448, 451, 452, 458, 461, 462, 463, 466, 467, 468, 471, 472, 473, 476, 477, 493, 494, 495, 496, 497, 498, 500, 501, 502, 523, 524, 525, 526, 527, 528, 531, 532, 533, 536, 537, 553, 556, 557, 558, 561, 562, 583, 586, 587, 588, 591, 592, 598, 601, 602, 603, 606, 607, 608, 609, 610, 613, 614, 620, 623, 624, 630, 633, 634, 635, 636, 637, 638, 639, 670, 671, 674, 686, 687, 688, 689, 690, 691, 694, 813, 818, 830, 836, 838, 854, 857, 868, 870, 878, 880, 887, 889, 893, 895, 1019, 1023, 1107, 1111], "erf": [41, 42, 87, 88, 402, 507], "exponenti": [41, 42, 87, 88, 402, 503, 504, 505, 506, 507, 508, 509, 511, 583, 586, 630, 631, 633], "gauss": [41, 42, 87, 88, 402, 503, 504, 505, 506, 507], "exp": [41, 42, 87, 88, 402, 512, 513, 516, 583, 586, 1100], "evalu": [41, 42, 77, 78, 87, 88, 133, 402, 508, 509, 510, 511, 512, 513, 515, 516, 517, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 593, 595, 597, 615, 616, 617, 618, 619, 625, 626, 627, 629, 645, 646, 647, 648, 649, 665, 668, 983, 984, 993, 994, 1089, 1090, 1093, 1095, 1098], "expm1": [41, 42, 87, 88, 402, 517], "244": [41, 42, 513, 514], "918": [41, 42, 513, 514], "48": [41, 42, 167, 173, 176, 402, 513, 514, 660, 663, 771, 773, 776, 830, 868, 870, 1056, 1057, 1060], "147": [41, 42, 167, 188, 191, 402, 513, 514, 516], "floor": [41, 42, 87, 88, 402, 468, 471, 522, 686, 712, 1100], "floor_divid": [41, 42, 87, 88, 402, 527], "13": [41, 42, 105, 106, 125, 127, 133, 276, 327, 330, 369, 381, 402, 448, 451, 473, 476, 488, 491, 513, 516, 523, 524, 526, 660, 663, 686, 704, 771, 773, 776, 813, 829, 830, 842, 844, 868, 870, 1009, 1011, 1019, 1023, 1024, 1025, 1029, 1056, 1057, 1060, 1107, 1111], "greater": [41, 42, 77, 78, 87, 88, 402, 408, 411, 423, 426, 438, 441, 458, 461, 468, 471, 518, 521, 523, 526, 532, 630, 633, 635, 638, 645, 648, 681, 685, 830, 836, 838, 918, 959, 962, 1007, 1013, 1015], "greater_equ": [41, 42, 87, 88, 402, 537, 583, 585, 587], "isfinit": [41, 42, 87, 88, 127, 402, 542], "out_i": [41, 42, 87, 88, 402, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552], "self_i": [41, 42, 87, 88, 538, 539, 540, 543, 544, 545, 548, 549, 550], "finit": [41, 42, 87, 88, 402, 418, 421, 438, 441, 538, 539, 540, 541, 542, 610, 613, 630, 633, 635, 638], "isinf": [41, 42, 87, 88, 402, 547], "neg": [41, 42, 55, 56, 70, 71, 75, 76, 87, 88, 101, 102, 117, 118, 129, 133, 136, 167, 173, 175, 176, 177, 206, 207, 208, 220, 221, 402, 538, 541, 543, 544, 545, 546, 547, 610, 613, 619, 630, 633, 635, 638, 830, 881, 883, 893, 895, 896, 898, 918, 936, 939, 953, 954, 955, 956, 957, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "infin": [41, 42, 87, 88, 124, 205, 276, 283, 286, 402, 403, 406, 413, 416, 418, 421, 428, 431, 433, 436, 438, 441, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 523, 526, 538, 541, 543, 544, 545, 546, 547, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 830, 896, 898, 1056, 1061, 1064, 1069, 1072, 1089, 1090, 1093, 1095, 1098], "isnan": [41, 42, 87, 88, 402, 552], "nan": [41, 42, 77, 78, 87, 88, 122, 124, 127, 205, 276, 283, 286, 402, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 538, 541, 548, 549, 550, 551, 552, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 686, 726, 770, 813, 829, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1093, 1095, 1098], "less_equ": [41, 42, 87, 88, 402, 562], "log10": [41, 42, 87, 88, 402, 572], "logarithm": [41, 42, 87, 88, 402, 508, 511, 563, 566, 568, 569, 570, 571, 572, 573, 576, 578, 579, 580, 581, 582, 583, 586, 830, 877], "log1p": [41, 42, 87, 88, 402, 577], "log2": [41, 42, 87, 88, 402, 582], "logaddexp": [41, 42, 87, 88, 402], "logical_and": [41, 42, 87, 88, 402, 592, 1100], "logical_not": [41, 42, 87, 88, 402, 597, 1100], "logical_or": [41, 42, 87, 88, 402, 602, 1100], "logical_xor": [41, 42, 87, 88, 402, 607], "multipli": [41, 42, 87, 88, 125, 130, 132, 402, 614, 686, 704], "not_equ": [41, 42, 87, 88, 402, 624], "pow": [41, 42, 87, 88, 402, 634], "expon": [41, 42, 402, 630, 631, 633, 686, 754], "remaind": [41, 42, 77, 78, 87, 88, 402, 639, 686, 712, 918, 958], "respect": [41, 42, 45, 46, 87, 88, 91, 92, 123, 125, 127, 132, 133, 134, 137, 206, 240, 243, 402, 403, 406, 418, 421, 438, 441, 448, 451, 458, 461, 463, 466, 468, 471, 473, 476, 493, 496, 498, 501, 523, 526, 528, 531, 533, 536, 553, 556, 558, 561, 583, 586, 588, 591, 598, 601, 603, 606, 610, 613, 620, 623, 635, 636, 637, 638, 639, 670, 674, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 794, 796, 798, 800, 802, 804, 830, 874, 876, 979, 980, 981, 982], "x2_i": [41, 42, 87, 88, 402, 418, 421, 438, 441, 448, 451, 458, 461, 463, 466, 468, 471, 473, 476, 493, 496, 498, 501, 523, 526, 528, 531, 533, 536, 553, 556, 558, 561, 583, 586, 588, 591, 598, 601, 603, 606, 610, 613, 620, 623, 630, 633, 635, 636, 637, 638, 639, 670, 674], "11": [41, 42, 45, 46, 74, 79, 80, 87, 88, 101, 102, 105, 106, 125, 127, 133, 402, 418, 420, 421, 422, 448, 451, 513, 515, 635, 636, 638, 640, 643, 686, 704, 714, 773, 774, 830, 842, 844, 868, 870, 902, 913, 916, 918, 936, 939, 959, 961, 983, 1000, 1007, 1009, 1010, 1011, 1019, 1023, 1024, 1025, 1029, 1056, 1057, 1060, 1107, 1111], "18": [41, 42, 87, 88, 125, 133, 402, 438, 441, 473, 476, 493, 496, 635, 636, 655, 656, 657, 658, 659, 830, 842, 844, 868, 870, 1056, 1057, 1060], "94": [41, 42, 87, 88, 428, 432, 645, 646], "256": [41, 42, 645, 646, 813, 819], "0001": [41, 42, 645, 646, 1143, 1144, 1145], "36": [41, 42, 402, 438, 441, 645, 646, 830, 868, 870, 1056, 1057, 1060], "67": [41, 42, 87, 88, 133, 402, 473, 476, 488, 491, 645, 646, 655, 657, 659], "45": [41, 42, 87, 88, 127, 402, 438, 440, 441, 442, 493, 495, 496, 497, 645, 646, 771, 773, 776, 830, 868, 870, 918, 958, 1001, 1002, 1005, 1056, 1057, 1060], "24": [41, 42, 103, 104, 402, 473, 476, 645, 646, 660, 663, 686, 704, 771, 773, 776, 830, 842, 844, 868, 870, 1001, 1002, 1004, 1005, 1006, 1056, 1057, 1060], "678": [41, 42, 645, 646], "32": [41, 42, 45, 46, 127, 142, 167, 173, 176, 402, 473, 476, 645, 646, 773, 774, 813, 816, 819, 820, 823, 830, 868, 870, 1019, 1023, 1056, 1057, 1060, 1107, 1111], "sin": [41, 42, 87, 88, 132, 139, 402, 654, 686, 713, 1100], "841": [41, 42, 87, 88, 402, 650, 651, 652, 653, 654], "909": [41, 42, 87, 88, 402, 650, 651, 652, 653, 654], "141": [41, 42, 87, 88, 402, 650, 651, 652, 653, 654], "sinh": [41, 42, 87, 88, 402, 659, 1100], "63": [41, 42, 45, 46, 87, 88, 97, 98, 402, 655, 656, 657, 658, 659, 660, 663, 773, 774, 830, 831, 833, 834, 835, 868, 870, 1056, 1057, 1060], "23": [41, 42, 87, 88, 402, 438, 441, 473, 476, 543, 546, 635, 638, 645, 648, 655, 656, 657, 658, 659, 813, 819, 830, 842, 844, 1019, 1023, 1107, 1111], "232": [41, 42, 87, 88, 402, 655, 656, 657, 658, 659], "51": [41, 42, 402, 473, 476, 655, 656, 658], "sqrt": [41, 42, 87, 88, 402, 664, 830, 896, 898], "squar": [41, 42, 51, 52, 87, 88, 97, 98, 127, 402, 660, 661, 662, 663, 664, 669, 813, 816, 830, 831, 832, 833, 834, 835, 839, 841, 845, 847, 848, 850, 851, 853, 861, 877, 878, 880, 881, 883], "subtract": [41, 42, 87, 88, 125, 132, 402, 671], "tan": [41, 42, 87, 88, 123, 124, 128, 129, 133, 136, 139, 402, 423, 426, 428, 431, 676, 830, 842, 844, 1024, 1025, 1029, 1045, 1046, 1049, 1100], "56": [41, 42, 87, 88, 125, 402, 660, 663, 675, 676, 677, 678, 679, 771, 773, 776, 830, 868, 870, 1056, 1057, 1060], "19": [41, 42, 87, 88, 125, 402, 428, 430, 432, 473, 476, 675, 676, 677, 678, 679, 830, 842, 844], "762": [41, 42, 87, 88, 167, 198, 200, 201, 202, 402, 680], "964": [41, 42, 87, 88, 167, 198, 200, 201, 202, 402, 680], "trunc": [41, 42, 87, 88, 402, 682], "elementwis": [42, 77, 78, 88, 122, 129, 139, 144, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 483, 486, 488, 491, 493, 496, 498, 501, 503, 506, 508, 511, 513, 516, 518, 521, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 583, 586, 588, 591, 593, 596, 598, 601, 603, 606, 608, 609, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 670, 674, 675, 679, 680, 681, 685], "all_equ": [43, 44, 89, 90, 686, 691], "equality_matrix": [43, 44, 89, 90, 686, 687, 688, 689, 690, 691], "compar": [43, 44, 77, 78, 89, 90, 127, 137, 142, 686, 687, 688, 689, 690, 691, 694, 695, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1045, 1046, 1049, 1051, 1054], "matrix": [43, 44, 51, 52, 77, 78, 89, 90, 97, 98, 206, 240, 243, 258, 262, 263, 267, 686, 687, 688, 689, 690, 691, 698, 813, 826, 830, 831, 832, 833, 834, 835, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 861, 862, 864, 865, 867, 871, 873, 874, 876, 878, 880, 881, 883, 884, 886, 890, 892, 899, 901, 1127, 1137], "gather_nd": [43, 44, 77, 78, 89, 90, 686, 719, 1100], "cuda": [43, 44, 77, 78, 89, 90, 105, 106, 139, 142, 156, 206, 234, 235, 237, 238, 369, 372, 389, 390, 686, 714, 715, 716, 717, 718, 719, 740, 743, 744, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150], "to_numpi": [43, 44, 77, 78, 89, 90, 142, 686, 761, 1100], "adam_step": [45, 46, 91, 92, 771, 777], "mw": [45, 46, 91, 92, 143, 771, 773, 774, 775, 776, 777, 778, 780], "vw": [45, 46, 91, 92, 143, 771, 773, 774, 775, 776, 777, 778, 780], "beta1": [45, 46, 91, 92, 143, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 1143, 1144, 1145], "beta2": [45, 46, 91, 92, 143, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 1143, 1144, 1145], "999": [45, 46, 87, 88, 91, 92, 143, 198, 199, 201, 402, 680, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 1143, 1144, 1145], "epsilon": [45, 46, 53, 54, 57, 58, 91, 92, 99, 100, 103, 104, 129, 133, 136, 143, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 830, 862, 864, 871, 873, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 1001, 1002, 1003, 1004, 1005, 1006, 1141, 1142, 1143, 1144, 1145], "1e": [45, 46, 53, 54, 57, 58, 91, 92, 99, 100, 103, 104, 129, 133, 136, 143, 144, 276, 316, 319, 686, 722, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 830, 881, 883, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 1001, 1002, 1003, 1004, 1005, 1006, 1100, 1143, 1144, 1145, 1146, 1148], "07": [45, 46, 53, 54, 87, 88, 91, 92, 99, 100, 143, 402, 438, 440, 441, 442, 645, 648, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 1143, 1144, 1145], "cost": [45, 46, 91, 92, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 979, 980, 981, 982], "weight": [45, 46, 91, 92, 129, 133, 143, 144, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 813, 826, 827, 829, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1139, 1140, 1143, 1145, 1146], "ws": [45, 46, 91, 92, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "dc": [45, 46, 91, 92, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "dw": [45, 46, 91, 92, 771, 773, 774, 775, 776, 777, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "w": [45, 46, 49, 50, 77, 78, 91, 92, 95, 96, 139, 142, 143, 686, 695, 771, 773, 774, 775, 776, 777, 778, 780, 781, 785, 787, 788, 794, 796, 797, 798, 800, 801, 802, 804, 805, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824], "averag": [45, 46, 91, 92, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 979, 980, 981], "moment": [45, 46, 91, 92, 130, 156, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1143, 1144, 1145], "forget": [45, 46, 91, 92, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1143, 1144, 1145], "dure": [45, 46, 77, 78, 91, 92, 129, 133, 134, 135, 136, 156, 203, 204, 369, 393, 397, 686, 766, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 830, 854, 857, 979, 980, 981, 982, 1056, 1077, 1080, 1085, 1088, 1139, 1140, 1143, 1144, 1145, 1147], "adam": [45, 46, 91, 92, 142, 143, 144, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1100, 1143, 1145], "divis": [45, 46, 91, 92, 129, 402, 468, 471, 493, 496, 523, 526, 635, 638, 686, 712, 722, 746, 753, 754, 771, 773, 774, 775, 776, 777, 778, 780, 794, 796, 1143, 1144, 1145], "delta": [45, 46, 91, 92, 771, 773, 774, 775, 776, 777], "dcdw": [45, 46, 91, 92, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 785, 786, 787, 788, 794, 795, 796, 797, 798, 799, 800, 801], "adam_step_delta": [45, 46, 91, 92, 771, 773, 774, 775, 776, 777], "639": [45, 46, 771, 773, 774, 776], "00121": [45, 46, 773, 774], "0102": [45, 46, 773, 774], "0397": [45, 46, 773, 774], "exclus": [45, 46, 77, 78, 91, 92, 127, 129, 133, 144, 206, 207, 208, 686, 704, 733, 734, 736, 771, 789, 790, 791, 792, 793, 1007, 1009, 1010], "is_var": [45, 46, 91, 92, 771, 789, 790, 791, 792, 793], "gradient": [46, 77, 78, 92, 122, 133, 142, 143, 155, 156, 369, 392, 773, 774, 775, 776, 777, 778, 780, 782, 783, 785, 787, 789, 792, 794, 796, 798, 800, 802, 804, 806, 807, 808, 809, 810, 811, 812, 979, 980, 981, 982, 1100, 1143, 1144, 1145, 1146, 1147, 1148], "depthwise_conv2d": [49, 50, 95, 96, 813, 824, 1100], "stride": [49, 50, 95, 96, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "pad": [49, 50, 95, 96, 686, 713, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 918, 928, 931, 975, 978, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "data_format": [49, 50, 95, 96, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "nhwc": [49, 50, 95, 96, 813, 816, 817, 820, 821, 822, 823, 824, 1127, 1130, 1131, 1134], "dilat": [49, 50, 95, 96, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "batch_siz": [49, 50, 95, 96, 142, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1007, 1008], "h": [49, 50, 95, 96, 121, 133, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 983, 986, 999], "convolut": [49, 50, 95, 96, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "fh": [49, 50, 95, 96, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824], "fw": [49, 50, 95, 96, 127, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824], "d_in": [49, 50, 95, 96, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824], "slide": [49, 50, 95, 96, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "valid": [49, 50, 70, 71, 95, 96, 117, 118, 127, 128, 134, 139, 276, 303, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 918, 963, 966, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "algorithm": [49, 50, 75, 76, 95, 96, 156, 168, 170, 172, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "nchw": [49, 50, 95, 96, 813, 816, 817, 820, 821, 822, 823, 824, 1127, 1130, 1131, 1134], "255": [49, 50, 95, 96, 820, 821, 822, 824], "128": [49, 50, 95, 96, 276, 327, 330, 813, 819, 820, 821, 822, 824, 830, 868, 870], "linear_algebra": [51, 52, 97, 98, 122, 141, 830, 831, 834, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 858, 860, 861, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901], "choleski": [51, 52, 97, 98, 830, 835], "symmetr": [51, 52, 97, 98, 133, 830, 831, 832, 833, 834, 835, 845, 847, 848, 850, 899, 901], "u": [51, 52, 97, 98, 830, 831, 832, 833, 834, 835, 881, 883], "625": [51, 52, 830, 831, 832, 834], "25": [51, 52, 53, 54, 87, 88, 103, 104, 133, 402, 493, 495, 496, 497, 655, 658, 660, 663, 665, 668, 830, 831, 832, 834, 842, 844, 851, 853, 902, 908, 909, 911, 1001, 1002, 1004, 1005, 1006, 1056, 1057, 1060], "cross": [51, 52, 53, 54, 74, 79, 80, 99, 100, 830, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 1100], "det": [51, 52, 74, 79, 80, 830], "offset": [51, 52, 57, 58, 103, 104, 830, 842, 843, 844, 890, 891, 892, 1001, 1002, 1003, 1004, 1005, 1006], "axis1": [51, 52, 55, 56, 101, 102, 830, 842, 843, 844, 918, 967, 968, 969, 970], "axis2": [51, 52, 830, 842, 843, 844], "eigh": [51, 52, 74, 79, 80, 830], "namedtupl": [51, 52, 64, 65, 111, 112, 830, 845, 846, 847, 874, 875, 876, 881, 883, 1024, 1025, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039], "eigvalsh": [51, 52, 74, 79, 80, 830], "inv": [51, 52, 74, 79, 80, 141, 830, 1100], "matmul": [51, 52, 97, 98, 122, 127, 130, 139, 830, 881, 883, 1100], "matrix_norm": [51, 52, 77, 78, 830], "ord": [51, 52, 77, 78, 830, 858, 859, 860, 896, 897, 898], "fro": [51, 52, 830, 858, 859, 860], "keepdim": [51, 52, 61, 63, 68, 69, 70, 71, 77, 78, 107, 109, 110, 115, 116, 117, 118, 137, 686, 769, 830, 858, 859, 860, 896, 897, 898, 1019, 1020, 1021, 1056, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109], "matrix_rank": [51, 52, 74, 79, 80, 830], "rtol": [51, 52, 830, 862, 863, 864, 871, 872, 873], "matrix_transpos": [51, 52, 74, 79, 80, 141, 830], "outer": [51, 52, 74, 79, 80, 830, 979, 980, 981, 982], "pinv": [51, 52, 74, 79, 80, 830, 1100], "qr": [51, 52, 74, 79, 80, 830], "reduc": [51, 52, 70, 71, 77, 78, 117, 118, 141, 369, 392, 686, 709, 830, 874, 875, 876, 1019, 1020, 1021, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109], "solv": [51, 52, 74, 79, 80, 140, 155, 830], "svd": [51, 52, 74, 79, 80, 830, 1100], "full_matric": [51, 52, 830, 881, 882, 883], "svdval": [51, 52, 74, 79, 80, 830], "tensordot": [51, 52, 74, 79, 80, 830], "trace": [51, 52, 74, 77, 78, 79, 80, 139, 156, 686, 733, 734, 736, 830], "vecdot": [51, 52, 74, 79, 80, 830], "vector_norm": [51, 52, 77, 78, 830], "vector_to_skew_symmetric_matrix": [51, 52, 74, 79, 80, 830, 1100], "binary_cross_entropi": [53, 54, 99, 100, 902, 907], "pred": [53, 54, 99, 100, 129, 133, 136, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917], "predict": [53, 54, 99, 100, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917], "amount": [53, 54, 99, 100, 135, 369, 398, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917], "smooth": [53, 54, 99, 100, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917], "binari": [53, 54, 99, 100, 402, 448, 451, 463, 466, 473, 476, 603, 606, 902, 903, 904, 905, 906, 907], "entropi": [53, 54, 99, 100, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917], "357": [53, 54, 99, 100, 902, 903, 904, 905, 906, 907, 913, 914, 916, 917], "223": [53, 54, 99, 100, 902, 903, 904, 905, 906, 907, 913, 914, 915, 917], "cross_entropi": [53, 54, 99, 100, 129, 133, 136, 902, 912, 913, 916], "along": [53, 54, 55, 56, 70, 71, 75, 76, 77, 78, 99, 100, 101, 102, 117, 118, 122, 136, 188, 190, 192, 206, 234, 235, 237, 238, 369, 392, 686, 704, 705, 714, 769, 830, 858, 860, 890, 892, 893, 895, 896, 898, 902, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 924, 927, 936, 939, 944, 947, 953, 954, 955, 956, 957, 958, 963, 966, 971, 974, 979, 980, 981, 982, 1007, 1018, 1019, 1020, 1021, 1045, 1046, 1049, 1051, 1054, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109], "3862944": [53, 54, 902, 908, 909, 911], "sparse_cross_entropi": [53, 54, 99, 100, 902, 917], "logit": [53, 54, 99, 100, 902, 913, 914, 915, 916, 917], "spars": [53, 54, 99, 100, 902, 913, 914, 915, 916, 917], "loss": [54, 100, 122, 129, 142, 143, 144, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 1100], "clip": [55, 56, 77, 78, 101, 102, 129, 133, 136, 139, 142, 144, 402, 608, 609, 686, 698, 699, 701, 918, 923, 1100], "x_min": [55, 56, 77, 78, 101, 102, 139, 144, 918, 919, 920, 921, 922, 923], "x_max": [55, 56, 77, 78, 101, 102, 139, 144, 918, 919, 920, 921, 922, 923], "roll": [55, 56, 101, 102, 123, 133, 918, 919, 920, 957], "concat": [55, 56, 77, 78, 101, 102, 128, 369, 392, 686, 713, 918, 1100], "xs": [55, 56, 91, 92, 101, 102, 133, 686, 687, 690, 695, 771, 782, 783, 784, 918, 924, 925, 926, 927], "constant_pad": [55, 56, 101, 102, 918], "pad_width": [55, 56, 101, 102, 918, 928, 929, 930, 931, 975, 976, 977, 978], "expand_dim": [55, 56, 101, 102, 139, 142, 918, 1100], "flip": [55, 56, 101, 102, 141, 142, 144, 402, 453, 456, 918, 1100], "permute_dim": [55, 56, 101, 102, 918], "reshap": [55, 56, 77, 78, 101, 102, 127, 136, 139, 141, 144, 918, 1100], "shift": [55, 56, 101, 102, 123, 125, 402, 458, 461, 468, 471, 918, 953, 954, 955, 956, 957], "sequenc": [55, 56, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 125, 127, 128, 134, 137, 155, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 203, 204, 298, 300, 302, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 686, 687, 689, 691, 695, 715, 717, 719, 737, 760, 761, 763, 789, 791, 793, 831, 833, 835, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 919, 921, 923, 953, 954, 955, 956, 957, 958, 963, 966, 983, 999, 1002, 1004, 1006, 1007, 1009, 1010, 1011, 1030, 1031, 1033, 1056, 1061, 1064, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1127, 1136, 1141, 1142, 1149, 1150], "larger": [55, 56, 101, 102, 127, 139, 144, 276, 316, 319, 918, 919, 922, 953, 954, 955, 956, 957, 1056, 1077, 1080, 1085, 1088], "flatten": [55, 56, 64, 65, 77, 78, 101, 102, 111, 112, 686, 713, 830, 868, 870, 896, 898, 918, 944, 947, 953, 954, 955, 956, 957, 1019, 1020, 1021, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1107, 1108, 1109], "restor": [55, 56, 101, 102, 918, 953, 954, 955, 956, 957], "squeez": [55, 56, 101, 102, 918, 1100], "stack": [55, 56, 77, 78, 101, 102, 139, 206, 258, 262, 263, 267, 830, 839, 841, 842, 844, 845, 847, 848, 850, 851, 853, 854, 857, 861, 862, 864, 865, 867, 871, 873, 874, 876, 881, 883, 884, 886, 890, 892, 918, 983, 984, 993, 994, 1100, 1127, 1136], "swapax": [55, 56, 101, 102, 918], "axis0": [55, 56, 101, 102, 918, 967, 968, 969, 970], "tile": [55, 56, 101, 102, 918, 1100], "rep": [55, 56, 101, 102, 918, 971, 972, 973, 974], "zero_pad": [55, 56, 101, 102, 918, 1100], "layer_norm": [57, 58, 103, 104, 1001, 1006], "normalized_idx": [57, 58, 103, 104, 1001, 1002, 1003, 1004, 1005, 1006], "05": [57, 58, 103, 104, 127, 771, 773, 776, 1001, 1002, 1003, 1004, 1005, 1006], "scale": [57, 58, 103, 104, 128, 133, 369, 390, 391, 771, 798, 800, 813, 825, 828, 829, 1001, 1002, 1003, 1004, 1005, 1006, 1127, 1135, 1138, 1143, 1146], "new_std": [57, 58, 103, 104, 1001, 1002, 1003, 1004, 1005, 1006, 1141, 1142], "normal": [57, 58, 103, 104, 142, 918, 963, 966, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1012, 1141, 1142], "small": [57, 58, 103, 104, 125, 129, 139, 143, 156, 402, 610, 613, 830, 862, 864, 871, 873, 1001, 1002, 1003, 1004, 1005, 1006, 1141, 1142], "constant": [57, 58, 103, 104, 122, 129, 143, 144, 156, 918, 928, 931, 983, 989, 1001, 1002, 1003, 1004, 1005, 1006, 1118, 1119, 1123, 1126, 1139, 1140, 1141, 1142], "denomin": [57, 58, 103, 104, 129, 156, 686, 712, 722, 746, 753, 754, 1001, 1002, 1003, 1004, 1005, 1006, 1141, 1142], "_min_bas": [57, 58, 103, 104, 686, 754, 1001, 1002, 1003, 1004, 1005, 1006, 1141, 1142], "learnabl": [57, 58, 103, 104, 144, 1001, 1002, 1003, 1004, 1005, 1006, 1141, 1142], "gamma": [57, 58, 103, 104, 1001, 1002, 1003, 1004, 1005, 1006], "beta": [57, 58, 103, 104, 1001, 1002, 1003, 1004, 1005, 1006], "after": [57, 58, 77, 78, 103, 104, 125, 127, 128, 133, 134, 138, 276, 363, 369, 402, 660, 663, 771, 778, 780, 782, 783, 785, 787, 794, 796, 798, 800, 802, 804, 1001, 1002, 1003, 1004, 1005, 1006, 1143, 1144, 1145, 1146, 1147, 1148], "0976": [57, 58, 1001, 1002, 1003, 1005], "3452": [57, 58, 1001, 1002, 1003, 1005], "2740": [57, 58, 1001, 1002, 1003, 1005], "1047": [57, 58, 1001, 1002, 1003, 1005], "5886": [57, 58, 1001, 1002, 1003, 1005], "2732": [57, 58, 1001, 1002, 1003, 1005], "7696": [57, 58, 1001, 1002, 1003, 1005], "7024": [57, 58, 1001, 1002, 1003, 1005], "2518": [57, 58, 1001, 1002, 1003, 1005], "001": [57, 58, 142, 143, 276, 316, 319, 402, 645, 648, 771, 773, 776, 1001, 1002, 1003, 1005], "576": [57, 58, 1001, 1002, 1003, 1005], "292": [57, 58, 1001, 1002, 1003, 1005], "33": [57, 58, 87, 88, 428, 430, 830, 868, 870, 983, 1000, 1001, 1002, 1003, 1005, 1056, 1057, 1060], "581": [57, 58, 771, 773, 776, 1001, 1002, 1003, 1005], "891": [57, 58, 167, 183, 186, 1001, 1002, 1003, 1005], "01": [57, 58, 144, 402, 640, 643, 645, 648, 1001, 1002, 1003, 1005], "579": [57, 58, 1001, 1002, 1003, 1005], "931": [57, 58, 1001, 1002, 1003, 1005], "norm": [58, 77, 78, 104, 122, 686, 698, 699, 701, 830, 858, 860, 896, 898, 1002, 1003, 1004, 1005, 1006, 1100, 1142, 1143, 1145], "random": [60, 77, 78, 106, 122, 135, 144, 155, 1008, 1009, 1010, 1012, 1013, 1015, 1017, 1018, 1100], "unique_al": [64, 65, 111, 112, 1024], "unique_count": [64, 65, 111, 112, 1024, 1031], "count": [64, 65, 70, 71, 111, 112, 117, 118, 125, 142, 369, 386, 830, 893, 895, 918, 936, 939, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "field": [64, 65, 111, 112, 155, 830, 845, 847, 874, 876, 881, 883, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034], "uc": [64, 65, 1030, 1032], "unique_invers": [64, 65, 111, 112, 1024], "unique_valu": [64, 65, 111, 112, 1024], "argsort": [66, 67, 113, 114, 1045], "descend": [66, 67, 113, 114, 830, 881, 883, 884, 886, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055], "sort": [67, 74, 77, 78, 79, 80, 114, 122, 830, 845, 847, 881, 883, 884, 886, 1046, 1049], "einsum": [68, 69, 115, 116, 1056], "equat": [68, 69, 115, 116, 830, 878, 880, 1056, 1057, 1058, 1059, 1060], "max": [68, 69, 77, 78, 115, 116, 276, 316, 319, 327, 330, 402, 608, 686, 698, 699, 701, 709, 743, 744, 830, 862, 864, 871, 873, 1056, 1143, 1145], "min": [68, 69, 77, 78, 115, 116, 276, 316, 319, 327, 330, 402, 609, 686, 709, 743, 744, 753, 830, 874, 876, 881, 883, 884, 886, 896, 898, 1056], "prod": [68, 69, 77, 78, 115, 116, 125, 134, 686, 709, 1056], "std": [68, 69, 115, 116, 125, 1007, 1012, 1024, 1025, 1029, 1056], "var": [68, 69, 115, 116, 119, 120, 125, 139, 979, 980, 981, 1056], "statist": [69, 116, 119, 120, 122, 127, 134, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088], "logic": [70, 71, 117, 118, 127, 131, 132, 134, 135, 141, 369, 384, 402, 588, 591, 593, 596, 598, 601, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100], "AND": [70, 71, 117, 118, 402, 448, 451, 588, 591, 1089, 1090, 1091, 1092, 1093, 1094], "reduct": [70, 71, 77, 78, 117, 118, 127, 134, 141, 686, 709, 743, 744, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100], "By": [70, 71, 117, 118, 125, 128, 129, 133, 136, 143, 144, 686, 704, 705, 830, 893, 895, 918, 944, 947, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "interv": [70, 71, 77, 78, 105, 106, 117, 118, 139, 144, 206, 207, 208, 234, 235, 237, 238, 830, 893, 895, 918, 919, 922, 963, 966, 1007, 1009, 1010, 1011, 1013, 1015, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "rank": [70, 71, 117, 118, 206, 240, 243, 686, 769, 830, 836, 838, 862, 864, 874, 876, 878, 880, 890, 892, 893, 895, 896, 898, 918, 928, 931, 932, 935, 963, 966, 975, 978, 1019, 1022, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1110], "backward": [70, 71, 117, 118, 156, 402, 635, 638, 830, 893, 895, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "invalid": [70, 71, 117, 118, 128, 134, 137, 830, 893, 895, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "except": [70, 71, 77, 78, 117, 118, 124, 132, 136, 137, 141, 156, 276, 293, 296, 686, 696, 707, 731, 766, 830, 871, 873, 918, 924, 927, 963, 966, 1019, 1022, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1110], "singleton": [70, 71, 117, 118, 830, 896, 898, 918, 959, 962, 1019, 1021, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1109], "accordingli": [70, 71, 117, 118, 128, 137, 206, 240, 243, 402, 513, 516, 830, 896, 898, 1019, 1021, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1109], "dimension": [70, 71, 77, 78, 117, 118, 206, 207, 208, 220, 221, 240, 243, 830, 836, 838, 839, 841, 854, 857, 862, 864, 868, 870, 871, 873, 893, 895, 896, 898, 918, 958, 1019, 1020, 1021, 1022, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1110], "non": [70, 71, 117, 118, 125, 133, 134, 139, 203, 204, 276, 283, 286, 332, 402, 593, 596, 598, 601, 813, 816, 830, 839, 841, 862, 864, 881, 883, 887, 889, 893, 895, 896, 898, 1019, 1020, 1021, 1022, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1107, 1108, 1109, 1110, 1139, 1140, 1143, 1147], "util": [71, 118, 122, 135, 369, 381, 1090, 1093, 1095, 1098], "add_ivy_array_instance_method": 72, "cl": [72, 73, 119, 120], "to_ignor": [72, 73, 119, 120, 983, 994], "loop": [72, 73, 119, 120, 130, 137, 156, 979, 980, 981, 982], "_wrap_funct": [72, 73, 119, 120, 129, 131], "toi": [72, 73, 119, 120], "arrayexampl": [72, 73], "hasattr": [72, 73, 119, 120, 141], "dict_in": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "queue": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 142, 686, 742, 748], "queue_load_s": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "container_combine_method": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "list_join": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "print_limit": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "key_length_limit": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "print_ind": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "print_line_spac": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "ivyh": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "default_key_color": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "keyword_color_dict": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "rebuild_child_contain": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "types_to_iteratively_nest": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "alphabetical_kei": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118], "containerwithactiv": [74, 75, 79, 80], "containerwithcr": [74, 79, 80, 81], "containerwithdatatyp": [74, 79, 80, 83], "containerwithdevic": [74, 79, 80, 85], "containerwithelementwis": [74, 79, 80, 87, 133], "containerwithgener": [74, 79, 80, 89], "containerwithgradi": [74, 79, 80, 91], "containerwithimag": [74, 79, 80, 93], "containerwithlay": [74, 79, 80, 95], "containerwithlinearalgebra": [74, 79, 80, 97], "containerwithloss": [74, 79, 80, 99], "containerwithnorm": [74, 79, 80, 103], "containerwithrandom": [74, 79, 80, 105], "containerwithsearch": [74, 79, 80, 107], "containerwithset": [74, 79, 80, 111], "containerwithsort": [74, 79, 80, 113], "containerwithstatist": [74, 79, 80, 115], "containerwithutil": [74, 79, 80, 117], "represent": [74, 77, 78, 79, 80, 155, 205, 276, 281, 282, 316, 319, 327, 330, 369, 372, 373, 402, 403, 406, 418, 421, 448, 451, 463, 466, 473, 476, 603, 606, 610, 613, 686, 692, 758], "dictionari": [74, 77, 78, 79, 80, 142, 156, 369, 391], "asynchron": [74, 77, 78, 79, 80], "arriv": [74, 77, 78, 79, 80], "timeout": [74, 77, 78, 79, 80, 686, 742, 748], "length": [74, 77, 78, 79, 80, 127, 137, 142, 206, 207, 208, 240, 243, 830, 881, 883, 884, 886, 918, 949, 952], "whitespac": [74, 77, 78, 79, 80], "indent": [74, 77, 78, 79, 80, 142], "extra": [74, 77, 78, 79, 80, 125, 127, 128, 131, 132, 139, 771, 782, 783], "newlin": [74, 77, 78, 79, 80, 124], "handl": [74, 77, 78, 79, 80, 121, 123, 127, 128, 129, 131, 133, 134, 135, 136, 143, 156, 203, 204, 369, 372, 373, 374, 375, 376, 379, 382, 386, 387, 398, 401, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 1143, 1144, 1145, 1146, 1147, 1148], "color": [74, 77, 78, 79, 80, 1152, 1153], "map": [74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 123, 127, 129, 133, 142, 155, 156, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 298, 300, 302, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 715, 717, 719, 760, 761, 763, 789, 791, 793, 831, 833, 835, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 983, 990, 991, 995, 996, 1002, 1004, 1006, 1030, 1031, 1033, 1090, 1092, 1094, 1095, 1097, 1099, 1127, 1138], "termcolor": [74, 77, 78, 79, 80], "rebuild": [74, 77, 78, 79, 80], "constructor": [74, 77, 78, 79, 80, 134, 135, 141, 686, 693, 1149, 1150], "param": [74, 77, 78, 79, 80, 89, 90, 139, 144, 686, 692, 714, 715, 718, 719], "alphabet": [74, 77, 78, 79, 80], "preserv": [74, 77, 78, 79, 80, 127, 144, 156, 771, 807, 918, 936, 939], "key_chain": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 207, 209, 210, 213, 215, 217, 219, 220, 222, 223, 225, 227, 229, 231, 233, 234, 236, 237, 239, 240, 242, 244, 245, 247, 249, 250, 252, 253, 255, 257, 258, 259, 261, 263, 264, 266, 268, 269, 271, 272, 274, 283, 285, 287, 288, 290, 292, 293, 295, 297, 298, 300, 302, 305, 307, 310, 312, 314, 316, 318, 320, 321, 323, 324, 326, 327, 329, 331, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 354, 356, 358, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 760, 761, 763, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 831, 833, 835, 854, 856, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 983, 996, 1002, 1004, 1006, 1009, 1011, 1013, 1014, 1016, 1025, 1026, 1028, 1030, 1031, 1033, 1035, 1036, 1038, 1040, 1041, 1043, 1046, 1048, 1050, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099], "to_appli": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 207, 209, 210, 213, 215, 217, 219, 220, 222, 223, 225, 227, 229, 231, 233, 234, 236, 237, 239, 240, 242, 244, 245, 247, 249, 250, 252, 253, 255, 257, 258, 259, 261, 263, 264, 266, 268, 269, 271, 272, 274, 283, 285, 287, 288, 290, 292, 293, 295, 297, 298, 300, 302, 305, 307, 310, 312, 314, 316, 318, 320, 321, 323, 324, 326, 327, 329, 331, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 354, 356, 358, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 760, 761, 763, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 831, 833, 835, 854, 856, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 983, 996, 1002, 1004, 1006, 1013, 1014, 1016, 1025, 1026, 1028, 1030, 1031, 1033, 1035, 1036, 1038, 1040, 1041, 1043, 1046, 1048, 1050, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099], "prune_unappli": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 207, 209, 210, 213, 215, 217, 219, 220, 222, 223, 225, 227, 229, 231, 233, 234, 236, 237, 239, 240, 242, 244, 245, 247, 249, 250, 252, 253, 255, 257, 258, 259, 261, 263, 264, 266, 268, 269, 271, 272, 274, 283, 285, 287, 288, 290, 292, 293, 295, 297, 298, 300, 302, 305, 307, 310, 312, 314, 316, 318, 320, 321, 323, 324, 326, 327, 329, 331, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 354, 356, 358, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 760, 761, 763, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 831, 833, 835, 854, 856, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 983, 996, 1002, 1004, 1006, 1013, 1014, 1016, 1025, 1026, 1028, 1030, 1031, 1033, 1035, 1036, 1038, 1040, 1041, 1043, 1046, 1048, 1050, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099], "map_sequ": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 207, 209, 210, 213, 215, 217, 219, 220, 222, 223, 225, 227, 229, 231, 233, 234, 236, 237, 239, 240, 242, 244, 245, 247, 249, 250, 252, 253, 255, 257, 258, 259, 261, 263, 264, 266, 268, 269, 271, 272, 274, 283, 285, 287, 288, 290, 292, 293, 295, 297, 298, 300, 302, 305, 307, 310, 312, 314, 316, 318, 320, 321, 323, 324, 326, 327, 329, 331, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 354, 356, 358, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 760, 761, 763, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 831, 833, 835, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 949, 951, 953, 955, 957, 959, 961, 967, 969, 971, 973, 975, 977, 1002, 1004, 1006, 1013, 1014, 1016, 1025, 1026, 1028, 1030, 1031, 1033, 1035, 1036, 1038, 1040, 1041, 1043, 1046, 1048, 1050, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099], "static_arg_info": [74, 79, 80], "static_arg_nam": [74, 79, 80], "static_argmax": [74, 79, 80, 107], "static_argmin": [74, 79, 80], "static_arrai": [74, 79, 80], "static_array_equ": [74, 79, 80], "static_arrays_equ": [74, 79, 80], "static_as_ivy_dev": [74, 79, 80], "static_as_ivy_dtyp": [74, 79, 80], "static_as_native_dev": [74, 79, 80], "static_as_native_dtyp": [74, 79, 80], "static_assert_supports_inplac": [74, 79, 80], "static_cache_fn": [74, 79, 80], "static_clear_mem_on_dev": [74, 79, 80], "static_clip_matrix_norm": [74, 79, 80], "static_clip_vector_norm": [74, 79, 80], "static_closest_valid_dtyp": [74, 79, 80], "static_concat": [74, 79, 80], "static_constant_pad": [74, 79, 80], "static_container_typ": [74, 79, 80], "static_conv1d": [74, 79, 80], "static_conv1d_transpos": [74, 79, 80], "static_conv2d": [74, 79, 80], "static_conv2d_transpos": [74, 79, 80], "static_conv3d": [74, 79, 80], "static_conv3d_transpos": [74, 79, 80], "static_copy_arrai": [74, 79, 80], "static_cross": [74, 79, 80], "static_cumprod": [74, 79, 80], "static_cumsum": [74, 79, 80], "static_current_backend": [74, 79, 80], "static_current_backend_str": [74, 79, 80], "static_default": [74, 79, 80], "static_default_devic": [74, 79, 80], "static_default_dtyp": [74, 79, 80], "static_default_int_dtyp": [74, 79, 80], "static_default_uint_dtyp": [74, 79, 80], "static_det": [74, 79, 80], "static_dev_util": [74, 79, 80], "static_diagon": [74, 79, 80], "static_dropout": [74, 79, 80], "static_dtype_bit": [74, 79, 80], "static_eigh": [74, 79, 80], "static_eigvalsh": [74, 79, 80], "static_einops_rearrang": [74, 79, 80], "static_einops_reduc": [74, 79, 80], "static_einops_repeat": [74, 79, 80], "static_einsum": [74, 79, 80], "static_empti": [74, 79, 80], "static_exist": [74, 79, 80], "static_expand_dim": [74, 79, 80], "static_flip": [74, 79, 80], "static_floormod": [74, 79, 80], "static_fourier_encod": [74, 79, 80], "static_ful": [74, 79, 80], "static_gath": [74, 79, 80], "static_get_all_arrays_in_memori": [74, 79, 80], "static_get_all_ivy_arrays_on_dev": [74, 79, 80], "static_get_min_bas": [74, 79, 80], "static_get_min_denomin": [74, 79, 80], "static_get_nestable_mod": [74, 79, 80], "static_get_num_dim": [74, 79, 80], "static_get_referrers_recurs": [74, 79, 80], "static_gpu_is_avail": [74, 79, 80], "static_handle_nest": [74, 79, 80], "static_handle_out_argu": [74, 79, 80], "static_has_nan": [74, 79, 80], "static_indices_wher": [74, 79, 80], "static_infer_devic": [74, 79, 80], "static_infer_dtyp": [74, 79, 80], "static_inplace_arrays_support": [74, 79, 80], "static_inplace_decr": [74, 79, 80], "static_inplace_incr": [74, 79, 80], "static_inplace_upd": [74, 79, 80], "static_inplace_variables_support": [74, 79, 80], "static_inputs_to_native_arrai": [74, 79, 80], "static_inv": [74, 79, 80], "static_invalid_dtyp": [74, 79, 80], "static_is_arrai": [74, 79, 80], "static_is_ivy_arrai": [74, 79, 80], "static_is_ivy_contain": [74, 79, 80], "static_is_native_arrai": [74, 79, 80], "static_linear": [74, 79, 80], "static_lstm_upd": [74, 79, 80], "static_match_kwarg": [74, 79, 80], "static_matmul": [74, 79, 80], "static_matrix_norm": [74, 79, 80], "static_matrix_pow": [74, 79, 80], "static_matrix_rank": [74, 79, 80], "static_matrix_transpos": [74, 79, 80], "static_max": [74, 79, 80], "static_maximum": [74, 79, 80], "static_mean": [74, 79, 80], "static_min": [74, 79, 80], "static_minimum": [74, 79, 80], "static_multi_head_attent": [74, 79, 80], "static_multinomi": [74, 79, 80], "static_multiprocess": [74, 79, 80], "static_nonzero": [74, 79, 80], "static_num_arrays_in_memori": [74, 79, 80], "static_num_cpu_cor": [74, 79, 80], "static_num_gpu": [74, 79, 80], "static_num_ivy_arrays_on_dev": [74, 79, 80], "static_one_hot": [74, 79, 80], "static_out": [74, 79, 80], "static_outputs_to_ivy_arrai": [74, 79, 80], "static_percent_used_mem_on_dev": [74, 79, 80], "static_permute_dim": [74, 79, 80], "static_pinv": [74, 79, 80], "static_print_all_arrays_in_memori": [74, 79, 80], "static_print_all_ivy_arrays_on_dev": [74, 79, 80], "static_prod": [74, 79, 80], "static_promote_typ": [74, 79, 80], "static_qr": [74, 79, 80], "static_queue_timeout": [74, 79, 80], "static_random_norm": [74, 79, 80], "static_reshap": [74, 79, 80], "static_scaled_dot_product_attent": [74, 79, 80], "static_scatter_flat": [74, 79, 80], "static_scatter_nd": [74, 79, 80], "static_se": [74, 79, 80], "static_set_default_devic": [74, 79, 80], "static_set_default_dtyp": [74, 79, 80], "static_set_default_float_dtyp": [74, 79, 80], "static_set_default_int_dtyp": [74, 79, 80], "static_set_default_uint_dtyp": [74, 79, 80], "static_set_min_bas": [74, 79, 80], "static_set_min_denomin": [74, 79, 80], "static_set_nestable_mod": [74, 79, 80], "static_set_queue_timeout": [74, 79, 80], "static_set_shape_array_mod": [74, 79, 80], "static_set_split_factor": [74, 79, 80], "static_set_tmp_dir": [74, 79, 80], "static_set_with_grad": [74, 79, 80], "static_shap": [74, 79, 80], "static_shape_array_mod": [74, 79, 80], "static_shuffl": [74, 79, 80], "static_slogdet": [74, 79, 80], "static_solv": [74, 79, 80], "static_split": [74, 79, 80], "static_split_factor": [74, 79, 80], "static_split_func_cal": [74, 79, 80], "static_squeez": [74, 79, 80], "static_stable_divid": [74, 79, 80], "static_stable_pow": [74, 79, 80], "static_stack": [74, 79, 80], "static_std": [74, 79, 80], "static_stop_gradi": [74, 79, 80], "static_sum": [74, 79, 80], "static_supports_inplac": [74, 79, 80], "static_svd": [74, 79, 80], "static_svdv": [74, 79, 80], "static_swapax": [74, 79, 80], "static_tensordot": [74, 79, 80], "static_til": [74, 79, 80], "static_tmp_dir": [74, 79, 80], "static_to_container_and_back": [74, 79, 80], "static_to_ivy_shap": [74, 79, 80], "static_to_list": [74, 79, 80], "static_to_native_arrays_and_back": [74, 79, 80], "static_to_native_shap": [74, 79, 80], "static_to_scalar": [74, 79, 80], "static_total_mem_on_dev": [74, 79, 80], "static_tpu_is_avail": [74, 79, 80], "static_trac": [74, 79, 80], "static_try_else_non": [74, 79, 80], "static_type_promote_arrai": [74, 79, 80], "static_unset_default_devic": [74, 79, 80], "static_unset_default_dtyp": [74, 79, 80], "static_unset_default_float_dtyp": [74, 79, 80], "static_unset_default_int_dtyp": [74, 79, 80], "static_unset_default_uint_dtyp": [74, 79, 80], "static_unset_nestable_mod": [74, 79, 80], "static_unset_shape_array_mod": [74, 79, 80], "static_unset_with_grad": [74, 79, 80], "static_unstack": [74, 79, 80], "static_used_mem_on_dev": [74, 79, 80], "static_valid_dtyp": [74, 79, 80], "static_value_is_nan": [74, 79, 80], "static_var": [74, 79, 80], "static_vari": [74, 79, 80], "static_variable_data": [74, 79, 80], "static_vecdot": [74, 79, 80], "static_vector_norm": [74, 79, 80], "static_vector_to_skew_symmetric_matrix": [74, 79, 80], "static_wher": [74, 79, 80], "static_with_grad": [74, 79, 80], "static_zero_pad": [74, 79, 80], "containerbas": [75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 133], "formul": [75, 76, 168, 170, 172], "chain": [75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 117, 118, 132, 133, 143, 144, 156, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 298, 300, 302, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 715, 717, 719, 760, 761, 763, 789, 791, 793, 831, 833, 835, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 979, 980, 981, 983, 996, 1002, 1004, 1006, 1009, 1011, 1030, 1031, 1033, 1090, 1092, 1094, 1095, 1097, 1099, 1149, 1150], "prune": [75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 117, 118, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 298, 300, 302, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 715, 717, 719, 760, 761, 763, 789, 791, 793, 831, 833, 835, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 953, 955, 957, 983, 996, 997, 998, 1002, 1004, 1006, 1030, 1031, 1033, 1090, 1092, 1094, 1095, 1097, 1099], "unit": [75, 76, 126, 127, 156, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197], "slope": [75, 76, 167, 173, 175, 176, 177], "leaki": [75, 76, 167, 173, 175, 176, 177], "rectifi": [75, 76, 167, 173, 176, 178, 180, 181, 182], "static_gelu": [75, 76, 168], "static_leaky_relu": [75, 76, 173], "static_relu": [75, 76, 178], "static_sigmoid": [75, 76, 183], "static_softmax": [75, 76, 188], "static_softplu": [75, 76, 193], "static_tanh": [75, 76, 87, 88, 198], "__getitem__": [77, 78, 133], "queri": [77, 78, 133, 134, 141, 369, 381, 391, 813, 828, 829, 1127, 1138], "slice": [77, 78, 686, 714, 715, 718, 983, 992], "__setitem__": [77, 78, 132, 133, 141], "val": [77, 78, 136, 141, 686, 729, 730, 731, 745, 746], "all_fals": [77, 78], "assert_is_bool": [77, 78], "entri": [77, 78, 206, 234, 235, 237, 238, 918, 958, 983, 996], "assert": [77, 78, 127, 137, 141, 142, 686, 696], "all_key_chain": [77, 78], "include_empti": [77, 78], "all_tru": [77, 78, 133, 142], "arrays_as_list": [77, 78], "intermedi": [77, 78], "as_arrai": [77, 78, 686, 724, 751], "as_bool": [77, 78], "as_on": [77, 78], "as_random_uniform": [77, 78], "low": [77, 78, 105, 106, 139, 1007, 1009, 1010, 1011, 1013, 1015, 1016], "uniform": [77, 78, 105, 106, 143, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1118, 1120, 1121, 1124, 1125], "boundari": [77, 78, 1007, 1013, 1015], "as_vari": [77, 78, 127], "as_zero": [77, 78], "assert_contains_sub_contain": [77, 78], "sub_cont": [77, 78], "diff": [77, 78, 133, 142], "screen": [77, 78, 142], "assert_contains_sub_structur": [77, 78], "check_shap": [77, 78], "assert_ident": [77, 78], "check_typ": [77, 78], "same_arrai": [77, 78, 142], "assert_identical_structur": [77, 78], "at_key_chain": [77, 78], "ignore_key_error": [77, 78], "ignore_non": [77, 78], "at_kei": [77, 78], "ignor": [77, 78, 125, 127, 156, 206, 240, 243, 983, 994, 1143, 1147], "substr": [77, 78], "clip_min": [77, 78], "clip_max": [77, 78], "config": [77, 78, 142, 983, 996], "duplic": [77, 78, 124, 130, 131, 137, 141, 143], "container_rightmost": [77, 78], "common_key_chain": [77, 78, 133], "contains_sub_contain": [77, 78], "match": [77, 78, 133, 276, 283, 286, 402, 635, 638, 686, 737], "contains_sub_structur": [77, 78], "create_if_abs": [77, 78], "inplac": [77, 78, 91, 92, 121, 123, 125, 131, 132, 141, 143, 686, 696, 728, 731, 732, 755, 771, 778, 779, 780, 781, 785, 786, 787, 788, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 1116, 1117, 1143, 1144, 1145, 1146, 1147, 1148], "cutoff_at_depth": [77, 78], "depth_cutoff": [77, 78], "cutoff_at_height": [77, 78], "height_cutoff": [77, 78], "deep_copi": [77, 78, 142], "intern": [77, 78, 124, 127, 132, 133, 135, 136, 771, 811, 983, 984, 993, 994, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1149, 1150], "belong": [77, 78, 143], "dev_clon": [77, 78], "dev_dist": [77, 78], "dev_str": [77, 78], "diff_kei": [77, 78], "detect_key_diff": [77, 78], "detect_value_diff": [77, 78], "detect_shape_diff": [77, 78], "treat": [77, 78, 127, 140, 144, 203, 204], "detect": [77, 78, 123, 127, 133, 137, 142, 143, 983, 984, 994], "container0": [77, 78], "axes_length": [77, 78, 686, 708, 709, 710], "rearrang": [77, 78, 686, 708, 710], "One": [77, 78, 105, 106, 127, 134, 139, 141, 142, 686, 709, 918, 949, 952, 1007, 1009, 1010, 1011], "callabl": [77, 78, 127, 133, 139, 157, 158, 159, 160, 161, 162, 163, 164, 165, 203, 204, 276, 321, 322, 324, 325, 369, 392, 686, 692, 697, 707, 709, 771, 808, 979, 980, 981, 982, 983, 989, 993, 994, 995], "find_sub_contain": [77, 78], "sub_cont_to_find": [77, 78], "exsit": [77, 78], "find_sub_structur": [77, 78], "sub_struc_to_find": [77, 78], "flatten_key_chain": [77, 78, 142, 1139, 1140], "__": [77, 78, 125, 142], "above_height": [77, 78, 142], "below_depth": [77, 78, 142], "format_key_chain": [77, 78], "format_fn": [77, 78], "string": [77, 78, 130, 134, 135, 137, 139, 142, 276, 281, 282, 310, 313, 332, 368, 369, 372, 373, 374, 375, 381, 387, 393, 397, 398, 401, 686, 706], "from_disk_as_hdf5": [77, 78, 142], "h5_obj_or_filepath": [77, 78], "slice_obj": [77, 78], "load": [77, 78, 156], "disk": [77, 78, 142], "h5py": [77, 78], "hdf5": [77, 78, 142, 1139, 1140], "h5": [77, 78], "from_disk_as_json": [77, 78, 142], "json_filepath": [77, 78], "json": [77, 78, 142], "from_disk_as_pickl": [77, 78, 142], "pickle_filepath": [77, 78], "pickl": [77, 78, 133, 142], "from_flat_list": [77, 78], "flat_list": [77, 78], "hierarchi": [77, 78, 142], "flat": [77, 78, 686, 743, 918, 944, 947], "popul": [77, 78, 127, 134, 135, 139, 1007, 1008, 1056, 1077, 1080, 1085, 1088], "from_numpi": [77, 78, 142], "h5_file_s": [77, 78], "batch": [77, 78, 129, 133, 142, 369, 390, 391, 686, 713, 813, 826, 830, 896, 898, 979, 980, 981, 982, 1001, 1002, 1005, 1141, 1142], "handle_inplac": [77, 78], "prime": [77, 78], "overwritten": [77, 78, 130, 132], "has_kei": [77, 78], "query_kei": [77, 78], "somewher": [77, 78], "has_key_chain": [77, 78], "include_inf": [77, 78, 686, 726, 770], "leafwis": [77, 78], "well": [77, 78, 127, 128, 136, 143, 144, 155, 686, 726, 830, 878, 880], "inf": [77, 78, 127, 205, 402, 438, 441, 513, 516, 543, 546, 686, 726, 770, 830, 896, 898], "identical_array_shap": [77, 78], "identical_config": [77, 78], "identical_structur": [77, 78], "if_exist": [77, 78], "key_chains_contain": [77, 78], "sub_str": [77, 78], "join": [77, 78, 918, 924, 927, 963, 966, 1100], "list_stack": [77, 78, 142], "dim": [77, 78, 128, 134, 686, 740, 1127, 1138], "func": [77, 78, 91, 92, 133, 203, 204, 369, 392, 686, 697, 771, 782, 783, 784, 983, 996], "map_cont": [77, 78], "include_self": [77, 78], "possibi": [77, 78], "max_depth": [77, 78, 686, 725, 983, 995], "multi_map": [77, 78, 133], "map_nest": [77, 78, 97, 98, 101, 102, 854, 856, 924, 926, 963, 965], "leftmost": [77, 78, 983, 996], "multi_map_in_static_method": [77, 78, 133], "fn_name": [77, 78], "num_arrai": [77, 78, 127], "overwrite_at_key_chain": [77, 78], "target_dict": [77, 78], "return_dict": [77, 78], "prune_empti": [77, 78], "keep_non": [77, 78], "prune_key_chain": [77, 78], "key1": [77, 78, 143], "key2": [77, 78], "key3": [77, 78], "prune_key_from_key_chain": [77, 78], "prune_kei": [77, 78], "prune_keys_from_key_chain": [77, 78], "remove_key_length_limit": [77, 78], "remove_print_limit": [77, 78], "reshape_lik": [77, 78], "leading_shap": [77, 78], "return_cont": [77, 78], "restructur": [77, 78], "keep_orig": [77, 78], "transpos": [77, 78, 141, 144, 813, 815, 817, 819, 830, 865, 867, 871, 873, 1100, 1127, 1129, 1131, 1133], "restructure_key_chain": [77, 78], "keychain_map": [77, 78], "set_at_key_chain": [77, 78], "set_at_kei": [77, 78], "set_framework": [77, 78, 139, 141, 142, 144], "set_ivy_backend": [77, 78], "ivy_backend": [77, 78], "attribut": [77, 78, 124, 128, 133, 134, 140, 141, 142, 143, 276, 316, 319, 321, 322, 324, 325, 327, 330, 369, 388], "show_sub_contain": [77, 78], "sub_cont_or_keychain": [77, 78], "seed_valu": [77, 78, 1007, 1017], "shuffle_h5_fil": [77, 78], "dataset": [77, 78, 142, 154, 1100], "size_ordered_arrai": [77, 78], "keychain": [77, 78], "smallest": [77, 78, 276, 316, 319, 327, 330, 402, 478, 481], "largest": [77, 78, 155, 276, 316, 319, 327, 330, 830, 881, 883], "slice_kei": [77, 78], "key_slic": [77, 78], "all_depth": [77, 78], "slice_via_kei": [77, 78], "sort_by_kei": [77, 78], "num_or_size_split": [77, 78, 139, 918, 958], "with_remaind": [77, 78, 918, 958], "constitu": [77, 78, 144], "evenli": [77, 78, 206, 207, 208, 234, 235, 237, 238, 918, 958], "store": [77, 78, 124, 130, 132, 133, 139, 141, 142, 143, 206, 271, 275, 686, 713, 771, 811, 830, 890, 892, 918, 958, 1139, 1140], "preserve_typ": [77, 78, 771, 807], "stop": [77, 78, 81, 82, 139, 156, 206, 207, 208, 209, 234, 235, 236, 237, 238, 239, 369, 371, 392, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 807, 979, 980, 981, 982, 1143, 1144, 1145, 1146, 1147, 1148], "structural_diff": [77, 78], "target": [77, 78, 121, 138, 142, 143, 144, 369, 374, 1100], "to_dict": [77, 78], "to_disk_as_hdf5": [77, 78, 142], "starting_index": [77, 78], "max_batch_s": [77, 78], "later": [77, 78, 127, 686, 697], "to_disk_as_json": [77, 78, 142], "to_disk_as_pickl": [77, 78, 142], "to_flat_list": [77, 78], "to_iter": [77, 78, 133], "leaf_keys_onli": [77, 78], "to_iterator_kei": [77, 78], "to_iterator_valu": [77, 78], "to_json": [77, 78], "update_backend": [77, 78], "to_raw": [77, 78], "raw": [77, 78, 124], "trim_kei": [77, 78], "max_length": [77, 78], "try_kc": [77, 78], "tri": [77, 78], "arbitrari": [77, 78, 123, 127, 129, 133, 136, 143, 156, 206, 240, 243, 276, 288, 291, 354, 357], "concatten": [77, 78, 369, 392], "dim_siz": [77, 78], "update_config": [77, 78], "global_norm": [77, 78, 89, 90, 699, 700], "vector": [77, 78, 155, 206, 240, 243, 686, 699, 701, 813, 826, 830, 836, 838, 845, 847, 854, 857, 868, 870, 881, 883, 884, 886, 893, 895, 896, 898, 899, 901, 1127, 1137], "with_default_key_color": [77, 78], "with_entries_as_list": [77, 78], "with_ivy_backend": [77, 78], "with_key_length_limit": [77, 78, 142], "with_print_ind": [77, 78, 142], "with_print_limit": [77, 78, 142], "with_print_line_spac": [77, 78], "static_arang": [81, 82, 207], "static_asarrai": [81, 82, 210], "static_empty_lik": [81, 82, 215], "static_ey": [81, 82, 220], "n_row": [81, 82, 206, 220, 221, 222], "n_col": [81, 82, 206, 220, 221, 222], "static_from_dlpack": [81, 82, 223], "static_full_lik": [81, 82, 229], "static_linspac": [81, 82, 234], "num": [81, 82, 139, 206, 234, 235, 236, 237, 238, 239], "endpoint": [81, 82, 206, 234, 235, 236, 237, 239], "static_logspac": [81, 82, 237], "static_meshgrid": [81, 82, 240], "static_native_arrai": [81, 82, 245], "static_on": [81, 82, 250], "static_ones_lik": [81, 82, 253], "static_tril": [81, 82, 258], "static_triu": [81, 82, 263], "static_zero": [81, 82, 268], "static_zeros_lik": [81, 82, 271], "int32": [83, 84, 89, 90, 127, 134, 206, 271, 275, 276, 298, 300, 301, 302, 310, 313, 327, 330, 343, 346, 359, 686, 760, 761, 763, 764, 918, 932, 935, 1056, 1073, 1076, 1081, 1084], "int64": [83, 84, 127, 134, 276, 298, 300, 301, 302, 327, 330, 348, 351, 368, 402, 468, 471, 1019, 1020, 1021, 1056, 1073, 1076, 1081, 1084, 1107, 1108, 1109], "static_astyp": [83, 84, 283], "static_broadcast_arrai": [83, 84, 288], "static_broadcast_to": [83, 84, 293], "static_can_cast": [83, 84, 298], "from_": [83, 84, 276, 298, 301, 302], "static_default_float_dtyp": [83, 84, 305], "float_dtyp": [83, 84, 276, 305, 306, 307, 360], "static_dtyp": [83, 84, 310], "static_finfo": [83, 84, 316], "static_function_supported_dtyp": [83, 84, 321], "fn": [83, 84, 139, 141, 157, 158, 159, 160, 161, 162, 163, 164, 165, 276, 321, 322, 323, 324, 325, 326, 686, 692, 766, 771, 808, 983, 984, 989, 990, 991, 993, 994, 995, 1103, 1105], "static_function_unsupported_dtyp": [83, 84, 324], "static_iinfo": [83, 84, 327], "static_is_bool_dtyp": [83, 84, 333], "dtype_in": [83, 84, 276, 281, 282, 315, 332, 333, 336, 337, 338, 341, 342, 343, 346, 347, 348, 351, 352, 368], "static_is_float_dtyp": [83, 84, 338], "static_is_int_dtyp": [83, 84, 343], "static_is_uint_dtyp": [83, 84, 348], "static_result_typ": [83, 84, 354], "static_dev": [85, 86, 376], "static_to_devic": [85, 86, 393], "02": [87, 88, 428, 430, 771, 773, 776], "21": [87, 88, 276, 327, 330, 402, 428, 430, 438, 440, 441, 442, 473, 476, 686, 704, 830, 842, 844, 868, 870, 902, 913, 916, 1056, 1057, 1060], "61": [87, 88, 99, 100, 402, 428, 430, 665, 668, 813, 820, 823, 902, 903, 905, 906, 907, 913, 915, 917], "915": [87, 88, 402, 438, 440, 441, 442], "29": [87, 88, 402, 438, 440, 441, 442], "983": [87, 88, 402, 438, 440, 441, 442], "75": [87, 88, 402, 428, 431, 432, 438, 440, 441, 442, 493, 496, 830, 851, 853, 868, 870], "35": [87, 88, 402, 438, 440, 441, 442, 660, 663, 813, 829, 830, 836, 838, 1019, 1023, 1056, 1057, 1060, 1107, 1111], "978": [87, 88, 167, 183, 186, 402, 438, 440, 441, 442], "696": [87, 88, 402, 438, 440, 441, 442], "993": [87, 88, 402, 438, 440, 441, 442], "96": [87, 88, 198, 199, 402, 483, 485, 486, 487, 675, 679, 771, 773, 776, 830, 868, 870, 1056, 1057, 1060], "52": [87, 88, 105, 106, 402, 438, 441, 493, 495, 496, 497, 771, 773, 776, 830, 868, 870, 1009, 1011, 1024, 1025, 1029, 1056, 1057, 1060], "333": [87, 88, 402, 493, 495, 496, 497, 813, 820, 823], "thefunct": [87, 88, 503, 505, 513, 517, 518, 522], "649": [87, 88, 513, 515], "220": [87, 88, 513, 515], "959": [87, 88, 402, 513, 515, 650, 652, 653, 654], "53": [87, 88, 369, 398, 513, 515], "865": [87, 88, 513, 515], "metho": [87, 88, 533, 535, 578, 580], "20": [87, 88, 105, 106, 141, 402, 473, 476, 508, 511, 513, 516, 640, 642, 643, 644, 660, 663, 830, 842, 844, 868, 870, 887, 889, 1007, 1009, 1010, 1011, 1019, 1022, 1023, 1056, 1057, 1060, 1107, 1110, 1111], "300": [87, 88, 127, 402, 640, 642, 643, 644], "527": [87, 88, 402, 640, 642, 643, 644], "301": [87, 88, 402, 640, 642, 643, 644], "757": [87, 88, 402, 650, 652, 653, 654], "279": [87, 88, 402, 650, 652, 653, 654], "76": [87, 88, 198, 199, 276, 327, 330, 402, 488, 491, 655, 657, 659, 771, 773, 776, 830, 887, 889, 1056, 1057, 1060], "37": [87, 88, 105, 106, 402, 428, 431, 432, 655, 657, 659, 675, 679, 1009, 1011], "835": [87, 88, 655, 657, 659], "34": [87, 88, 276, 327, 330, 402, 473, 476, 655, 657, 659, 660, 663], "98": [87, 88, 402, 473, 476, 655, 657, 659, 830, 868, 870, 1019, 1023, 1056, 1057, 1060, 1107, 1111], "347": [87, 88, 655, 657, 659], "721": [87, 88, 655, 657, 659], "static_ab": [87, 88, 403], "static_aco": [87, 88, 408], "static_acosh": [87, 88, 413], "static_add": [87, 88, 124, 125, 133, 418], "static_asin": [87, 88, 423], "static_asinh": [87, 88, 428], "97": [87, 88, 402, 428, 431, 432], "static_atan": [87, 88, 433], "static_atan2": [87, 88, 438], "static_atanh": [87, 88, 443], "static_bitwise_and": [87, 88, 448], "static_bitwise_invert": [87, 88, 453], "static_bitwise_left_shift": [87, 88, 458], "static_bitwise_or": [87, 88, 463], "static_bitwise_right_shift": [87, 88, 468], "static_bitwise_xor": [87, 88, 473], "static_ceil": [87, 88, 478], "static_co": [87, 88, 483], "static_cosh": [87, 88, 488], "static_divid": [87, 88, 133, 493], "static_equ": [87, 88, 498], "static_erf": [87, 88, 503], "static_exp": [87, 88, 508], "static_expm1": [87, 88, 402, 513, 516], "areal": [87, 88, 513, 517], "static_floor": [87, 88, 518], "static_floor_divid": [87, 88, 523], "static_great": [87, 88, 528], "static_greater_equ": [87, 88, 533], "static_isfinit": [87, 88, 538], "x_i": [87, 88, 124, 402, 403, 406, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 453, 456, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 538, 541, 542, 543, 546, 547, 548, 551, 552, 563, 566, 568, 571, 578, 581, 593, 596, 615, 618, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 675, 679, 680, 681, 685, 1024, 1025, 1029, 1030, 1034, 1040, 1044, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1085, 1088], "static_isinf": [87, 88, 402, 543, 546], "static_isnan": [87, 88, 548], "static_less": [87, 88, 553], "static_less_equ": [87, 88, 558], "static_log": [87, 88, 563], "static_log10": [87, 88, 568], "static_log1p": [87, 88, 573], "static_log2": [87, 88, 578], "static_logaddexp": [87, 88, 583], "static_logical_and": [87, 88, 588], "static_logical_not": [87, 88, 593], "static_logical_or": [87, 88, 598], "static_logical_xor": [87, 88, 603], "static_multipli": [87, 88, 133, 610], "static_neg": [87, 88, 615], "static_not_equ": [87, 88, 620], "static_posit": [87, 88, 625], "static_pow": [87, 88, 630], "static_remaind": [87, 88, 635], "static_round": [87, 88, 640], "thevfunct": [87, 88, 640, 644], "static_sign": [87, 88, 645], "static_sin": [87, 88, 650], "static_sinh": [87, 88, 655], "static_sqrt": [87, 88, 660], "static_squar": [87, 88, 665], "static_subtract": [87, 88, 133, 670], "static_tan": [87, 88, 125, 133, 675], "143": [87, 88, 125, 402, 675, 676, 678, 679], "38": [87, 88, 125, 276, 316, 319, 402, 675, 676, 678, 679], "995": [87, 88, 198, 199, 201, 402, 680], "9999": [87, 88, 198, 199], "static_trunc": [87, 88, 681], "static_all_equ": [89, 90, 687, 689], "max_norm": [89, 90, 686, 698, 699, 700, 701], "static_gather_nd": [89, 90, 715], "static_to_numpi": [89, 90, 760, 763], "lr": [91, 92, 142, 143, 771, 778, 779, 780, 781, 785, 786, 787, 788, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 1143, 1144, 1145, 1146, 1147, 1148], "mw_tm1": [91, 92, 771, 778, 779, 780, 781, 794, 795, 796, 797], "vw_tm1": [91, 92, 771, 778, 779, 780, 781, 794, 795, 796, 797], "max_trust_ratio": [91, 92, 771, 794, 795, 796, 797, 1143, 1145], "decay_lambda": [91, 92, 771, 794, 795, 796, 797, 798, 799, 800, 801, 1143, 1145, 1146], "effective_grad": [91, 92, 771, 802, 803, 804, 805], "static_adam_step": [91, 92, 773], "87": [91, 92, 105, 106, 771, 773, 776, 777, 1009, 1011], "976": [91, 92, 402, 680, 771, 773, 776, 777], "static_adam_upd": [91, 92, 778], "static_execute_with_gradi": [91, 92, 782], "retain_grad": [91, 92, 133, 771, 782, 783, 784], "static_gradient_descent_upd": [91, 92, 785], "static_is_vari": [91, 92, 789], "static_lamb_upd": [91, 92, 794], "static_lars_upd": [91, 92, 798], "static_optimizer_upd": [91, 92, 802], "inp": [95, 96, 813, 820, 822, 823, 824], "static_depthwise_conv2d": [95, 96, 820], "73": [97, 98, 127, 402, 660, 663, 830, 831, 833, 834, 835, 1001, 1002, 1005], "577": [97, 98, 830, 831, 833, 834, 835], "41": [97, 98, 141, 402, 473, 476, 660, 663, 830, 831, 833, 834, 835, 1056, 1081, 1084], "707": [97, 98, 830, 831, 833, 834, 835], "static_choleski": [97, 98, 831], "static_rol": [97, 98, 101, 102, 125, 133, 831, 835, 919, 923, 953], "511": [99, 100, 902, 903, 905, 906, 907, 913, 915, 917], "5108256": [99, 100, 908, 910], "609438": [99, 100, 908, 910], "static_binary_cross_entropi": [99, 100, 903], "static_cross_entropi": [99, 100, 908], "20397282": [99, 100, 908, 912], "83258148": [99, 100, 908, 912], "60943794": [99, 100, 908, 912], "static_sparse_cross_entropi": [99, 100, 913], "static_clip": [101, 102, 919], "static_repeat": [101, 102, 944], "658": [103, 104, 1001, 1002, 1004, 1005, 1006], "04": [103, 104, 276, 316, 319, 402, 513, 516, 813, 829, 1001, 1002, 1004, 1005, 1006], "759": [103, 104, 1001, 1002, 1004, 1005, 1006], "403": [103, 104, 1002, 1004, 1006], "62": [103, 104, 105, 106, 402, 655, 658, 1002, 1004, 1006, 1009, 1011], "static_layer_norm": [103, 104, 1002], "static_randint": [105, 106, 1009], "drawn": [105, 106, 127, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015], "highest": [105, 106, 1007, 1009, 1010, 1011], "nativeshap": [105, 106, 206, 214, 228, 250, 251, 268, 270, 686, 744, 751, 757, 759, 813, 815, 817, 819, 918, 949, 952, 1007, 1009, 1010, 1011, 1012, 1013, 1015], "half": [105, 106, 206, 207, 208, 1007, 1009, 1010, 1011, 1013, 1015], "40": [105, 106, 402, 488, 491, 660, 663, 830, 868, 870, 1009, 1011, 1056, 1057, 1060], "95": [105, 106, 402, 645, 648, 771, 773, 776, 1009, 1011], "static_random_uniform": [105, 106, 1013], "static_unique_al": [111, 112, 1025], "static_unique_count": [111, 112, 1030], "classivi": [111, 112, 918, 958, 1024, 1030, 1031, 1033, 1034], "static_unique_invers": [111, 112, 1035], "static_unique_valu": [111, 112, 1040], "static_argsort": [113, 114, 1046], "static_sort": [113, 114, 1051], "static_al": [117, 118, 1090], "static_ani": [117, 118, 1095], "add_ivy_container_instance_method": 119, "containerexampl": [119, 120], "who": [121, 138, 156], "mainli": [121, 140, 142], "under": [121, 124, 125, 126, 127, 128, 129, 133, 138, 139, 142, 144], "hood": [121, 125, 127, 129, 133, 138, 139, 142, 144], "weed": [121, 138], "behind": [121, 127, 138, 140, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "tour": 121, "primari": [121, 127, 130, 136, 156], "composit": [121, 127, 130, 132, 133, 136, 139, 143, 144, 156], "nestabl": [121, 124, 125, 127, 136, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 402, 403, 406, 418, 421, 423, 426, 428, 431, 478, 481, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 686, 714, 813, 816, 820, 823, 829, 830, 831, 834, 842, 844, 918, 953, 956, 1001, 1002, 1005, 1019, 1020, 1024, 1030, 1034, 1056, 1061, 1064, 1089, 1090, 1093, 1107, 1108], "dynam": [121, 134, 135, 136, 139, 203, 204], "runtim": [121, 127, 369], "j": [121, 686, 694, 695, 830, 890, 892, 1056, 1057, 1060], "borrow": 121, "taken": [122, 137, 144, 830, 842, 844], "compil": [122, 133, 138, 140, 156, 1100, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148], "meta": [122, 132, 980, 981, 982], "overlap": 122, "sever": [122, 156, 830, 851, 853], "judgement": 122, "locat": [122, 127, 130, 135, 1007, 1008], "some_namespac": 122, "some_backend": 122, "another_backend": 122, "break": [122, 123, 137, 141, 156, 1100], "anyth": [122, 127, 1100], "refactor": 122, "ongo": 122, "file_nam": [122, 127], "my_func": [122, 125], "my": 122, "cooler": 122, "produc": [122, 127, 813, 829], "something_cool": 122, "category_nam": [123, 124, 129, 134, 135], "backend_nam": [123, 124, 129, 130, 131, 134, 135], "adress": 123, "conveni": [123, 134, 135, 140, 142, 143], "revisit": [123, 144], "dedic": [123, 141, 143, 771, 811, 1116, 1117], "four": [123, 125, 129, 134, 142], "tf": [123, 128, 132, 134, 135, 136, 139, 144, 156, 1100], "jnp": [123, 134, 135, 136, 144, 1100], "jaxarrai": [123, 134, 135, 136], "wherea": [123, 125, 127, 129, 132, 134, 135, 144], "__sub__": [123, 125, 132, 133, 141], "__mul__": [123, 125, 132, 133, 141], "__div__": 123, "permit": [123, 127, 132], "dicat": 123, "addition": [123, 133, 136], "omit": [123, 136, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "wrapper": [123, 131, 132, 133, 134, 136, 141], "contrast": [123, 124], "futher": 123, "absenc": [123, 133], "pep": 123, "484": 123, "annot": [123, 137], "dictat": [123, 125, 132, 136], "brittl": 123, "intend": [123, 1056, 1081, 1084], "subset": [123, 124, 127, 139], "freeli": 123, "extend": [123, 124, 130], "consum": [123, 127, 133], "inde": [123, 156], "flexibl": 123, "technic": [123, 133, 136, 156], "original_typ": 123, "cumbersom": 123, "readabl": [123, 132, 133, 141, 142], "account": 124, "instanti": 124, "firstli": [124, 125, 129, 132, 134, 136, 142], "templat": [124, 127, 1100], "spec": [124, 125], "api_specif": [124, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 830, 842, 844, 918, 932, 935, 953, 956, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064], "array_api": 124, "preview": 124, "render": 124, "incorrectli": [124, 137], "onlin": [124, 1100], "domain": [124, 402, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 578, 581, 650, 653, 655, 658, 660, 663, 675, 679, 680], "codomain": [124, 402, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 438, 441, 483, 486, 488, 491, 508, 511, 513, 516, 563, 566, 568, 571, 578, 581, 650, 653, 655, 658, 660, 663, 675, 679, 680], "assum": [124, 127, 130, 134, 141, 142, 156, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 483, 486, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 813, 816, 820, 823, 829, 830, 831, 834, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 956, 1001, 1002, 1005, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1089, 1090, 1093, 1107, 1108], "operand": [124, 128, 402, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 473, 476, 478, 481, 483, 486, 488, 491, 508, 511, 513, 516, 518, 521, 563, 566, 568, 571, 578, 581, 583, 586, 610, 613, 630, 633, 635, 638, 640, 643, 650, 653, 655, 658, 660, 663, 675, 679, 680, 681, 685, 1056, 1057, 1060, 1061, 1064, 1069, 1072, 1081, 1084], "ref": [124, 402, 468, 471, 553, 556, 610, 613, 620, 623, 635, 638, 670, 674, 918, 963, 966], "But": [124, 133, 144], "needless": 124, "info": [124, 1100], "renam": 124, "conform": [124, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 558, 561, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 830, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 956, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1089, 1090, 1093, 1107, 1108], "org": [124, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 316, 319, 327, 330, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 771, 773, 776, 778, 780, 830, 842, 844, 918, 932, 935, 953, 956, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1107, 1108], "elementwise_funct": [124, 402, 403, 406, 423, 426, 428, 431, 438, 441, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 650, 653, 660, 663, 665, 668, 830, 842, 844, 918, 953, 956, 1024, 1025, 1029, 1045, 1046, 1049, 1056, 1061, 1064], "descript": [124, 127, 133, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 813, 816, 820, 823, 829, 830, 831, 834, 839, 841, 842, 844, 896, 898, 918, 932, 935, 936, 939, 953, 956, 1001, 1002, 1005, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1089, 1090, 1093, 1107, 1108], "simplic": [124, 143, 155, 206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 237, 238, 240, 243, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275, 276, 298, 301, 333, 336, 343, 346, 402, 403, 406, 418, 421, 423, 426, 428, 431, 438, 441, 448, 451, 473, 476, 478, 481, 488, 491, 513, 516, 518, 521, 543, 546, 608, 609, 620, 623, 640, 643, 645, 648, 650, 653, 660, 663, 665, 668, 675, 679, 680, 686, 714, 813, 816, 820, 823, 829, 830, 831, 834, 839, 841, 842, 844, 918, 932, 935, 936, 939, 953, 956, 1001, 1002, 1005, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1045, 1046, 1049, 1056, 1061, 1064, 1107, 1108], "judgment": 124, "beyond": [124, 918, 953, 956], "text": 124, "func_nam": [124, 125, 129], "pure": [124, 141, 144, 156], "themselv": [124, 129, 133, 134, 135, 143, 983, 984], "operator_nam": 124, "succinct": 124, "contstructor": 124, "though": [124, 129, 134, 142, 156], "forward": [124, 127, 144, 155, 156, 1139, 1140, 1143, 1147], "_forward": [124, 139, 142, 143, 1100], "former": 124, "explicitli": [124, 129, 130, 132, 133, 136, 139, 156, 830, 845, 847, 1127, 1136, 1138, 1139, 1140], "latter": [124, 130], "implicit": [124, 127, 133, 139], "docst": 124, "eight": 125, "static_": 125, "op_nam": 125, "__r": 125, "__truediv__": [125, 132, 133], "recap": [125, 133, 143], "independ": [125, 126, 131, 133, 139, 144, 830, 836, 838, 878, 880, 1007, 1008], "combinatorili": 125, "variat": [125, 127], "grid": [125, 127, 155, 206, 240, 243], "vari": [125, 127, 133, 141, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "simplest": [125, 127], "unus": [125, 136, 137, 203, 204], "excess": [125, 130, 141], "okai": [125, 139], "showcas": [125, 155], "demonstr": [125, 141], "replic": [125, 134], "meant": 125, "imaginari": 125, "some_flag": 125, "another_flag": 125, "jointli": 125, "three": [125, 127, 128, 133, 138, 206, 240, 243, 1100], "x0": [125, 686, 694], "procedur": 125, "sens": [125, 133, 141], "5574077": 125, "1850398": 125, "5463025": 125, "8422884": 125, "91601413": 125, "9647598": 125, "3738229": 125, "1597457": 125, "0963247": 125, "9955841": 125, "3278579": 125, "multi": [125, 133, 138, 156, 813, 828, 830, 836, 838, 1100, 1106, 1127, 1138], "seper": [125, 686, 713], "pars": [125, 156], "satisfi": [125, 830, 899, 901], "far": [125, 135, 140, 141, 983, 984, 994], "asid": [125, 155], "irrelev": [125, 134], "increasingli": 125, "complex": [125, 128, 142, 143, 144, 156, 830, 845, 847, 881, 883], "14254655": 125, "1578213": 125, "380515": 125, "trivial": 125, "exlud": 125, "thoroughli": 126, "ci": [126, 127, 156], "failur": 126, "On": [127, 128, 137, 140, 144], "fixtur": 127, "hit": [127, 139], "action": 127, "eleg": 127, "intellig": 127, "sampl": [127, 813, 825, 1007, 1008, 1012, 1013, 1015, 1056, 1077, 1080, 1085, 1088, 1127, 1135], "rang": [127, 142, 143, 144, 206, 207, 208, 234, 235, 237, 238, 1024, 1025, 1029, 1056, 1073, 1076, 1081, 1084, 1100], "cach": [127, 129, 369, 374, 686, 697], "unexplor": 127, "known": 127, "repeatedli": [127, 133, 983, 992], "upload": 127, "artifact": 127, "parametr": 127, "statement": [127, 137, 156], "plai": [127, 128, 144], "varieti": [127, 134, 135], "valid_int_dtyp": 127, "int8": [127, 134, 276, 327, 330, 343, 346, 368], "int16": [127, 134, 276, 298, 301, 327, 330, 343, 346, 1056, 1073, 1076, 1081, 1084], "uint8": [127, 134, 276, 298, 301, 309, 348, 351, 359, 362, 367, 368], "uint16": [127, 134, 276, 309, 324, 325, 327, 330, 348, 351, 1056, 1073, 1076, 1081, 1084], "uint32": [127, 134, 276, 309, 324, 325, 327, 330, 367, 1056, 1073, 1076, 1081, 1084], "uint64": [127, 134, 276, 309, 324, 325, 327, 330, 359, 362, 1056, 1073, 1076, 1081, 1084], "custom_strategi": 127, "st": 127, "sampled_from": 127, "min_siz": 127, "max_siz": 127, "wherein": 127, "referenc": 127, "print_hypothesis_exampl": 127, "searchstrategi": 127, "randomis": 127, "simplist": 127, "intricaci": 127, "briefli": [127, 129, 142], "bound": [127, 139], "mechan": [127, 154, 156, 1100], "power": [127, 141, 142, 143, 402, 468, 471, 508, 511, 630, 633, 686, 721, 745, 754, 830, 861, 1118], "math": [127, 136, 144, 402, 543, 546, 1100], "inclus": [127, 136, 206, 207, 208, 1007, 1009, 1010], "width": 127, "losslessli": 127, "mostli": 127, "one_of": 127, "datum": 127, "pipe": 127, "overload": 127, "shorthand": 127, "draw": [127, 1007, 1008, 1012, 1013, 1015], "input_dtyp": 127, "reject": 127, "flatmap": 127, "suppos": 127, "interact": [127, 1100], "dataobject": 127, "test_argsort": 127, "decor": [127, 129, 131, 133, 134, 135, 136], "initialis": [127, 369], "snippet": 127, "dtype_and_x": 127, "dtype_and_valu": 127, "valid_float_dtyp": 127, "list_of_length": 127, "num_positional_arg": 127, "instance_method": 127, "test_leaky_relu": 127, "float16": [127, 128, 134, 276, 316, 319, 324, 325, 368], "exhaust": 127, "num_posit": 127, "indirectli": 127, "advis": 127, "seri": [127, 128], "9433925": 127, "401298464324817e": 127, "574352379": 127, "99999": 127, "2250738585072014e": 127, "308": [127, 276, 316, 319], "103515625e": 127, "unpack": [127, 137, 686, 769], "seamlessli": 127, "edg": [127, 139, 144, 918, 919, 922, 928, 931, 975, 978, 1100], "encount": 127, "criterion": 127, "straight": [127, 141, 1100], "array_valu": 127, "valid_ax": 127, "hand": [127, 129, 137, 156], "craft": 127, "polici": [127, 155], "hoc": 127, "overview": [127, 138, 155], "array_dtyp": 127, "array_bool": 127, "na": 127, "test_concat": 127, "test_devic": 127, "array_shap": 127, "test_manipul": 127, "common_shap": 127, "test_lay": 127, "size_bound": 127, "precis": [127, 276, 316, 319, 402, 610, 613, 660, 663], "283405296074752": 127, "564049465049088": 127, "0417876997507982e": 127, "min_valu": 127, "max_valu": 127, "allow_inf": 127, "min_num_dim": 127, "wherev": 127, "reshape_shap": 127, "stand": 127, "alon": [127, 369, 387, 401], "fashion": 127, "some_sequ": 127, "06": [127, 276, 316, 319, 771, 773, 776], "allow_subnorm": 127, "exclude_min": 127, "960464477539063e": 127, "08": [127, 402, 428, 431, 513, 516, 813, 829], "coverag": 127, "allow_nan": 127, "Such": 127, "kind": [127, 156, 276, 316, 319, 327, 330, 402, 630, 633, 1056, 1073, 1076, 1081, 1084], "get_shap": 127, "allow_non": 127, "max_num_dim": 127, "min_dim_s": 127, "none_or_list_of_float": 127, "200": 127, "199": [127, 402, 428, 431], "99999999999997": 127, "000000000000002": 127, "125": 127, "43759670925832": 127, "get_mean_std": 127, "probabilist": 127, "811428143185347e": 127, "89": [127, 276, 327, 330, 402, 473, 476, 830, 887, 889, 1056, 1081, 1084], "none_or_list_float": 127, "get_bound": 127, "arrays_valu": 127, "put": [127, 156], "36418": 127, "213": 127, "21716926": 127, "get_prob": 127, "unnorm": [127, 1007, 1008], "099609375": 127, "get_axi": 127, "number_positional_argu": 127, "mind": [127, 132, 133], "bodi": 127, "test_valu": 127, "enough": [127, 141, 142, 143], "justifi": 127, "unduli": 127, "labori": 127, "straightforward": [127, 142], "scenario": 127, "autom": [127, 1100], "report": 127, "test_demo": 127, "falsifi": 127, "failing_test": 127, "traceback": 127, "123": [127, 686, 711], "assertionerror": [127, 771, 812], "shrink": 127, "prescrib": 127, "behavior": [127, 133, 139, 156, 402, 630, 633, 635, 638, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "identifi": 127, "closest": [127, 276, 303, 402, 478, 481, 518, 521, 523, 526, 640, 643, 681, 685], "checkout": 127, "scratch": 127, "databas": 127, "therebi": 127, "debug": [127, 133, 142], "event": [127, 1100], "test_gelu": 127, "test_fil": 127, "brief": 127, "phase": [127, 156], "reus": 127, "notabl": 127, "displai": [127, 133, 142], "verbos": [127, 139, 1100, 1153], "newer": 127, "max_exampl": 127, "impact": [127, 143], "deadlin": 127, "weird": 127, "verifi": [127, 134, 135, 141, 1100, 1106], "truth": [127, 402, 498, 501, 528, 531, 533, 536, 553, 556, 558, 561, 620, 623], "opt": [127, 130, 136, 141], "defer": [127, 129, 132, 133, 134, 135, 136], "suffic": [127, 131], "catch": [127, 686, 707], "systemat": 127, "safeguard": 127, "inabl": 127, "lax": [128, 156], "unsupported_dtyp": [128, 134], "bfloat16": [128, 134], "thu": [128, 402, 468, 471, 630, 633, 635, 638, 830, 845, 847], "categoris": 128, "notic": [128, 141], "mathematical_funct": 128, "arithmetic_oper": 128, "same_kind": 128, "subok": 128, "mathemat": [128, 205, 402, 418, 421, 438, 441, 513, 516, 610, 613, 830, 896, 898], "slightli": [128, 133, 139, 143], "recov": 128, "obtain": 128, "trigonometric_funct": 128, "pointwise_op": 128, "concaten": [128, 139, 142, 686, 713, 918, 924, 927, 1100], "manipulation_routin": 128, "joining_arrai": 128, "indexing_slicing_joining_mutating_op": 128, "cat": [128, 139, 144], "grasp": 128, "youtub": 128, "categor": [129, 135], "mutual": [129, 133], "constitut": [129, 139, 1056, 1077, 1080, 1085, 1088], "venn": 129, "diagram": 129, "light": [129, 156], "log_pr": [129, 133, 136], "array_arg": 129, "typic": 129, "whatsoev": [129, 133], "commonli": [129, 1056, 1077, 1080, 1085, 1088], "outsid": [129, 135, 137, 139, 141, 144, 918, 919, 922, 963, 966], "deal": [129, 156], "concurr": [129, 133], "modif": 129, "group": [129, 133], "get_all_arrays_on_dev": 129, "nested_map": [129, 983], "index_nest": [129, 983], "implicit_backend": 130, "unless": [130, 135, 136, 156, 402, 610, 613, 686, 740], "__dict__": [130, 139, 141], "ivy_original_dict": [130, 139], "unmodifi": [130, 134], "fallback": 130, "freedom": [130, 1056, 1077, 1080, 1085, 1088], "recommend": [130, 402, 593, 596, 598, 601, 635, 638, 1056, 1065, 1068], "achiev": [131, 137, 142, 144], "topic": [131, 141], "_data": [132, 141], "organiz": [132, 133], "inherit": [132, 133, 141], "bear": [132, 133, 134], "necessarili": [132, 133], "although": [132, 133], "underpin": [132, 133, 139], "programmat": [132, 133], "backup": [132, 133], "accident": [132, 133], "absent": [132, 133], "perk": [132, 133], "auto": [132, 133, 142], "throw": [132, 141], "imposs": 132, "coupl": [132, 133, 141, 143], "anywai": 132, "secondli": [132, 134], "easier": 132, "five": [133, 142], "decis": [133, 139, 141], "arbitrarili": [133, 142], "__repr__": 133, "control": [133, 134, 136, 141, 142, 155], "__getattr__": 133, "underli": [133, 402, 448, 451, 463, 466, 473, 476, 603, 606], "__setattr__": 133, "__contains__": 133, "__getstate__": 133, "__setstate__": 133, "unpickl": 133, "expand": [133, 686, 713, 918, 932, 935], "counterpart": 133, "irrespect": [133, 136, 141, 276, 283, 286], "presenc": [133, 136], "implicitli": 133, "intuit": [133, 142, 143], "chronolog": 133, "had": [133, 136], "sequenti": [133, 143], "flow": [133, 155], "implic": 133, "eager": [133, 156], "children": 133, "shallowest": 133, "deepest": 133, "22": [133, 402, 473, 476, 830, 842, 844, 868, 870, 983, 1000, 1019, 1023, 1056, 1057, 1060, 1107, 1111], "dy": [133, 771, 782, 783], "dx": [133, 771, 782, 783], "autograd": [133, 156], "grad": [133, 142, 143, 144, 1100, 1143, 1147], "redund": 133, "num_head": [133, 813, 828, 1127, 1138], "mask": [133, 813, 828, 829], "to_q_fn": [133, 813, 828], "to_kv_fn": [133, 813, 828], "to_out_fn": [133, 136, 813, 828], "to_q_v": [133, 813, 828], "to_kv_v": [133, 813, 828], "to_out_v": [133, 813, 828], "measur": [133, 813, 828, 1127, 1138], "dot": [133, 813, 828, 829, 830, 887, 889, 893, 895, 1127, 1138], "all_dtyp": 134, "all_numeric_dtyp": 134, "all_int_dtyp": 134, "all_float_dtyp": 134, "fall": [134, 138, 1100, 1139, 1140, 1143, 1147], "thirdli": 134, "native_float32": [134, 276, 368], "importantli": [134, 141, 144, 155], "arguabl": [134, 135], "compound": 134, "overflow": [134, 402, 418, 421, 1056, 1081, 1084], "arr": [134, 135], "settabl": [134, 135], "mx": [134, 135, 136, 1100], "nd": [134, 135, 136, 139, 144, 1100], "deleg": 134, "shape_to_tupl": 134, "idx": [135, 141, 686, 692], "tpu": [135, 369, 390, 399], "aliv": [135, 369, 382, 386, 388, 686, 720, 739, 741], "memori": [135, 136, 154, 156, 369, 374, 387, 392, 398, 401, 813, 827, 1100], "dual": 135, "thrown": [135, 156, 686, 731], "rare": [135, 156], "program": 136, "strictli": 136, "ration": 136, "speak": 136, "subtli": 136, "ensure_in_backend": [136, 686, 731], "x_nativ": 136, "val_n": 136, "assign": [136, 137, 141], "elif": 136, "unspecifi": [136, 402, 630, 633, 635, 638, 830, 845, 847, 918, 963, 966], "predominantli": [136, 155], "altern": [136, 142], "_wrap_fn": 136, "maxim": [136, 139], "inner": [136, 141, 830, 845, 847, 854, 857, 979, 980, 981, 982], "third": [136, 156, 830, 881, 883, 1024, 1025, 1029], "leverag": 136, "equival": [136, 142, 144, 206, 207, 208, 402, 468, 471, 593, 596, 598, 601, 635, 638, 830, 862, 864, 871, 873, 878, 880, 896, 898], "input_arrai": 136, "clean": [137, 139, 140, 142], "flake8": 137, "undefin": 137, "yield": [137, 1019, 1023, 1107, 1111], "handler": [137, 138, 140, 144, 1100], "liter": [137, 830, 896, 898], "carri": 137, "star": 137, "byte": 137, "notimpl": 137, "notimplementederror": 137, "unsuccess": 137, "exce": [137, 402, 609], "black": 137, "disobei": 137, "successfulli": 137, "comparison": 137, "sound": 138, "higher": [138, 139, 144, 156, 771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "fledg": [139, 140], "syntact": [139, 144], "clip_by_valu": [139, 144], "clamp": [139, 144], "fit": [139, 918, 944, 947], "construct": [139, 140, 143, 144, 918, 971, 974, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150], "power_seq": 139, "resid": [139, 143], "ml_framework": [139, 144, 206, 207, 208], "current_framework": [139, 144], "furthermor": 139, "framework_handl": 139, "face": 139, "cprint": [139, 1152], "framework_stack": 139, "_determine_framework_from_arg": 139, "valueerror": [139, 918, 959, 962], "get_framework": 139, "neither": [139, 402, 418, 421, 610, 613, 771, 812], "illustr": [139, 155], "un": [139, 276, 332], "nn": [139, 144, 206, 240, 243, 1100], "init_h": [139, 813, 827], "init_c": [139, 813, 827], "kernel": [139, 156, 813, 827], "recurrent_kernel": [139, 813, 827], "bia": [139, 143, 813, 826, 827, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137], "recurrent_bia": [139, 813, 827], "x_shape": 139, "batch_shap": [139, 141, 144, 206, 220, 221, 686, 740, 813, 827, 828, 829, 830, 899, 901, 1007, 1008, 1127, 1136], "timestep": [139, 813, 827, 1127, 1136], "input_channel": [139, 143, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137], "x_flat": 139, "wi": 139, "wi_x": 139, "wii_x": 139, "wif_x": 139, "wig_x": 139, "wio_x": 139, "recurr": [139, 813, 827], "wh": 139, "lstm": [139, 813, 827, 1127], "ht": 139, "ct": 139, "hts_list": 139, "unrol": [139, 142, 813, 827], "wii_xt": 139, "wif_xt": 139, "wig_xt": 139, "wio_xt": 139, "zip": 139, "htm1": 139, "ctm1": 139, "wh_htm1": 139, "whi_htm1": 139, "whf_htm1": 139, "whg_htm1": 139, "who_htm1": 139, "ft": 139, "gt": 139, "ot": 139, "offici": 139, "reliabl": 139, "sacrific": 139, "hear": 139, "virtu": 139, "pure_ivi": 139, "reduce_mean": [139, 142, 143, 144, 1100], "reduce_sum": [139, 1100], "reduce_var": 139, "compile_graph": [139, 144], "pure_torch": 139, "backbon": [139, 142], "_layer": 139, "super": [139, 142, 143, 144], "random_unifrom": 139, "unclean": 139, "wx": 139, "temp": 139, "torchscript": 139, "example_input": [139, 203, 204], "static_argnum": [139, 203, 204], "static_argnam": [139, 203, 204], "jit": [139, 156], "frontend": 140, "primit": [140, 156], "hierarch": [140, 142, 143], "arraywithlinalg": 141, "arraywithlog": 141, "arraywithmath": 141, "arraywithmeta": 141, "arraywithreduct": 141, "_shape": 141, "_size": 141, "functool": 141, "mul": 141, "len": [141, 144, 206, 240, 243], "_dtype": 141, "_devic": 141, "_dev_str": 141, "_pre_repr": 141, "_post_repr": 141, "answer": [141, 156], "consol": 141, "typeerror": 141, "immut": 141, "behav": 141, "claim": 141, "truli": 141, "_native_wrapp": 141, "attributeerror": 141, "genuin": 141, "some_method": 141, "similarli": [141, 206, 240, 243], "rewritten": 141, "__pow__": 141, "strang": 141, "enforc": 141, "appear": [141, 918, 932, 935], "_wrap_method": 141, "func_wrapp": [141, 157, 158, 159, 160, 161, 162, 163, 164, 165], "__name__": 141, "non_wrapped_method": 141, "_method_wrap": 141, "native_arg": 141, "native_kwarg": 141, "inner_fn": 141, "whist": 141, "unwrap": 141, "transit": 141, "needlessli": 141, "randn": 141, "_unwrap_method": 141, "method_wrap": 141, "compartment": 141, "public": [141, 686, 702], "newshap": 141, "new_shap": 141, "tidi": 141, "shorter": 141, "crystal": 141, "ton": 142, "ado": [142, 143], "incred": [142, 156], "hash": 142, "soup": 142, "walk": [142, 143], "dct": 142, "cnt": 142, "combo": [142, 1100, 1106], "hold": [142, 686, 743, 744], "1000": [142, 402, 660, 663], "uda": 142, "3333": 142, "6667": 142, "178": 142, "new_weight": 142, "0600": 142, "3100": 142, "2400": 142, "6900": 142, "delimit": 142, "autocomplet": 142, "midwai": 142, "agent": 142, "total_spe": 142, "total_height": 142, "total_width": 142, "ag": 142, "tot": 142, "total_": 142, "total_h": 142, "dir": 142, "cnt0": 142, "cnt1": 142, "diff_0": 142, "diff_1": 142, "config0": 142, "config1": 142, "Not": [142, 143, 156, 205], "helper": 142, "decod": 142, "l0": 142, "l1": [142, 830, 896, 898], "depth": [142, 143, 144, 155, 686, 725, 740, 983, 995, 1139, 1140], "clearer": 142, "truncat": 142, "decoder__l0": 142, "decoder__l1": 142, "encoder__l0": 142, "encoder__l1": 142, "height": 142, "l0__b": 142, "l0__w": 142, "l1__b": 142, "l1__w": 142, "printabl": 142, "obviou": 142, "foresight": 142, "untidili": 142, "update_ag": 142, "normalize_img": 142, "img": 142, "img_max": 142, "reduce_max": [142, 1100], "img_min": 142, "reduce_min": [142, 1100], "img_rang": 142, "agent_posit": 142, "agent_veloc": 142, "agent_cam_front_rgb": 142, "agent_cam_front_depth": 142, "agent_cam_rear_rgb": 142, "agent_cam_rear_depth": 142, "agent_cam_lidar": 142, "cleaner": 142, "camera": 142, "front_rgb": 142, "front_depth": 142, "rear_rgb": 142, "rear_depth": 142, "lidar": 142, "rgb": 142, "rear": 142, "veloc": 142, "cam": 142, "cam_max": 142, "cam_min": 142, "cam_rang": 142, "Of": 142, "ideal": 142, "perman": 142, "afterward": 142, "thread": 142, "incorpor": 142, "pretti": 142, "dataload": [142, 154, 1100], "_cnt": 142, "img_": 142, "_dataset_s": 142, "_batch_siz": 142, "_count": [142, 143], "__next__": 142, "filenam": 142, "img_fnam": 142, "fname": 142, "loaded_img": 142, "cv2": 142, "imread": 142, "loader": [142, 156], "batch_slic": 142, "mymodel": [142, 1100], "linear0": [142, 143, 1100], "linear1": [142, 143, 1100], "x_in": [142, 143, 144, 1100], "loss_fn": [142, 143, 144, 1100], "0145": 142, "grad_fn": 142, "addbackward0": 142, "_create_vari": 143, "output_channel": [143, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137], "with_bia": [143, 1127, 1137], "_input_channel": 143, "_output_channel": 143, "_w_shape": 143, "_b_shape": 143, "_with_bia": 143, "8979": 143, "3198": 143, "0196": 143, "3126": 143, "3717": 143, "9687": 143, "6958": 143, "5122": 143, "3902": 143, "8800": 143, "5613": 143, "1982": 143, "nightmar": 143, "overcom": 143, "fc": 143, "9563": 143, "v0": 143, "v1": 143, "6440": 143, "key0": 143, "1823": 143, "8075": 143, "linear3": 143, "v2": 143, "2346": 143, "counter": 143, "hidden": [143, 813, 827, 1127, 1136], "fed": [143, 369, 392], "1300": 143, "decoupl": 143, "scheme": 143, "weight_initi": [143, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137], "glorotuniform": [143, 1118, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137], "bias_initi": [143, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137], "_w_init": 143, "_b_init": 143, "create_vari": [143, 1118], "var_shap": [143, 1118], "fan_out": [143, 1118], "fan_in": [143, 1118], "fan_mod": [143, 1118], "fan_sum": 143, "slight": 143, "misnom": 143, "saw": 143, "vanilla": [143, 979, 981], "descent": [143, 771, 785, 787, 1143, 1148], "lar": [143, 771, 794, 796, 798, 800, 1143], "lamb": [143, 771, 794, 796, 1143], "compile_on_next_step": [143, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148], "_beta1": 143, "_beta2": 143, "_epsilon": 143, "_mw": 143, "_vw": 143, "_first_pass": 143, "_should_compil": 143, "_step": [143, 1143, 1147], "new_v": 143, "_lr": 143, "isinst": [143, 144, 686, 758], "_inplac": 143, "_stop_gradi": 143, "set_stat": [143, 1143, 1144, 1145, 1146, 1147, 1148], "pre": [144, 156], "captur": 144, "sparse_funct": 144, "num_class": [144, 1007, 1008], "num_dim": 144, "new_axi": 144, "_linear": 144, "to_backend": 144, "jax_graph": 144, "to_ivy_modul": [144, 1116], "thinli": 144, "whilst": 144, "to_haiku_modul": 144, "hk": 144, "loss_fn_t": 144, "transform": [144, 155, 813, 825, 826], "without_apply_rng": 144, "rng": 144, "prngkei": 144, "init": 144, "update_rul": 144, "tree_multimap": 144, "vision": [154, 1100], "robot": [154, 1100], "focus": 155, "perfect": 155, "3d": [155, 1127, 1132, 1133], "differenti": 155, "demo": [155, 1100], "orient": 155, "pose": 155, "euler": [155, 205], "quaternion": 155, "rotat": 155, "ivy_mech": 155, "target_facing_rotation_matrix": 155, "polar_to_cartesian_coord": 155, "ordin": [155, 830, 878, 880], "warp": 155, "optic": 155, "voxel": 155, "ivy_vis": 155, "coords_to_voxel_grid": 155, "render_pixel_coord": 155, "neural": [155, 813, 1100, 1113, 1127], "radianc": 155, "nerf": 155, "trajectori": 155, "motion": 155, "plan": [155, 1100], "mobil": 155, "ivy_robot": 155, "sample_spline_path": 155, "rigidmobil": 155, "sample_bodi": 155, "drone": 155, "sample_link": 155, "openai": 155, "swimmer": 155, "cumul": [155, 686, 704, 705], "reward": 155, "supervis": 155, "reinforc": 155, "door": [155, 156], "intersect": 155, "cartpol": 155, "mountain_car": 155, "pendulum": 155, "reacher": 155, "condit": [155, 203, 204, 983, 993, 994, 1019, 1023, 1107, 1111], "learnt": 155, "ture": 155, "ntm": 155, "egospher": 155, "spatial": 155, "esm": 155, "ivy_memori": 155, "egocentr": 155, "room": 155, "inspir": 155, "doubt": 156, "grate": 156, "probe": 156, "undergo": 156, "remark": 156, "surpris": 156, "lock": 156, "contunu": 156, "minor": 156, "xla": 156, "buffer": 156, "gold": 156, "dex": 156, "scan": 156, "tricki": 156, "predictor": 156, "tight": 156, "driver": 156, "schedul": 156, "dispatch": 156, "Will": 156, "ast": 156, "dynamic": 156, "cond": 156, "jacobian": 156, "checkpoint": 156, "autodiff": 156, "shine": 156, "merci": 156, "superset": 156, "cluster": 156, "compet": 156, "paradigm": 156, "parallelis": 156, "spmd": 156, "mixtur": [156, 771, 773, 776], "expert": 156, "sophist": 156, "depart": 156, "routin": 156, "hundr": 156, "thousand": 156, "deepli": [156, 983, 985], "broadli": 156, "heavili": 156, "supplementari": 156, "Is": 156, "reusabl": 156, "fanci": 156, "fusion": 156, "lose": 156, "vmap": 156, "pmap": 156, "overhead": 156, "ineffici": 156, "eventu": 156, "supplement": 156, "backdoor": 156, "callback": 156, "record": 156, "metric": 156, "somewhat": 156, "outsourc": 156, "inputs_to_ivy_arrai": 157, "gaussian": [167, 168, 171], "88": [167, 173, 176, 402, 473, 476, 830, 868, 870, 1056, 1057, 1060], "214": [167, 183, 186], "0768": [167, 188, 191], "231": [167, 188, 191], "693": [167, 188, 191, 402, 428, 431, 902, 913, 916], "49": [167, 188, 191, 402, 660, 663, 1056, 1057, 1060], "363": [167, 188, 191], "array_method": [168, 169, 173, 174, 178, 179, 183, 184, 188, 189, 193, 194, 198, 200, 210, 211, 215, 216, 223, 224, 229, 230, 240, 241, 245, 246, 253, 254, 258, 260, 263, 265, 271, 273, 283, 284, 288, 289, 293, 294, 298, 299, 310, 311, 316, 317, 327, 328, 333, 334, 338, 339, 343, 344, 348, 349, 354, 355, 376, 377, 393, 395, 403, 404, 408, 409, 413, 414, 418, 419, 423, 424, 428, 429, 433, 434, 438, 439, 443, 444, 448, 449, 453, 454, 458, 459, 463, 464, 468, 469, 473, 474, 478, 479, 483, 484, 488, 489, 493, 494, 498, 499, 503, 504, 508, 509, 513, 514, 518, 519, 523, 524, 528, 529, 533, 534, 538, 539, 543, 544, 548, 549, 553, 554, 558, 559, 563, 564, 568, 569, 573, 574, 578, 579, 583, 584, 588, 589, 593, 594, 598, 599, 603, 604, 610, 611, 615, 616, 620, 621, 625, 626, 630, 631, 635, 636, 640, 641, 645, 646, 650, 651, 655, 656, 660, 661, 665, 666, 670, 672, 675, 677, 681, 683, 687, 688, 715, 716, 760, 762, 773, 774, 789, 790, 820, 821, 831, 832, 836, 837, 839, 840, 842, 843, 845, 846, 848, 849, 851, 852, 854, 855, 858, 859, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 878, 879, 881, 882, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 903, 904, 908, 909, 913, 914, 919, 920, 924, 925, 928, 929, 932, 933, 936, 937, 940, 941, 944, 945, 949, 950, 953, 954, 959, 960, 963, 964, 967, 968, 971, 972, 975, 976, 1002, 1003, 1025, 1027, 1030, 1032, 1035, 1037, 1040, 1042, 1046, 1047, 1051, 1052, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1077, 1078, 1081, 1082, 1085, 1086, 1090, 1091, 1095, 1096], "container_method": [168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 190, 192, 193, 195, 197, 198, 199, 201, 207, 209, 210, 213, 215, 217, 219, 220, 222, 223, 225, 227, 229, 231, 233, 234, 236, 237, 239, 240, 242, 244, 245, 247, 249, 250, 252, 253, 255, 257, 258, 259, 261, 263, 264, 266, 268, 269, 271, 272, 274, 283, 285, 287, 288, 290, 292, 293, 295, 297, 298, 300, 302, 305, 307, 310, 312, 314, 316, 318, 320, 321, 323, 324, 326, 327, 329, 331, 333, 335, 337, 338, 340, 342, 343, 345, 347, 348, 350, 352, 354, 356, 358, 376, 378, 380, 393, 394, 396, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 671, 673, 675, 676, 678, 681, 682, 684, 687, 689, 691, 699, 700, 715, 717, 719, 760, 761, 763, 773, 775, 777, 778, 779, 781, 782, 784, 785, 786, 788, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 820, 822, 824, 831, 833, 835, 854, 856, 903, 905, 907, 908, 910, 912, 913, 915, 917, 919, 921, 923, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 1002, 1004, 1006, 1009, 1011, 1013, 1014, 1016, 1025, 1026, 1028, 1030, 1031, 1033, 1035, 1036, 1038, 1040, 1041, 1043, 1046, 1048, 1050, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1090, 1092, 1094, 1095, 1097, 1099], "faster": [203, 204], "invoc": [203, 204], "718281828459045": 205, "newaxi": 205, "alia": 205, "pi": 205, "141592653589793": 205, "chosen": [206, 207, 208, 402, 438, 441, 1019, 1023, 1107, 1111], "distanc": [206, 207, 208], "adjac": [206, 207, 208], "creation_funct": [206, 207, 208, 210, 212, 214, 215, 218, 220, 221, 223, 226, 228, 229, 232, 234, 235, 250, 251, 253, 256, 258, 262, 263, 267, 268, 270, 271, 275], "elsewher": [206, 220, 221, 1019, 1023, 1107, 1111], "row": [206, 220, 221, 830, 878, 880, 881, 883, 1007, 1008, 1019, 1022, 1107, 1110], "column": [206, 220, 221, 830, 845, 847, 874, 876, 878, 880, 881, 883], "__dlpack__": [206, 223, 226, 369, 393, 397], "interchang": [206, 223, 226, 918, 967, 970], "cartesian": [206, 240, 243], "ij": [206, 240, 243, 1056, 1057, 1060], "ni": [206, 240, 243], "xi": [206, 240, 243], "n1": [206, 240, 243], "n2": [206, 240, 243], "n3": [206, 240, 243], "xv": [206, 240, 243], "yv": [206, 240, 243], "y1": [206, 271, 275], "y2": [206, 271, 275], "x3": [206, 271, 275, 369, 386], "y3": [206, 271, 275], "intdtyp": [206, 271, 275, 276, 308, 348, 351], "defaultdtyp": [276, 277], "defaultfloatdtyp": [276, 278], "defaultintdtyp": [276, 279], "defaultuintdtyp": [276, 280], "uint_dtyp": [276, 309, 362], "incompat": [276, 293, 296], "data_type_funct": [276, 298, 301, 316, 319, 327, 330], "floatdtyp": [276, 305, 306], "int_dtyp": [276, 308, 361], "uint": [276, 309, 348, 351, 362, 367], "uintdtyp": [276, 309, 348, 351, 362, 367], "defualt": [276, 309], "4294967346": [276, 309], "followng": [276, 316, 319], "occupi": [276, 316, 319, 327, 330, 686, 743, 744], "ep": [276, 316, 319, 830, 862, 864, 871, 873], "smallest_norm": [276, 316, 319], "4028235e": [276, 316, 319], "7976931348623157e": [276, 316, 319], "55040e": [276, 316, 319], "encapsul": [276, 327, 330], "2147483648": [276, 327, 330], "2147483647": [276, 327, 330], "18446744073709551615": [276, 327, 330], "9223372036854775808": [276, 327, 330], "9223372036854775807": [276, 327, 330], "127": [276, 327, 330], "84": [276, 327, 330, 369, 381, 830, 868, 870, 1056, 1057, 1060], "314": [276, 327, 330], "32768": [276, 327, 330], "32767": [276, 327, 330], "1800": [276, 327, 330], "81": [276, 327, 330, 402, 640, 643, 665, 668, 1056, 1057, 1060], "65535": [276, 327, 330], "4294967295": [276, 327, 330], "109": [276, 327, 330], "8400": [276, 327, 330], "119": [276, 327, 330], "122": [276, 327, 330, 402, 488, 491], "type1": [276, 353], "type2": [276, 353], "default_dtype_stack": [276, 359], "native_int32": [276, 359, 368], "native_bool": [276, 359, 368], "native_uint64": [276, 359, 368], "native_float64": [276, 359, 368], "ret1": [276, 363], "ret2": [276, 363], "reset": [276, 367, 369, 400, 686, 767, 768], "native_float16": [276, 368], "native_int8": [276, 368], "native_int16": [276, 368], "native_int64": [276, 368], "native_uint8": [276, 368], "noinspect": [277, 278, 279, 370, 772], "pyshadowingnam": [277, 278, 279, 370, 772], "defaultdevic": [369, 370], "__enter__": 369, "_dev": 369, "__exit__": 369, "exc_typ": 369, "exc_val": 369, "exc_tb": 369, "exit": 369, "profil": 369, "save_dir": [369, 371], "93": [369, 381, 402, 660, 663], "139740789224448": [369, 382], "physic": [369, 384], "x4": [369, 386], "process_specif": [369, 387, 401], "percentag": [369, 387], "ram": [369, 387, 398, 401], "attr_onli": [369, 388], "chunk": [369, 390, 391, 392], "max_chunk_s": [369, 392], "chunk_siz": [369, 392], "input_ax": [369, 392], "output_ax": [369, 392], "feed": [369, 392], "fist": [369, 392], "caveat": [369, 393, 397], "portabl": [369, 393, 397, 1100], "gb": [369, 398, 401], "66700032": [369, 398], "589934592": [369, 398], "magnitud": [402, 403, 406, 418, 421, 610, 613, 830, 881, 883, 884, 886], "princip": [402, 408, 411, 423, 426, 433, 436], "x1_i": [402, 418, 421, 438, 441, 448, 451, 458, 461, 463, 466, 468, 471, 473, 476, 493, 496, 498, 501, 523, 526, 528, 531, 533, 536, 553, 556, 558, 561, 583, 586, 588, 591, 598, 601, 603, 606, 610, 613, 620, 623, 630, 633, 635, 638, 670, 674], "nor": [402, 418, 421, 610, 613, 771, 812], "nearest": [402, 418, 421, 610, 613, 640, 643], "2019": [402, 418, 421, 513, 516, 610, 613], "commut": [402, 418, 421], "524": [402, 423, 426], "644": [402, 423, 426], "201": [402, 423, 426], "305": [402, 423, 426], "412": [402, 423, 426], "44": [402, 428, 431, 640, 643, 660, 663, 665, 668, 830, 868, 870, 1019, 1023, 1056, 1057, 1060, 1107, 1111], "809": [402, 428, 431], "569": [402, 428, 431], "733": [402, 428, 431], "68": [402, 428, 431, 438, 441, 1001, 1002, 1005], "notat": [402, 438, 441, 1056, 1057, 1060], "denot": [402, 438, 441, 771, 812], "pair": [402, 438, 441, 813, 829, 830, 836, 838], "quadrant": [402, 438, 441], "3\u03c0": [402, 438, 441], "464": [402, 438, 441], "588": [402, 438, 441], "719": [402, 438, 441], "197": [402, 438, 441], "549": [402, 443, 446], "bitwis": [402, 448, 451, 463, 466, 473, 476, 603, 606], "invert": [402, 453, 456], "arithmet": [402, 468, 471, 1056, 1065, 1068], "propag": [402, 468, 471, 1056, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1085, 1088], "lh": [402, 468, 471], "rh": [402, 468, 471], "xor": [402, 473, 476, 603, 606], "78": [402, 473, 476, 645, 648, 830, 868, 870, 1056, 1057, 1060], "91": [402, 473, 476, 830, 868, 870, 1056, 1057, 1060], "66": [402, 473, 476, 830, 868, 870, 1056, 1057, 1060], "77": [402, 473, 476, 830, 868, 870, 1056, 1057, 1060], "79": [402, 473, 476, 493, 496], "26": [402, 473, 476, 493, 496, 655, 658, 771, 773, 776, 813, 820, 823, 830, 842, 844, 868, 870, 887, 889, 1056, 1057, 1060], "27": [402, 473, 476, 488, 491, 655, 658, 660, 663, 813, 829, 830, 868, 870, 1056, 1057, 1060], "74": [402, 473, 476], "59": [402, 473, 476], "654": [402, 483, 486], "368": [402, 488, 491], "670": [402, 488, 491], "202": [402, 488, 491], "548": [402, 488, 491, 655, 658], "1490": [402, 488, 491], "667": [402, 493, 496, 1024, 1025, 1029], "698": [402, 493, 496], "72": [402, 508, 511, 513, 516, 771, 773, 776, 830, 868, 870, 1056, 1057, 1060], "accur": [402, 513, 516], "fdlibm": [402, 513, 516], "compliant": [402, 513, 516, 593, 596, 598, 601, 1056, 1061, 1064, 1065, 1068, 1069, 1072], "85e": [402, 513, 516], "632": [402, 513, 516], "20e": [402, 513, 516], "72e": [402, 513, 516], "00": [402, 513, 516], "22000": [402, 513, 516], "442000": [402, 513, 516], "greatest": [402, 518, 521, 523, 526], "threshold": [402, 608, 609], "y_i": [402, 615, 618], "versu": [402, 630, 633], "odd": [402, 630, 633], "modulu": [402, 635, 638], "primarili": [402, 635, 638], "5654": [402, 640, 643], "034": [402, 640, 643], "433": [402, 640, 643], "343": [402, 640, 643], "30": [402, 640, 643, 830, 868, 870, 1056, 1057, 1060, 1118, 1124], "124": [402, 645, 648], "46": [402, 645, 648], "932": [402, 650, 653], "746": [402, 650, 653], "443": [402, 650, 653], "657": [402, 650, 653], "253": [402, 655, 658], "indistinguish": [402, 660, 663], "infinit": [402, 660, 663], "83": [402, 660, 663], "32455532": [402, 660, 663], "89897949": [402, 660, 663], "50": [402, 660, 663, 830, 868, 870, 1019, 1022, 1056, 1057, 1060, 1107, 1110], "31": [402, 660, 663], "169": [402, 660, 663], "47": [402, 660, 663], "09": [402, 665, 668, 813, 829], "546": [402, 675, 679], "842": [402, 675, 679], "916": [402, 675, 679, 902, 903, 906], "996": [402, 675, 679], "328": [402, 675, 679], "462": [402, 680], "604": [402, 680], "984": [402, 680], "997": [402, 680], "decim": [402, 681, 685], "inspect": [686, 692, 1104, 1105], "downscal": [686, 698, 699, 701], "60": [686, 704, 830, 868, 870, 1056, 1057, 1060], "default_v": [686, 707], "catch_except": [686, 707], "rev": [686, 707], "with_cal": [686, 707], "arrang": [686, 708], "mod": [686, 712], "max_freq": [686, 713], "num_band": [686, 713], "fourier": [686, 713], "band": [686, 713], "linearli": [686, 713, 830, 878, 880], "oppos": [686, 713], "geometr": [686, 713], "seen_set": [686, 725], "local_set": [686, 725], "decrement": [686, 729], "allow_dupl": [686, 737], "forkserv": [686, 738], "spawn": [686, 738], "hot": [686, 740], "scatter": [686, 740, 743, 744], "overrid": [686, 740], "tmp_dr": [686, 750], "temporari": [686, 750], "min_denomin": [686, 753], "stabil": [686, 753, 754, 1045, 1046, 1049, 1051, 1054], "_min_denomin": [686, 753], "min_bas": [686, 754], "100000023841858": [686, 758], "200000047683716": [686, 758], "299999952316284": [686, 758], "400000095367432": [686, 758], "599999904632568": [686, 758], "gradienttrack": [771, 772], "en": [771, 773, 776, 778, 780], "wikipedia": [771, 773, 776, 778, 780], "wiki": [771, 773, 776, 778, 780], "stochastic_gradient_desc": [771, 773, 776, 778, 780], "004": [771, 773, 776], "009": [771, 773, 776], "86": [771, 773, 776], "28": [771, 773, 776, 813, 816, 819, 820, 823, 830, 868, 870, 1056, 1057, 1060], "0125": [771, 773, 776], "601": [771, 773, 776], "025": [771, 773, 776], "992": [771, 773, 776], "209": [771, 773, 776, 1024, 1025, 1029], "271": [771, 773, 776], "0717": [771, 773, 776], "142": [771, 773, 776], "182": [771, 773, 776], "624": [771, 773, 776, 1007, 1013, 1015], "744": [771, 773, 776], "626": [771, 773, 776], "65": [771, 773, 776, 830, 868, 870, 1056, 1057, 1060], "024": [771, 773, 776], "096": [771, 773, 776], "216": [771, 773, 776], "384": [771, 773, 776], "rate": [771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804, 979, 980, 981, 982, 1127, 1138, 1143, 1144, 1145, 1146, 1147, 1148], "ws_new": [771, 778, 780, 785, 787, 794, 796, 798, 800, 802, 804], "retain": [771, 782, 783], "trust": [771, 794, 796, 1143, 1145], "ratio": [771, 794, 796, 1143, 1145], "decai": [771, 794, 796, 798, 800, 1143, 1145, 1146], "layerwis": [771, 798, 800], "with_grads_stack": [771, 812], "nwc": [813, 814, 815, 1127, 1128, 1129], "d_out": [813, 814, 815, 816, 817, 818, 819], "ncw": [813, 814, 815, 1127, 1128, 1129], "wio": [813, 814], "output_shap": [813, 815, 817, 819, 1127, 1129, 1131, 1133], "hwio": [813, 816], "unequ": [813, 816], "unsqueez": [813, 816, 820, 823], "ndhwc": [813, 818, 819, 1127, 1132, 1133], "volum": [813, 818], "fd": [813, 818, 819], "ncdhw": [813, 818, 819, 1127, 1132, 1133], "dhwio": [813, 818], "258": [813, 819], "depthwis": [813, 820, 823, 1127, 1134], "hwi": [813, 820, 823], "prob": [813, 825, 1007, 1008, 1127, 1135], "randomli": [813, 825, 1127, 1135], "bernoulli": [813, 825], "out_featur": [813, 825, 826], "incom": [813, 826], "outer_batch_shap": [813, 826], "inner_batch_shap": [813, 826], "in_featur": [813, 826], "cell": [813, 827, 1127, 1136], "num_queri": [813, 828, 829], "x_feat_dim": [813, 828], "num_kei": [813, 828, 829], "cont_feat_dim": [813, 828], "numhead": [813, 828], "feat_dim": [813, 828, 829], "out_feat_dim": [813, 828], "score": [813, 829], "03": [813, 829, 1001, 1002, 1005], "decomposit": [830, 831, 834, 874, 876, 881, 883], "vif": [830, 836, 838], "92": [830, 839, 841], "293": [830, 839, 841], "46997": [830, 839, 841], "eigendecomposit": [830, 845, 847], "qlq\u1d40": [830, 845, 847], "orthogon": [830, 845, 847], "eig": [830, 845, 847], "eigenvalu": [830, 845, 847, 848, 850], "eigenvector": [830, 845, 847], "prepend": [830, 854, 857], "singular": [830, 862, 864, 871, 873, 881, 883, 884, 886], "toler": [830, 862, 864, 871, 873], "largest_singular_valu": [830, 862, 864, 871, 873], "array_lik": [830, 868, 870], "105": [830, 868, 870, 902, 903, 906], "112": [830, 868, 870, 1056, 1057, 1060], "104": [830, 868, 870, 1056, 1057, 1060], "120": [830, 868, 870], "moor": [830, 871, 873], "penros": [830, 871, 873], "pseudo": [830, 871, 873], "orthonorm": [830, 874, 876, 881, 883], "2d": [830, 877, 1127, 1130, 1131, 1134], "logdet": [830, 877], "coeffici": [830, 878, 880], "usvh": [830, 881, 883], "vh": [830, 881, 883], "hermitian": [830, 881, 883], "et": [830, 881, 883], "cetera": [830, 881, 883], "adjoint": [830, 881, 883], "reconstruct": [830, 881, 883, 1024, 1025, 1029, 1035, 1039], "reconstructed_x": [830, 881, 883], "contract": [830, 887, 889, 1056, 1057, 1060], "doubl": [830, 887, 889], "manhattan": [830, 896, 898], "l2": [830, 896, 898], "euclidean": [830, 896, 898], "mathbf": [830, 899, 901], "mathbb": [830, 899, 901], "skew": [830, 899, 901], "discret": [902, 908, 911], "35667497": [902, 908, 911], "793291": [902, 913, 916], "512926": [902, 913, 916], "before_1": [918, 928, 931, 975, 978], "after_1": [918, 928, 931, 975, 978], "before_n": [918, 928, 931, 975, 978], "after_n": [918, 928, 931, 975, 978], "insert": [918, 932, 935, 983, 988, 1019, 1020, 1107, 1108], "manipulation_funct": [918, 932, 935], "reorder": [918, 936, 939], "permut": [918, 940, 943, 967, 970], "repetit": [918, 944, 947, 971, 974], "famili": [918, 963, 966], "intxx": [918, 963, 966], "floatxx": [918, 963, 966], "fomaml_step": 979, "inner_cost_fn": [979, 980, 981], "outer_cost_fn": [979, 980, 981], "inner_grad_step": [979, 980, 981, 982], "inner_learning_r": [979, 980, 981, 982], "inner_optimization_step": [979, 980, 981, 982], "inner_batch_fn": [979, 980, 981], "outer_batch_fn": [979, 980, 981], "average_across_step": [979, 980, 981], "inner_v": [979, 980, 981], "keep_inner_v": [979, 980, 981], "outer_v": [979, 980, 981], "keep_outer_v": [979, 980, 981], "return_inner_v": [979, 980, 981, 982], "num_task": [979, 980, 981, 982], "maml": [979, 980, 981], "recev": [979, 980, 981], "0x7ff1b3b1c5e0": [979, 980, 981, 982], "maml_step": 979, "rece": [979, 981], "reptile_step": 979, "cost_fn": [979, 982], "reptil": [979, 982], "receivng": [979, 982], "all_nested_indic": 983, "include_nest": [983, 984], "_index": [983, 984, 994], "_base": [983, 984, 993, 994], "copy_nest": 983, "to_mut": [983, 985, 995], "mutabl": [983, 985, 995], "insert_into_nest_at_index": 983, "insert_into_nest_at_indic": 983, "map_nest_at_index": 983, "map_nest_at_indic": 983, "multi_index_nest": 983, "nested_ani": 983, "check_nest": [983, 993, 994], "conditon": [983, 993, 994], "nested_indices_wher": 983, "stop_after_n_found": [983, 994], "_depth": [983, 995], "_tuple_check_fn": [983, 995], "_list_check_fn": [983, 995], "_dict_check_fn": [983, 995], "nested_multi_map": 983, "nest0": [983, 996], "ivy_arrai": [983, 996], "funciton": [983, 996], "prune_nest_at_index": 983, "prune_nest_at_indic": 983, "set_nest_at_index": 983, "set_nest_at_indic": 983, "111": [983, 1000], "xyz": [983, 1000], "pqr": [983, 1000], "mini": [1001, 1002, 1005, 1141, 1142], "894": [1001, 1002, 1005], "772": [1001, 1002, 1005], "796": [1001, 1002, 1005], "population_s": [1007, 1008], "num_sampl": [1007, 1008], "home": [1007, 1008, 1012, 1143, 1144, 1145, 1146, 1148], "uniformli": [1007, 1009, 1010, 1013, 1015], "parameter": [1007, 1012, 1013, 1015], "6444774682897879": [1007, 1012], "811": [1007, 1012], "508": [1007, 1012], "564": [1007, 1012], "7268672": [1007, 1012], "968": [1007, 1012], "175": [1007, 1012, 1024, 1025, 1029], "064": [1007, 1012], "40935726": [1007, 1012], "556": [1007, 1012], "26431865": [1007, 1013, 1015], "475": [1007, 1013, 1015], "878": [1007, 1013, 1015], "861": [1007, 1013, 1015], "89150229": [1007, 1013, 1015], "89629126": [1007, 1013, 1015], "94198485": [1007, 1013, 1015], "91405606": [1007, 1013, 1015], "72848724": [1007, 1013, 1015], "7550739": [1007, 1013, 1015], "00109": [1007, 1013, 1015], "occurr": [1019, 1020, 1021, 1024, 1025, 1029, 1107, 1108, 1109], "43": [1019, 1023, 1107, 1111], "x_j": [1024, 1025, 1029, 1030, 1034, 1040, 1044], "impli": [1024, 1025, 1029, 1030, 1034, 1040, 1044], "inverse_indic": [1024, 1025, 1029, 1035, 1039], "aggreg": [1024, 1025, 1029], "fourth": [1024, 1025, 1029], "607": [1024, 1025, 1029], "735": [1024, 1025, 1029], "381": [1024, 1025, 1029], "857": [1024, 1025, 1029], "0396": [1024, 1025, 1029], "166": [1024, 1025, 1029], "58": [1024, 1025, 1029], "828": [1024, 1025, 1029], "144": [1024, 1025, 1029], "40501155": [1024, 1025, 1029], "77361575": [1024, 1025, 1029], "97776199": [1024, 1025, 1029], "36831157": [1024, 1025, 1029], "89148434": [1024, 1025, 1029], "9512272": [1024, 1025, 1029], "67542176": [1024, 1025, 1029], "41985657": [1024, 1025, 1029], "23478023": [1024, 1025, 1029], "1141": [1024, 1025, 1029], "8101": [1024, 1025, 1029], "9298": [1024, 1025, 1029], "8460": [1024, 1025, 1029], "2119": [1024, 1025, 1029], "3519": [1024, 1025, 1029], "6252": [1024, 1025, 1029], "4033": [1024, 1025, 1029], "7443": [1024, 1025, 1029], "2577": [1024, 1025, 1029], "3707": [1024, 1025, 1029], "0545": [1024, 1025, 1029], "3238": [1024, 1025, 1029], "5944": [1024, 1025, 1029], "0775": [1024, 1025, 1029], "4327": [1024, 1025, 1029], "176": [1024, 1025, 1029], "889": [1024, 1025, 1029], "763": [1024, 1025, 1029], "071": [1024, 1025, 1029], "262": [1024, 1025, 1029], "456": [1024, 1025, 1029], "114": [1024, 1025, 1029], "349": [1024, 1025, 1029], "615": [1024, 1025, 1029], "594": [1024, 1025, 1029], "335": [1024, 1025, 1029], "212": [1024, 1025, 1029], "457": [1024, 1025, 1029], "827": [1024, 1025, 1029], "set_funct": [1024, 1030, 1034], "ascend": [1045, 1046, 1049], "einstein": [1056, 1057, 1060], "summat": [1056, 1057, 1060], "seq": [1056, 1057, 1060], "jk": [1056, 1057, 1060], "ik": [1056, 1057, 1060], "126": [1056, 1057, 1060], "510": [1056, 1057, 1060], "108": [1056, 1057, 1060], "117": [1056, 1057, 1060], "sentinel": [1056, 1061, 1064, 1069, 1072], "unsign": [1056, 1073, 1076, 1081, 1084], "degre": [1056, 1077, 1080, 1085, 1088], "bessel": [1056, 1077, 1080, 1085, 1088], "8164966": [1056, 1077, 1080], "varianc": [1056, 1085, 1088], "unbias": [1056, 1085, 1088], "simplicit": [1089, 1090, 1093], "grow": 1100, "ai": 1100, "got": 1100, "colab": 1100, "sharp": 1100, "weekli": 1100, "immedi": 1100, "favorit": 1100, "jax_concat": 1100, "tf_concat": 1100, "np_concat": 1100, "mx_concat": 1100, "torch_concat": 1100, "prompt": 1100, "get_devic": 1100, "reduce_prod": 1100, "gradient_imag": 1100, "linalg": 1100, "bilinear_resampl": 1100, "stack_imag": 1100, "neural_net": 1100, "ecosystem": [1100, 1106], "popular": [1100, 1106], "acceler": 1100, "articl": 1100, "lenton2021ivi": 1100, "inter": 1100, "lenton": 1100, "daniel": 1100, "pardo": 1100, "fabio": 1100, "falck": 1100, "fabian": 1100, "jame": 1100, "stephen": 1100, "clark": 1100, "ronald": 1100, "journal": 1100, "arxiv": 1100, "preprint": 1100, "2102": 1100, "02886": 1100, "2021": 1100, "add_array_spec": 1103, "fn_array_spec": 1103, "geglu": 1113, "native_modul": [1116, 1117], "native_module_class": [1116, 1117], "firstlayersiren": 1118, "kaimingnorm": [1118, 1122], "negative_slop": 1118, "Ones": 1118, "siren": 1118, "w0": [1118, 1124], "filter_s": [1127, 1128, 1129], "1d": [1127, 1128, 1129], "conv1dtranspos": 1127, "filter_shap": [1127, 1130, 1131, 1132, 1133, 1134], "conv2dtranspos": 1127, "conv3dtranspos": 1127, "depthwiseconv2d": 1127, "num_channel": [1127, 1134], "bernoul": [1127, 1135], "num_lay": [1127, 1136], "return_sequ": [1127, 1136], "return_st": [1127, 1136], "get_initial_st": [1127, 1136], "dens": [1127, 1137], "multiheadattent": 1127, "query_dim": [1127, 1138], "head_dim": [1127, 1138], "dropout_r": [1127, 1138], "context_dim": [1127, 1138], "with_to_q_fn": [1127, 1138], "with_to_kv_fn": [1127, 1138], "with_to_out_fn": [1127, 1138], "build_mod": [1127, 1138, 1139, 1140], "on_init": [1127, 1138, 1139, 1140], "__call__": [1127, 1138, 1139, 1140], "store_var": [1139, 1140], "arg_stateful_idx": [1139, 1140], "kwarg_stateful_idx": [1139, 1140], "fallback_to_non_compil": [1139, 1140, 1143, 1147], "with_partial_v": [1139, 1140], "initialz": [1139, 1140], "from_cal": [1139, 1140], "check_submod_ret": [1139, 1140], "get_mod_kei": [1139, 1140], "top_mod": [1139, 1140], "mod_depth": [1139, 1140], "mod_height": [1139, 1140], "mod_with_top_mod_key_chain": [1139, 1140], "save_weight": [1139, 1140], "weights_path": [1139, 1140], "show_mod_in_top_mod": [1139, 1140], "upper_depth": [1139, 1140], "lower_depth": [1139, 1140], "show_structur": [1139, 1140], "show_v_in_top_v": [1139, 1140], "sub_mod": [1139, 1140], "show_v": [1139, 1140], "track_submod_call_ord": [1139, 1140], "track_submod_ret": [1139, 1140], "v_with_top_v_key_chain": [1139, 1140], "layernorm": 1141, "normalized_shap": [1141, 1142], "elementwise_affin": [1141, 1142], "trail": [1141, 1142], "affin": [1141, 1142], "0x7ff1b3ab6d30": [1143, 1146], "init_on_first_step": [1143, 1147], "ignore_miss": [1143, 1147], "overridden": [1143, 1147], "sgd": 1143, "stochast": [1143, 1148], "0x7ff1b3ab6a60": [1143, 1148], "sub_modul": [1149, 1150]}, "objects": {"ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [35, 0, 0, "-", "creation"], [37, 0, 0, "-", "data_type"], [39, 0, 0, "-", "device"], [41, 0, 0, "-", "elementwise"], [43, 0, 0, "-", "general"], [45, 0, 0, "-", "gradients"], [47, 0, 0, "-", "image"], [49, 0, 0, "-", "layers"], [51, 0, 0, "-", "linear_algebra"], [53, 0, 0, "-", "losses"], [55, 0, 0, "-", "manipulation"], [57, 0, 0, "-", "norms"], [59, 0, 0, "-", "random"], [61, 0, 0, "-", "searching"], [64, 0, 0, "-", "set"], [66, 0, 0, "-", "sorting"], [68, 0, 0, "-", "statistical"], [70, 0, 0, "-", "utility"], [72, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 2, 1, "", "gelu"], [25, 2, 1, "", "leaky_relu"], [25, 2, 1, "", "relu"], [25, 2, 1, "", "sigmoid"], [25, 2, 1, "", "softmax"], [25, 2, 1, "", "softplus"], [25, 2, 1, "", "tanh"]], "ivy.array.array": [[27, 1, 1, "", "Array"], [28, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 3, 1, "", "T"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__le__"], [27, 2, 1, "", "__radd__"], [27, 2, 1, "", "adam_update"], [27, 2, 1, "", "arange"], [27, 2, 1, "", "arg_info"], [27, 2, 1, "", "arg_names"], [27, 2, 1, "", "argmax"], [27, 2, 1, "", "argmin"], [27, 2, 1, "", "array"], [27, 2, 1, "", "array_equal"], [27, 2, 1, "", "arrays_equal"], [27, 2, 1, "", "as_ivy_dev"], [27, 2, 1, "", "as_ivy_dtype"], [27, 2, 1, "", "as_native_dev"], [27, 2, 1, "", "as_native_dtype"], [27, 2, 1, "", "assert_supports_inplace"], [27, 2, 1, "", "cache_fn"], [27, 2, 1, "", "clear_mem_on_dev"], [27, 2, 1, "", "clip_matrix_norm"], [27, 2, 1, "", "clip_vector_norm"], [27, 2, 1, "", "closest_valid_dtype"], [27, 2, 1, "", "container_types"], [27, 2, 1, "", "conv1d"], [27, 2, 1, "", "conv1d_transpose"], [27, 2, 1, "", "conv2d"], [27, 2, 1, "", "conv2d_transpose"], [27, 2, 1, "", "conv3d"], [27, 2, 1, "", "conv3d_transpose"], [27, 2, 1, "", "copy_array"], [27, 2, 1, "", "cumprod"], [27, 2, 1, "", "cumsum"], [27, 2, 1, "", "current_backend"], [27, 2, 1, "", "current_backend_str"], [27, 3, 1, "", "data"], [27, 2, 1, "", "default"], [27, 2, 1, "", "default_device"], [27, 2, 1, "", "default_dtype"], [27, 2, 1, "", "default_float_dtype"], [27, 2, 1, "", "default_int_dtype"], [27, 2, 1, "", "default_uint_dtype"], [27, 2, 1, "", "dev_util"], [27, 3, 1, "", "device"], [27, 2, 1, "", "dropout"], [27, 3, 1, "", "dtype"], [27, 2, 1, "", "dtype_bits"], [27, 2, 1, "", "einops_rearrange"], [27, 2, 1, "", "einops_reduce"], [27, 2, 1, "", "einops_repeat"], [27, 2, 1, "", "empty"], [27, 2, 1, "", "execute_with_gradients"], [27, 2, 1, "", "exists"], [27, 2, 1, "", "eye"], [27, 2, 1, "", "floormod"], [27, 2, 1, "", "fourier_encode"], [27, 2, 1, "", "full"], [27, 2, 1, "", "function_supported_dtypes"], [27, 2, 1, "", "function_unsupported_dtypes"], [27, 2, 1, "", "gather"], [27, 2, 1, "", "get_all_arrays_in_memory"], [27, 2, 1, "", "get_all_ivy_arrays_on_dev"], [27, 2, 1, "", "get_min_base"], [27, 2, 1, "", "get_min_denominator"], [27, 2, 1, "", "get_nestable_mode"], [27, 2, 1, "", "get_num_dims"], [27, 2, 1, "", "get_referrers_recursive"], [27, 2, 1, "", "gpu_is_available"], [27, 2, 1, "", "gradient_descent_update"], [27, 2, 1, "", "handle_nestable"], [27, 2, 1, "", "handle_out_argument"], [27, 2, 1, "", "has_nans"], [27, 2, 1, "", "indices_where"], [27, 2, 1, "", "infer_device"], [27, 2, 1, "", "infer_dtype"], [27, 2, 1, "", "inplace_arrays_supported"], [27, 2, 1, "", "inplace_decrement"], [27, 2, 1, "", "inplace_increment"], [27, 2, 1, "", "inplace_update"], [27, 2, 1, "", "inplace_variables_supported"], [27, 2, 1, "", "inputs_to_native_arrays"], [27, 2, 1, "", "invalid_dtype"], [27, 2, 1, "", "is_array"], [27, 2, 1, "", "is_ivy_array"], [27, 2, 1, "", "is_ivy_container"], [27, 2, 1, "", "is_native_array"], [27, 3, 1, "", "is_variable"], [27, 2, 1, "", "lamb_update"], [27, 2, 1, "", "lars_update"], [27, 2, 1, "", "linear"], [27, 2, 1, "", "linspace"], [27, 2, 1, "", "logspace"], [27, 2, 1, "", "lstm_update"], [27, 3, 1, "", "mT"], [27, 2, 1, "", "match_kwargs"], [27, 2, 1, "", "matrix_power"], [27, 2, 1, "", "maximum"], [27, 2, 1, "", "minimum"], [27, 2, 1, "", "multi_head_attention"], [27, 2, 1, "", "multinomial"], [27, 2, 1, "", "multiprocessing"], [27, 3, 1, "", "ndim"], [27, 2, 1, "", "nonzero"], [27, 2, 1, "", "num_arrays_in_memory"], [27, 2, 1, "", "num_cpu_cores"], [27, 2, 1, "", "num_gpus"], [27, 2, 1, "", "num_ivy_arrays_on_dev"], [27, 2, 1, "", "one_hot"], [27, 2, 1, "", "ones"], [27, 2, 1, "", "optimizer_update"], [27, 2, 1, "", "outputs_to_ivy_arrays"], [27, 2, 1, "", "percent_used_mem_on_dev"], [27, 2, 1, "", "print_all_arrays_in_memory"], [27, 2, 1, "", "print_all_ivy_arrays_on_dev"], [27, 2, 1, "", "promote_types"], [27, 2, 1, "", "queue_timeout"], [27, 2, 1, "", "randint"], [27, 2, 1, "", "random_normal"], [27, 2, 1, "", "random_uniform"], [27, 2, 1, "", "scaled_dot_product_attention"], [27, 2, 1, "", "scatter_flat"], [27, 2, 1, "", "scatter_nd"], [27, 2, 1, "", "seed"], [27, 2, 1, "", "set_default_device"], [27, 2, 1, "", "set_default_dtype"], [27, 2, 1, "", "set_default_float_dtype"], [27, 2, 1, "", "set_default_int_dtype"], [27, 2, 1, "", "set_default_uint_dtype"], [27, 2, 1, "", "set_min_base"], [27, 2, 1, "", "set_min_denominator"], [27, 2, 1, "", "set_nestable_mode"], [27, 2, 1, "", "set_queue_timeout"], [27, 2, 1, "", "set_shape_array_mode"], [27, 2, 1, "", "set_split_factor"], [27, 2, 1, "", "set_tmp_dir"], [27, 2, 1, "", "set_with_grads"], [27, 3, 1, "", "shape"], [27, 2, 1, "", "shape_array_mode"], [27, 2, 1, "", "shuffle"], [27, 3, 1, "", "size"], [27, 2, 1, "", "slogdet"], [27, 2, 1, "", "split"], [27, 2, 1, "", "split_factor"], [27, 2, 1, "", "split_func_call"], [27, 2, 1, "", "stable_divide"], [27, 2, 1, "", "stable_pow"], [27, 2, 1, "", "stop_gradient"], [27, 2, 1, "", "supports_inplace"], [27, 2, 1, "", "tmp_dir"], [27, 2, 1, "", "to_container_and_back"], [27, 2, 1, "", "to_ivy_shape"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_native_arrays_and_back"], [27, 2, 1, "", "to_native_shape"], [27, 2, 1, "", "to_scalar"], [27, 2, 1, "", "total_mem_on_dev"], [27, 2, 1, "", "tpu_is_available"], [27, 2, 1, "", "try_else_none"], [27, 2, 1, "", "type_promote_arrays"], [27, 2, 1, "", "unset_default_device"], [27, 2, 1, "", "unset_default_dtype"], [27, 2, 1, "", "unset_default_float_dtype"], [27, 2, 1, "", "unset_default_int_dtype"], [27, 2, 1, "", "unset_default_uint_dtype"], [27, 2, 1, "", "unset_nestable_mode"], [27, 2, 1, "", "unset_shape_array_mode"], [27, 2, 1, "", "unset_with_grads"], [27, 2, 1, "", "unstack"], [27, 2, 1, "", "used_mem_on_dev"], [27, 2, 1, "", "valid_dtype"], [27, 2, 1, "", "value_is_nan"], [27, 2, 1, "", "variable"], [27, 2, 1, "", "variable_data"], [27, 2, 1, "", "where"], [27, 2, 1, "", "with_grads"], [27, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[28, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[404, 4, 1, "", "abs"], [409, 4, 1, "", "acos"], [414, 4, 1, "", "acosh"], [774, 4, 1, "", "adam_step"], [419, 4, 1, "", "add"], [1091, 4, 1, "", "all"], [688, 4, 1, "", "all_equal"], [1096, 4, 1, "", "any"], [1047, 4, 1, "", "argsort"], [211, 4, 1, "", "asarray"], [424, 4, 1, "", "asin"], [429, 4, 1, "", "asinh"], [284, 4, 1, "", "astype"], [434, 4, 1, "", "atan"], [439, 4, 1, "", "atan2"], [444, 4, 1, "", "atanh"], [904, 4, 1, "", "binary_cross_entropy"], [449, 4, 1, "", "bitwise_and"], [454, 4, 1, "", "bitwise_invert"], [459, 4, 1, "", "bitwise_left_shift"], [464, 4, 1, "", "bitwise_or"], [469, 4, 1, "", "bitwise_right_shift"], [474, 4, 1, "", "bitwise_xor"], [289, 4, 1, "", "broadcast_arrays"], [294, 4, 1, "", "broadcast_to"], [299, 4, 1, "", "can_cast"], [479, 4, 1, "", "ceil"], [832, 4, 1, "", "cholesky"], [920, 4, 1, "", "clip"], [925, 4, 1, "", "concat"], [929, 4, 1, "", "constant_pad"], [484, 4, 1, "", "cos"], [489, 4, 1, "", "cosh"], [837, 4, 1, "", "cross"], [909, 4, 1, "", "cross_entropy"], [821, 4, 1, "", "depthwise_conv2d"], [840, 4, 1, "", "det"], [377, 4, 1, "", "dev"], [843, 4, 1, "", "diagonal"], [494, 4, 1, "", "divide"], [311, 4, 1, "", "dtype"], [846, 4, 1, "", "eigh"], [849, 4, 1, "", "eigvalsh"], [1058, 4, 1, "", "einsum"], [216, 4, 1, "", "empty_like"], [499, 4, 1, "", "equal"], [504, 4, 1, "", "erf"], [509, 4, 1, "", "exp"], [933, 4, 1, "", "expand_dims"], [514, 4, 1, "", "expm1"], [317, 4, 1, "", "finfo"], [937, 4, 1, "", "flip"], [519, 4, 1, "", "floor"], [524, 4, 1, "", "floor_divide"], [224, 4, 1, "", "from_dlpack"], [230, 4, 1, "", "full_like"], [716, 4, 1, "", "gather_nd"], [169, 4, 1, "", "gelu"], [529, 4, 1, "", "greater"], [534, 4, 1, "", "greater_equal"], [328, 4, 1, "", "iinfo"], [852, 4, 1, "", "inv"], [334, 4, 1, "", "is_bool_dtype"], [339, 4, 1, "", "is_float_dtype"], [344, 4, 1, "", "is_int_dtype"], [349, 4, 1, "", "is_uint_dtype"], [790, 4, 1, "", "is_variable"], [539, 4, 1, "", "isfinite"], [544, 4, 1, "", "isinf"], [549, 4, 1, "", "isnan"], [1003, 4, 1, "", "layer_norm"], [174, 4, 1, "", "leaky_relu"], [554, 4, 1, "", "less"], [559, 4, 1, "", "less_equal"], [564, 4, 1, "", "log"], [569, 4, 1, "", "log10"], [574, 4, 1, "", "log1p"], [579, 4, 1, "", "log2"], [584, 4, 1, "", "logaddexp"], [589, 4, 1, "", "logical_and"], [594, 4, 1, "", "logical_not"], [599, 4, 1, "", "logical_or"], [604, 4, 1, "", "logical_xor"], [855, 4, 1, "", "matmul"], [859, 4, 1, "", "matrix_norm"], [863, 4, 1, "", "matrix_rank"], [866, 4, 1, "", "matrix_transpose"], [1062, 4, 1, "", "max"], [1066, 4, 1, "", "mean"], [241, 4, 1, "", "meshgrid"], [1070, 4, 1, "", "min"], [611, 4, 1, "", "multiply"], [246, 4, 1, "", "native_array"], [616, 4, 1, "", "negative"], [621, 4, 1, "", "not_equal"], [254, 4, 1, "", "ones_like"], [869, 4, 1, "", "outer"], [941, 4, 1, "", "permute_dims"], [872, 4, 1, "", "pinv"], [626, 4, 1, "", "positive"], [631, 4, 1, "", "pow"], [1074, 4, 1, "", "prod"], [875, 4, 1, "", "qr"], [179, 4, 1, "", "relu"], [636, 4, 1, "", "remainder"], [945, 4, 1, "", "repeat"], [950, 4, 1, "", "reshape"], [355, 4, 1, "", "result_type"], [954, 4, 1, "", "roll"], [641, 4, 1, "", "round"], [184, 4, 1, "", "sigmoid"], [646, 4, 1, "", "sign"], [651, 4, 1, "", "sin"], [656, 4, 1, "", "sinh"], [189, 4, 1, "", "softmax"], [194, 4, 1, "", "softplus"], [879, 4, 1, "", "solve"], [1052, 4, 1, "", "sort"], [914, 4, 1, "", "sparse_cross_entropy"], [661, 4, 1, "", "sqrt"], [666, 4, 1, "", "square"], [960, 4, 1, "", "squeeze"], [964, 4, 1, "", "stack"], [1078, 4, 1, "", "std"], [672, 4, 1, "", "subtract"], [1082, 4, 1, "", "sum"], [882, 4, 1, "", "svd"], [885, 4, 1, "", "svdvals"], [968, 4, 1, "", "swapaxes"], [677, 4, 1, "", "tan"], [200, 4, 1, "", "tanh"], [888, 4, 1, "", "tensordot"], [972, 4, 1, "", "tile"], [395, 4, 1, "", "to_device"], [762, 4, 1, "", "to_numpy"], [891, 4, 1, "", "trace"], [260, 4, 1, "", "tril"], [265, 4, 1, "", "triu"], [683, 4, 1, "", "trunc"], [1027, 4, 1, "", "unique_all"], [1032, 4, 1, "", "unique_counts"], [1037, 4, 1, "", "unique_inverse"], [1042, 4, 1, "", "unique_values"], [1086, 4, 1, "", "var"], [894, 4, 1, "", "vecdot"], [897, 4, 1, "", "vector_norm"], [900, 4, 1, "", "vector_to_skew_symmetric_matrix"], [976, 4, 1, "", "zero_pad"], [273, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[30, 4, 1, "", "args_to_container"], [31, 4, 1, "", "args_to_ivy"], [32, 4, 1, "", "args_to_native"], [33, 4, 1, "", "to_ivy"], [34, 4, 1, "", "to_native"]], "ivy.array.creation": [[36, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[36, 2, 1, "", "asarray"], [36, 2, 1, "", "empty_like"], [36, 2, 1, "", "from_dlpack"], [36, 2, 1, "", "full_like"], [36, 2, 1, "", "meshgrid"], [36, 2, 1, "", "native_array"], [36, 2, 1, "", "ones_like"], [36, 2, 1, "", "tril"], [36, 2, 1, "", "triu"], [36, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[38, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[38, 2, 1, "", "astype"], [38, 2, 1, "", "broadcast_arrays"], [38, 2, 1, "", "broadcast_to"], [38, 2, 1, "", "can_cast"], [38, 2, 1, "", "dtype"], [38, 2, 1, "", "finfo"], [38, 2, 1, "", "iinfo"], [38, 2, 1, "", "is_bool_dtype"], [38, 2, 1, "", "is_float_dtype"], [38, 2, 1, "", "is_int_dtype"], [38, 2, 1, "", "is_uint_dtype"], [38, 2, 1, "", "result_type"]], "ivy.array.device": [[40, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[40, 2, 1, "", "dev"], [40, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[42, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[42, 2, 1, "", "abs"], [42, 2, 1, "", "acos"], [42, 2, 1, "", "acosh"], [42, 2, 1, "", "add"], [42, 2, 1, "", "asin"], [42, 2, 1, "", "asinh"], [42, 2, 1, "", "atan"], [42, 2, 1, "", "atan2"], [42, 2, 1, "", "atanh"], [42, 2, 1, "", "bitwise_and"], [42, 2, 1, "", "bitwise_invert"], [42, 2, 1, "", "bitwise_left_shift"], [42, 2, 1, "", "bitwise_or"], [42, 2, 1, "", "bitwise_right_shift"], [42, 2, 1, "", "bitwise_xor"], [42, 2, 1, "", "ceil"], [42, 2, 1, "", "cos"], [42, 2, 1, "", "cosh"], [42, 2, 1, "", "divide"], [42, 2, 1, "", "equal"], [42, 2, 1, "", "erf"], [42, 2, 1, "", "exp"], [42, 2, 1, "", "expm1"], [42, 2, 1, "", "floor"], [42, 2, 1, "", "floor_divide"], [42, 2, 1, "", "greater"], [42, 2, 1, "", "greater_equal"], [42, 2, 1, "", "isfinite"], [42, 2, 1, "", "isinf"], [42, 2, 1, "", "isnan"], [42, 2, 1, "", "less"], [42, 2, 1, "", "less_equal"], [42, 2, 1, "", "log"], [42, 2, 1, "", "log10"], [42, 2, 1, "", "log1p"], [42, 2, 1, "", "log2"], [42, 2, 1, "", "logaddexp"], [42, 2, 1, "", "logical_and"], [42, 2, 1, "", "logical_not"], [42, 2, 1, "", "logical_or"], [42, 2, 1, "", "logical_xor"], [42, 2, 1, "", "multiply"], [42, 2, 1, "", "negative"], [42, 2, 1, "", "not_equal"], [42, 2, 1, "", "positive"], [42, 2, 1, "", "pow"], [42, 2, 1, "", "remainder"], [42, 2, 1, "", "round"], [42, 2, 1, "", "sign"], [42, 2, 1, "", "sin"], [42, 2, 1, "", "sinh"], [42, 2, 1, "", "sqrt"], [42, 2, 1, "", "square"], [42, 2, 1, "", "subtract"], [42, 2, 1, "", "tan"], [42, 2, 1, "", "tanh"], [42, 2, 1, "", "trunc"]], "ivy.array.general": [[44, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[44, 2, 1, "", "all_equal"], [44, 2, 1, "", "gather_nd"], [44, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[46, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[46, 2, 1, "", "adam_step"], [46, 2, 1, "", "is_variable"]], "ivy.array.image": [[48, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[50, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[50, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[52, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[52, 2, 1, "", "cholesky"], [52, 2, 1, "", "cross"], [52, 2, 1, "", "det"], [52, 2, 1, "", "diagonal"], [52, 2, 1, "", "eigh"], [52, 2, 1, "", "eigvalsh"], [52, 2, 1, "", "inv"], [52, 2, 1, "", "matmul"], [52, 2, 1, "", "matrix_norm"], [52, 2, 1, "", "matrix_rank"], [52, 2, 1, "", "matrix_transpose"], [52, 2, 1, "", "outer"], [52, 2, 1, "", "pinv"], [52, 2, 1, "", "qr"], [52, 2, 1, "", "solve"], [52, 2, 1, "", "svd"], [52, 2, 1, "", "svdvals"], [52, 2, 1, "", "tensordot"], [52, 2, 1, "", "trace"], [52, 2, 1, "", "vecdot"], [52, 2, 1, "", "vector_norm"], [52, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[54, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[54, 2, 1, "", "binary_cross_entropy"], [54, 2, 1, "", "cross_entropy"], [54, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[56, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[56, 2, 1, "", "clip"], [56, 2, 1, "", "concat"], [56, 2, 1, "", "constant_pad"], [56, 2, 1, "", "expand_dims"], [56, 2, 1, "", "flip"], [56, 2, 1, "", "permute_dims"], [56, 2, 1, "", "repeat"], [56, 2, 1, "", "reshape"], [56, 2, 1, "", "roll"], [56, 2, 1, "", "squeeze"], [56, 2, 1, "", "stack"], [56, 2, 1, "", "swapaxes"], [56, 2, 1, "", "tile"], [56, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[58, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[58, 2, 1, "", "layer_norm"]], "ivy.array.random": [[60, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[62, 1, 1, "", "ArrayWithSearching"], [63, 4, 1, "", "argmax"]], "ivy.array.set": [[65, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[65, 2, 1, "", "unique_all"], [65, 2, 1, "", "unique_counts"], [65, 2, 1, "", "unique_inverse"], [65, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[67, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[67, 2, 1, "", "argsort"], [67, 2, 1, "", "sort"]], "ivy.array.statistical": [[69, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[69, 2, 1, "", "einsum"], [69, 2, 1, "", "max"], [69, 2, 1, "", "mean"], [69, 2, 1, "", "min"], [69, 2, 1, "", "prod"], [69, 2, 1, "", "std"], [69, 2, 1, "", "sum"], [69, 2, 1, "", "var"]], "ivy.array.utility": [[71, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[71, 2, 1, "", "all"], [71, 2, 1, "", "any"]], "ivy.array.wrapping": [[73, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [157, 0, 0, "-", "func_wrapper"], [1103, 0, 0, "-", "inspection"], [1107, 0, 0, "-", "searching"], [1112, 0, 0, "-", "stateful"], [1152, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 4, 1, "", "choose_random_backend"], [3, 4, 1, "", "clear_backend_stack"], [4, 4, 1, "", "current_backend"], [5, 4, 1, "", "get_backend"], [6, 4, 1, "", "set_backend"], [7, 4, 1, "", "try_import_ivy_jax"], [8, 4, 1, "", "try_import_ivy_mxnet"], [9, 4, 1, "", "try_import_ivy_numpy"], [10, 4, 1, "", "try_import_ivy_tf"], [11, 4, 1, "", "try_import_ivy_torch"], [12, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[75, 0, 0, "-", "activations"], [77, 0, 0, "-", "base"], [79, 0, 0, "-", "container"], [81, 0, 0, "-", "creation"], [83, 0, 0, "-", "data_type"], [85, 0, 0, "-", "device"], [87, 0, 0, "-", "elementwise"], [89, 0, 0, "-", "general"], [91, 0, 0, "-", "gradients"], [93, 0, 0, "-", "image"], [95, 0, 0, "-", "layers"], [97, 0, 0, "-", "linear_algebra"], [99, 0, 0, "-", "losses"], [101, 0, 0, "-", "manipulation"], [103, 0, 0, "-", "norms"], [105, 0, 0, "-", "random"], [107, 0, 0, "-", "searching"], [111, 0, 0, "-", "set"], [113, 0, 0, "-", "sorting"], [115, 0, 0, "-", "statistical"], [117, 0, 0, "-", "utility"], [119, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[76, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[76, 2, 1, "", "gelu"], [76, 2, 1, "", "leaky_relu"], [76, 2, 1, "", "relu"], [76, 2, 1, "", "sigmoid"], [76, 2, 1, "", "softmax"], [76, 2, 1, "", "softplus"], [76, 2, 1, "", "static_gelu"], [76, 2, 1, "", "static_leaky_relu"], [76, 2, 1, "", "static_relu"], [76, 2, 1, "", "static_sigmoid"], [76, 2, 1, "", "static_softmax"], [76, 2, 1, "", "static_softplus"], [76, 2, 1, "", "static_tanh"], [76, 2, 1, "", "tanh"]], "ivy.container.base": [[78, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[78, 2, 1, "", "__getitem__"], [78, 2, 1, "", "__init__"], [78, 2, 1, "", "__setitem__"], [78, 2, 1, "", "all_false"], [78, 2, 1, "", "all_key_chains"], [78, 2, 1, "", "all_true"], [78, 2, 1, "", "arrays_as_lists"], [78, 2, 1, "", "as_arrays"], [78, 2, 1, "", "as_bools"], [78, 2, 1, "", "as_ones"], [78, 2, 1, "", "as_random_uniform"], [78, 2, 1, "", "as_variables"], [78, 2, 1, "", "as_zeros"], [78, 2, 1, "", "assert_contains_sub_container"], [78, 2, 1, "", "assert_contains_sub_structure"], [78, 2, 1, "", "assert_identical"], [78, 2, 1, "", "assert_identical_structure"], [78, 2, 1, "", "at_key_chain"], [78, 2, 1, "", "at_key_chains"], [78, 2, 1, "", "at_keys"], [78, 2, 1, "", "clip"], [78, 2, 1, "", "combine"], [78, 2, 1, "", "common_key_chains"], [78, 3, 1, "", "config"], [78, 2, 1, "", "contains_sub_container"], [78, 2, 1, "", "contains_sub_structure"], [78, 2, 1, "", "copy"], [78, 2, 1, "", "create_if_absent"], [78, 2, 1, "", "cutoff_at_depth"], [78, 2, 1, "", "cutoff_at_height"], [78, 2, 1, "", "deep_copy"], [78, 3, 1, "", "dev"], [78, 2, 1, "", "dev_clone"], [78, 2, 1, "", "dev_dist"], [78, 3, 1, "", "dev_str"], [78, 2, 1, "", "diff"], [78, 2, 1, "", "dtype"], [78, 2, 1, "", "einops_rearrange"], [78, 2, 1, "", "einops_reduce"], [78, 2, 1, "", "einops_repeat"], [78, 2, 1, "", "find_sub_container"], [78, 2, 1, "", "find_sub_structure"], [78, 2, 1, "", "flatten_key_chain"], [78, 2, 1, "", "flatten_key_chains"], [78, 2, 1, "", "format_key_chains"], [78, 2, 1, "", "from_disk_as_hdf5"], [78, 2, 1, "", "from_disk_as_json"], [78, 2, 1, "", "from_disk_as_pickled"], [78, 2, 1, "", "from_flat_list"], [78, 2, 1, "", "from_numpy"], [78, 2, 1, "", "gather"], [78, 2, 1, "", "gather_nd"], [78, 2, 1, "", "h5_file_size"], [78, 2, 1, "", "handle_inplace"], [78, 2, 1, "", "has_key"], [78, 2, 1, "", "has_key_chain"], [78, 2, 1, "", "has_nans"], [78, 2, 1, "", "identical"], [78, 2, 1, "", "identical_array_shapes"], [78, 2, 1, "", "identical_configs"], [78, 2, 1, "", "identical_structure"], [78, 2, 1, "", "if_exists"], [78, 2, 1, "", "inplace_update"], [78, 3, 1, "", "ivy"], [78, 2, 1, "", "key_chains_containing"], [78, 2, 1, "", "list_join"], [78, 2, 1, "", "list_stack"], [78, 2, 1, "", "map"], [78, 2, 1, "", "map_conts"], [78, 2, 1, "", "matrix_norm"], [78, 3, 1, "", "max_depth"], [78, 2, 1, "", "maximum"], [78, 2, 1, "", "minimum"], [78, 2, 1, "", "multi_map"], [78, 2, 1, "", "multi_map_in_static_method"], [78, 2, 1, "", "num_arrays"], [78, 2, 1, "", "overwrite_at_key_chain"], [78, 2, 1, "", "overwrite_at_key_chains"], [78, 2, 1, "", "prune_empty"], [78, 2, 1, "", "prune_key_chain"], [78, 2, 1, "", "prune_key_chains"], [78, 2, 1, "", "prune_key_from_key_chains"], [78, 2, 1, "", "prune_keys"], [78, 2, 1, "", "prune_keys_from_key_chains"], [78, 2, 1, "", "reduce"], [78, 2, 1, "", "remove_key_length_limit"], [78, 2, 1, "", "remove_print_limit"], [78, 2, 1, "", "reshape_like"], [78, 2, 1, "", "restructure"], [78, 2, 1, "", "restructure_key_chains"], [78, 2, 1, "", "set_at_key_chain"], [78, 2, 1, "", "set_at_key_chains"], [78, 2, 1, "", "set_at_keys"], [78, 2, 1, "", "set_framework"], [78, 2, 1, "", "set_ivy_backend"], [78, 3, 1, "", "shape"], [78, 3, 1, "", "shapes"], [78, 2, 1, "", "show"], [78, 2, 1, "", "show_sub_container"], [78, 2, 1, "", "shuffle"], [78, 2, 1, "", "shuffle_h5_file"], [78, 2, 1, "", "size_ordered_arrays"], [78, 2, 1, "", "slice_keys"], [78, 2, 1, "", "slice_via_key"], [78, 2, 1, "", "sort_by_key"], [78, 2, 1, "", "split"], [78, 2, 1, "", "stop_gradients"], [78, 2, 1, "", "structural_diff"], [78, 2, 1, "", "to_device"], [78, 2, 1, "", "to_dict"], [78, 2, 1, "", "to_disk_as_hdf5"], [78, 2, 1, "", "to_disk_as_json"], [78, 2, 1, "", "to_disk_as_pickled"], [78, 2, 1, "", "to_flat_list"], [78, 2, 1, "", "to_iterator"], [78, 2, 1, "", "to_iterator_keys"], [78, 2, 1, "", "to_iterator_values"], [78, 2, 1, "", "to_ivy"], [78, 2, 1, "", "to_jsonable"], [78, 2, 1, "", "to_list"], [78, 2, 1, "", "to_native"], [78, 2, 1, "", "to_numpy"], [78, 2, 1, "", "to_raw"], [78, 2, 1, "", "trim_key"], [78, 2, 1, "", "try_kc"], [78, 2, 1, "", "unify"], [78, 2, 1, "", "unstack"], [78, 2, 1, "", "update_config"], [78, 2, 1, "", "vector_norm"], [78, 2, 1, "", "with_default_key_color"], [78, 2, 1, "", "with_entries_as_lists"], [78, 2, 1, "", "with_ivy_backend"], [78, 2, 1, "", "with_key_length_limit"], [78, 2, 1, "", "with_print_indent"], [78, 2, 1, "", "with_print_limit"], [78, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[80, 1, 1, "", "Container"]], "ivy.container.container.Container": [[80, 2, 1, "", "__add__"], [80, 2, 1, "", "__init__"], [80, 2, 1, "", "__radd__"], [80, 2, 1, "", "arange"], [80, 2, 1, "", "arg_info"], [80, 2, 1, "", "arg_names"], [80, 2, 1, "", "argmax"], [80, 2, 1, "", "argmin"], [80, 2, 1, "", "array"], [80, 2, 1, "", "array_equal"], [80, 2, 1, "", "arrays_equal"], [80, 2, 1, "", "as_ivy_dev"], [80, 2, 1, "", "as_ivy_dtype"], [80, 2, 1, "", "as_native_dev"], [80, 2, 1, "", "as_native_dtype"], [80, 2, 1, "", "asarray"], [80, 2, 1, "", "assert_supports_inplace"], [80, 2, 1, "", "cache_fn"], [80, 2, 1, "", "clear_mem_on_dev"], [80, 2, 1, "", "clip_matrix_norm"], [80, 2, 1, "", "closest_valid_dtype"], [80, 2, 1, "", "container_types"], [80, 2, 1, "", "conv1d"], [80, 2, 1, "", "conv1d_transpose"], [80, 2, 1, "", "conv2d"], [80, 2, 1, "", "conv2d_transpose"], [80, 2, 1, "", "conv3d"], [80, 2, 1, "", "conv3d_transpose"], [80, 2, 1, "", "copy_array"], [80, 2, 1, "", "cross"], [80, 2, 1, "", "cumprod"], [80, 2, 1, "", "cumsum"], [80, 2, 1, "", "current_backend"], [80, 2, 1, "", "current_backend_str"], [80, 2, 1, "", "default"], [80, 2, 1, "", "default_device"], [80, 2, 1, "", "default_dtype"], [80, 2, 1, "", "default_float_dtype"], [80, 2, 1, "", "default_int_dtype"], [80, 2, 1, "", "default_uint_dtype"], [80, 2, 1, "", "det"], [80, 2, 1, "", "dev_util"], [80, 2, 1, "", "diagonal"], [80, 2, 1, "", "dropout"], [80, 2, 1, "", "dtype_bits"], [80, 2, 1, "", "eigh"], [80, 2, 1, "", "eigvalsh"], [80, 2, 1, "", "empty"], [80, 2, 1, "", "execute_with_gradients"], [80, 2, 1, "", "exists"], [80, 2, 1, "", "eye"], [80, 2, 1, "", "floormod"], [80, 2, 1, "", "fourier_encode"], [80, 2, 1, "", "full"], [80, 2, 1, "", "function_supported_dtypes"], [80, 2, 1, "", "function_unsupported_dtypes"], [80, 2, 1, "", "get_all_arrays_in_memory"], [80, 2, 1, "", "get_all_ivy_arrays_on_dev"], [80, 2, 1, "", "get_min_base"], [80, 2, 1, "", "get_min_denominator"], [80, 2, 1, "", "get_nestable_mode"], [80, 2, 1, "", "get_num_dims"], [80, 2, 1, "", "get_referrers_recursive"], [80, 2, 1, "", "gpu_is_available"], [80, 2, 1, "", "handle_nestable"], [80, 2, 1, "", "handle_out_argument"], [80, 2, 1, "", "indices_where"], [80, 2, 1, "", "infer_device"], [80, 2, 1, "", "infer_dtype"], [80, 2, 1, "", "inplace_arrays_supported"], [80, 2, 1, "", "inplace_decrement"], [80, 2, 1, "", "inplace_increment"], [80, 2, 1, "", "inplace_variables_supported"], [80, 2, 1, "", "inputs_to_native_arrays"], [80, 2, 1, "", "inv"], [80, 2, 1, "", "invalid_dtype"], [80, 2, 1, "", "is_ivy_container"], [80, 2, 1, "", "linear"], [80, 2, 1, "", "linspace"], [80, 2, 1, "", "logspace"], [80, 2, 1, "", "lstm_update"], [80, 2, 1, "", "match_kwargs"], [80, 2, 1, "", "matrix_power"], [80, 2, 1, "", "matrix_rank"], [80, 2, 1, "", "matrix_transpose"], [80, 2, 1, "", "multi_head_attention"], [80, 2, 1, "", "multinomial"], [80, 2, 1, "", "multiprocessing"], [80, 2, 1, "", "nonzero"], [80, 2, 1, "", "num_arrays_in_memory"], [80, 2, 1, "", "num_cpu_cores"], [80, 2, 1, "", "num_gpus"], [80, 2, 1, "", "num_ivy_arrays_on_dev"], [80, 2, 1, "", "one_hot"], [80, 2, 1, "", "ones"], [80, 2, 1, "", "outer"], [80, 2, 1, "", "outputs_to_ivy_arrays"], [80, 2, 1, "", "percent_used_mem_on_dev"], [80, 2, 1, "", "pinv"], [80, 2, 1, "", "print_all_arrays_in_memory"], [80, 2, 1, "", "print_all_ivy_arrays_on_dev"], [80, 2, 1, "", "promote_types"], [80, 2, 1, "", "qr"], [80, 2, 1, "", "queue_timeout"], [80, 2, 1, "", "randint"], [80, 2, 1, "", "random_normal"], [80, 2, 1, "", "scaled_dot_product_attention"], [80, 2, 1, "", "scatter_flat"], [80, 2, 1, "", "scatter_nd"], [80, 2, 1, "", "seed"], [80, 2, 1, "", "set_default_device"], [80, 2, 1, "", "set_default_dtype"], [80, 2, 1, "", "set_default_float_dtype"], [80, 2, 1, "", "set_default_int_dtype"], [80, 2, 1, "", "set_default_uint_dtype"], [80, 2, 1, "", "set_min_base"], [80, 2, 1, "", "set_min_denominator"], [80, 2, 1, "", "set_nestable_mode"], [80, 2, 1, "", "set_queue_timeout"], [80, 2, 1, "", "set_shape_array_mode"], [80, 2, 1, "", "set_split_factor"], [80, 2, 1, "", "set_tmp_dir"], [80, 2, 1, "", "set_with_grads"], [80, 2, 1, "", "shape_array_mode"], [80, 2, 1, "", "slogdet"], [80, 2, 1, "", "solve"], [80, 2, 1, "", "split_factor"], [80, 2, 1, "", "split_func_call"], [80, 2, 1, "", "stable_divide"], [80, 2, 1, "", "stable_pow"], [80, 2, 1, "", "static_arg_info"], [80, 2, 1, "", "static_arg_names"], [80, 2, 1, "", "static_argmax"], [80, 2, 1, "", "static_argmin"], [80, 2, 1, "", "static_array"], [80, 2, 1, "", "static_array_equal"], [80, 2, 1, "", "static_arrays_equal"], [80, 2, 1, "", "static_as_ivy_dev"], [80, 2, 1, "", "static_as_ivy_dtype"], [80, 2, 1, "", "static_as_native_dev"], [80, 2, 1, "", "static_as_native_dtype"], [80, 2, 1, "", "static_assert_supports_inplace"], [80, 2, 1, "", "static_cache_fn"], [80, 2, 1, "", "static_clear_mem_on_dev"], [80, 2, 1, "", "static_clip_matrix_norm"], [80, 2, 1, "", "static_clip_vector_norm"], [80, 2, 1, "", "static_closest_valid_dtype"], [80, 2, 1, "", "static_concat"], [80, 2, 1, "", "static_constant_pad"], [80, 2, 1, "", "static_container_types"], [80, 2, 1, "", "static_conv1d"], [80, 2, 1, "", "static_conv1d_transpose"], [80, 2, 1, "", "static_conv2d"], [80, 2, 1, "", "static_conv2d_transpose"], [80, 2, 1, "", "static_conv3d"], [80, 2, 1, "", "static_conv3d_transpose"], [80, 2, 1, "", "static_copy_array"], [80, 2, 1, "", "static_cross"], [80, 2, 1, "", "static_cumprod"], [80, 2, 1, "", "static_cumsum"], [80, 2, 1, "", "static_current_backend"], [80, 2, 1, "", "static_current_backend_str"], [80, 2, 1, "", "static_default"], [80, 2, 1, "", "static_default_device"], [80, 2, 1, "", "static_default_dtype"], [80, 2, 1, "", "static_default_int_dtype"], [80, 2, 1, "", "static_default_uint_dtype"], [80, 2, 1, "", "static_det"], [80, 2, 1, "", "static_dev_util"], [80, 2, 1, "", "static_diagonal"], [80, 2, 1, "", "static_dropout"], [80, 2, 1, "", "static_dtype_bits"], [80, 2, 1, "", "static_eigh"], [80, 2, 1, "", "static_eigvalsh"], [80, 2, 1, "", "static_einops_rearrange"], [80, 2, 1, "", "static_einops_reduce"], [80, 2, 1, "", "static_einops_repeat"], [80, 2, 1, "", "static_einsum"], [80, 2, 1, "", "static_empty"], [80, 2, 1, "", "static_exists"], [80, 2, 1, "", "static_expand_dims"], [80, 2, 1, "", "static_flip"], [80, 2, 1, "", "static_floormod"], [80, 2, 1, "", "static_fourier_encode"], [80, 2, 1, "", "static_full"], [80, 2, 1, "", "static_gather"], [80, 2, 1, "", "static_get_all_arrays_in_memory"], [80, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [80, 2, 1, "", "static_get_min_base"], [80, 2, 1, "", "static_get_min_denominator"], [80, 2, 1, "", "static_get_nestable_mode"], [80, 2, 1, "", "static_get_num_dims"], [80, 2, 1, "", "static_get_referrers_recursive"], [80, 2, 1, "", "static_gpu_is_available"], [80, 2, 1, "", "static_handle_nestable"], [80, 2, 1, "", "static_handle_out_argument"], [80, 2, 1, "", "static_has_nans"], [80, 2, 1, "", "static_indices_where"], [80, 2, 1, "", "static_infer_device"], [80, 2, 1, "", "static_infer_dtype"], [80, 2, 1, "", "static_inplace_arrays_supported"], [80, 2, 1, "", "static_inplace_decrement"], [80, 2, 1, "", "static_inplace_increment"], [80, 2, 1, "", "static_inplace_update"], [80, 2, 1, "", "static_inplace_variables_supported"], [80, 2, 1, "", "static_inputs_to_native_arrays"], [80, 2, 1, "", "static_inv"], [80, 2, 1, "", "static_invalid_dtype"], [80, 2, 1, "", "static_is_array"], [80, 2, 1, "", "static_is_ivy_array"], [80, 2, 1, "", "static_is_ivy_container"], [80, 2, 1, "", "static_is_native_array"], [80, 2, 1, "", "static_linear"], [80, 2, 1, "", "static_lstm_update"], [80, 2, 1, "", "static_match_kwargs"], [80, 2, 1, "", "static_matmul"], [80, 2, 1, "", "static_matrix_norm"], [80, 2, 1, "", "static_matrix_power"], [80, 2, 1, "", "static_matrix_rank"], [80, 2, 1, "", "static_matrix_transpose"], [80, 2, 1, "", "static_max"], [80, 2, 1, "", "static_maximum"], [80, 2, 1, "", "static_mean"], [80, 2, 1, "", "static_min"], [80, 2, 1, "", "static_minimum"], [80, 2, 1, "", "static_multi_head_attention"], [80, 2, 1, "", "static_multinomial"], [80, 2, 1, "", "static_multiprocessing"], [80, 2, 1, "", "static_nonzero"], [80, 2, 1, "", "static_num_arrays_in_memory"], [80, 2, 1, "", "static_num_cpu_cores"], [80, 2, 1, "", "static_num_gpus"], [80, 2, 1, "", "static_num_ivy_arrays_on_dev"], [80, 2, 1, "", "static_one_hot"], [80, 2, 1, "", "static_outer"], [80, 2, 1, "", "static_outputs_to_ivy_arrays"], [80, 2, 1, "", "static_percent_used_mem_on_dev"], [80, 2, 1, "", "static_permute_dims"], [80, 2, 1, "", "static_pinv"], [80, 2, 1, "", "static_print_all_arrays_in_memory"], [80, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [80, 2, 1, "", "static_prod"], [80, 2, 1, "", "static_promote_types"], [80, 2, 1, "", "static_qr"], [80, 2, 1, "", "static_queue_timeout"], [80, 2, 1, "", "static_random_normal"], [80, 2, 1, "", "static_reshape"], [80, 2, 1, "", "static_scaled_dot_product_attention"], [80, 2, 1, "", "static_scatter_flat"], [80, 2, 1, "", "static_scatter_nd"], [80, 2, 1, "", "static_seed"], [80, 2, 1, "", "static_set_default_device"], [80, 2, 1, "", "static_set_default_dtype"], [80, 2, 1, "", "static_set_default_float_dtype"], [80, 2, 1, "", "static_set_default_int_dtype"], [80, 2, 1, "", "static_set_default_uint_dtype"], [80, 2, 1, "", "static_set_min_base"], [80, 2, 1, "", "static_set_min_denominator"], [80, 2, 1, "", "static_set_nestable_mode"], [80, 2, 1, "", "static_set_queue_timeout"], [80, 2, 1, "", "static_set_shape_array_mode"], [80, 2, 1, "", "static_set_split_factor"], [80, 2, 1, "", "static_set_tmp_dir"], [80, 2, 1, "", "static_set_with_grads"], [80, 2, 1, "", "static_shape"], [80, 2, 1, "", "static_shape_array_mode"], [80, 2, 1, "", "static_shuffle"], [80, 2, 1, "", "static_slogdet"], [80, 2, 1, "", "static_solve"], [80, 2, 1, "", "static_split"], [80, 2, 1, "", "static_split_factor"], [80, 2, 1, "", "static_split_func_call"], [80, 2, 1, "", "static_squeeze"], [80, 2, 1, "", "static_stable_divide"], [80, 2, 1, "", "static_stable_pow"], [80, 2, 1, "", "static_stack"], [80, 2, 1, "", "static_std"], [80, 2, 1, "", "static_stop_gradient"], [80, 2, 1, "", "static_sum"], [80, 2, 1, "", "static_supports_inplace"], [80, 2, 1, "", "static_svd"], [80, 2, 1, "", "static_svdvals"], [80, 2, 1, "", "static_swapaxes"], [80, 2, 1, "", "static_tensordot"], [80, 2, 1, "", "static_tile"], [80, 2, 1, "", "static_tmp_dir"], [80, 2, 1, "", "static_to_container_and_back"], [80, 2, 1, "", "static_to_ivy_shape"], [80, 2, 1, "", "static_to_list"], [80, 2, 1, "", "static_to_native_arrays_and_back"], [80, 2, 1, "", "static_to_native_shape"], [80, 2, 1, "", "static_to_scalar"], [80, 2, 1, "", "static_total_mem_on_dev"], [80, 2, 1, "", "static_tpu_is_available"], [80, 2, 1, "", "static_trace"], [80, 2, 1, "", "static_try_else_none"], [80, 2, 1, "", "static_type_promote_arrays"], [80, 2, 1, "", "static_unset_default_device"], [80, 2, 1, "", "static_unset_default_dtype"], [80, 2, 1, "", "static_unset_default_float_dtype"], [80, 2, 1, "", "static_unset_default_int_dtype"], [80, 2, 1, "", "static_unset_default_uint_dtype"], [80, 2, 1, "", "static_unset_nestable_mode"], [80, 2, 1, "", "static_unset_shape_array_mode"], [80, 2, 1, "", "static_unset_with_grads"], [80, 2, 1, "", "static_unstack"], [80, 2, 1, "", "static_used_mem_on_dev"], [80, 2, 1, "", "static_valid_dtype"], [80, 2, 1, "", "static_value_is_nan"], [80, 2, 1, "", "static_var"], [80, 2, 1, "", "static_variable"], [80, 2, 1, "", "static_variable_data"], [80, 2, 1, "", "static_vecdot"], [80, 2, 1, "", "static_vector_norm"], [80, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [80, 2, 1, "", "static_where"], [80, 2, 1, "", "static_with_grads"], [80, 2, 1, "", "static_zero_pad"], [80, 2, 1, "", "stop_gradient"], [80, 2, 1, "", "supports_inplace"], [80, 2, 1, "", "svd"], [80, 2, 1, "", "svdvals"], [80, 2, 1, "", "tensordot"], [80, 2, 1, "", "tmp_dir"], [80, 2, 1, "", "to_container_and_back"], [80, 2, 1, "", "to_ivy_shape"], [80, 2, 1, "", "to_native_arrays_and_back"], [80, 2, 1, "", "to_native_shape"], [80, 2, 1, "", "to_scalar"], [80, 2, 1, "", "total_mem_on_dev"], [80, 2, 1, "", "tpu_is_available"], [80, 2, 1, "", "trace"], [80, 2, 1, "", "try_else_none"], [80, 2, 1, "", "type_promote_arrays"], [80, 2, 1, "", "unset_default_device"], [80, 2, 1, "", "unset_default_dtype"], [80, 2, 1, "", "unset_default_float_dtype"], [80, 2, 1, "", "unset_default_int_dtype"], [80, 2, 1, "", "unset_default_uint_dtype"], [80, 2, 1, "", "unset_nestable_mode"], [80, 2, 1, "", "unset_shape_array_mode"], [80, 2, 1, "", "unset_with_grads"], [80, 2, 1, "", "used_mem_on_dev"], [80, 2, 1, "", "valid_dtype"], [80, 2, 1, "", "value_is_nan"], [80, 2, 1, "", "variable"], [80, 2, 1, "", "variable_data"], [80, 2, 1, "", "vecdot"], [80, 2, 1, "", "vector_to_skew_symmetric_matrix"], [80, 2, 1, "", "where"], [80, 2, 1, "", "with_grads"], [80, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[405, 4, 1, "", "abs"], [410, 4, 1, "", "acos"], [415, 4, 1, "", "acosh"], [775, 4, 1, "", "adam_step"], [779, 4, 1, "", "adam_update"], [420, 4, 1, "", "add"], [1092, 4, 1, "", "all"], [689, 4, 1, "", "all_equal"], [1097, 4, 1, "", "any"], [1048, 4, 1, "", "argsort"], [425, 4, 1, "", "asin"], [430, 4, 1, "", "asinh"], [285, 4, 1, "", "astype"], [435, 4, 1, "", "atan"], [440, 4, 1, "", "atan2"], [445, 4, 1, "", "atanh"], [905, 4, 1, "", "binary_cross_entropy"], [450, 4, 1, "", "bitwise_and"], [455, 4, 1, "", "bitwise_invert"], [460, 4, 1, "", "bitwise_left_shift"], [465, 4, 1, "", "bitwise_or"], [470, 4, 1, "", "bitwise_right_shift"], [475, 4, 1, "", "bitwise_xor"], [290, 4, 1, "", "broadcast_arrays"], [295, 4, 1, "", "broadcast_to"], [300, 4, 1, "", "can_cast"], [480, 4, 1, "", "ceil"], [833, 4, 1, "", "cholesky"], [921, 4, 1, "", "clip"], [700, 4, 1, "", "clip_vector_norm"], [926, 4, 1, "", "concat"], [930, 4, 1, "", "constant_pad"], [485, 4, 1, "", "cos"], [490, 4, 1, "", "cosh"], [910, 4, 1, "", "cross_entropy"], [822, 4, 1, "", "depthwise_conv2d"], [378, 4, 1, "", "dev"], [495, 4, 1, "", "divide"], [312, 4, 1, "", "dtype"], [1059, 4, 1, "", "einsum"], [217, 4, 1, "", "empty_like"], [500, 4, 1, "", "equal"], [505, 4, 1, "", "erf"], [510, 4, 1, "", "exp"], [934, 4, 1, "", "expand_dims"], [515, 4, 1, "", "expm1"], [318, 4, 1, "", "finfo"], [938, 4, 1, "", "flip"], [520, 4, 1, "", "floor"], [525, 4, 1, "", "floor_divide"], [225, 4, 1, "", "from_dlpack"], [231, 4, 1, "", "full_like"], [717, 4, 1, "", "gather_nd"], [170, 4, 1, "", "gelu"], [786, 4, 1, "", "gradient_descent_update"], [530, 4, 1, "", "greater"], [535, 4, 1, "", "greater_equal"], [329, 4, 1, "", "iinfo"], [335, 4, 1, "", "is_bool_dtype"], [340, 4, 1, "", "is_float_dtype"], [345, 4, 1, "", "is_int_dtype"], [350, 4, 1, "", "is_uint_dtype"], [791, 4, 1, "", "is_variable"], [540, 4, 1, "", "isfinite"], [545, 4, 1, "", "isinf"], [550, 4, 1, "", "isnan"], [795, 4, 1, "", "lamb_update"], [799, 4, 1, "", "lars_update"], [1004, 4, 1, "", "layer_norm"], [175, 4, 1, "", "leaky_relu"], [555, 4, 1, "", "less"], [560, 4, 1, "", "less_equal"], [565, 4, 1, "", "log"], [570, 4, 1, "", "log10"], [575, 4, 1, "", "log1p"], [580, 4, 1, "", "log2"], [585, 4, 1, "", "logaddexp"], [590, 4, 1, "", "logical_and"], [595, 4, 1, "", "logical_not"], [600, 4, 1, "", "logical_or"], [605, 4, 1, "", "logical_xor"], [856, 4, 1, "", "matmul"], [1063, 4, 1, "", "max"], [1067, 4, 1, "", "mean"], [242, 4, 1, "", "meshgrid"], [1071, 4, 1, "", "min"], [612, 4, 1, "", "multiply"], [247, 4, 1, "", "native_array"], [617, 4, 1, "", "negative"], [622, 4, 1, "", "not_equal"], [255, 4, 1, "", "ones_like"], [803, 4, 1, "", "optimizer_update"], [942, 4, 1, "", "permute_dims"], [627, 4, 1, "", "positive"], [632, 4, 1, "", "pow"], [1075, 4, 1, "", "prod"], [1014, 4, 1, "", "random_uniform"], [180, 4, 1, "", "relu"], [637, 4, 1, "", "remainder"], [946, 4, 1, "", "repeat"], [951, 4, 1, "", "reshape"], [356, 4, 1, "", "result_type"], [955, 4, 1, "", "roll"], [642, 4, 1, "", "round"], [185, 4, 1, "", "sigmoid"], [647, 4, 1, "", "sign"], [652, 4, 1, "", "sin"], [657, 4, 1, "", "sinh"], [190, 4, 1, "", "softmax"], [195, 4, 1, "", "softplus"], [1053, 4, 1, "", "sort"], [915, 4, 1, "", "sparse_cross_entropy"], [662, 4, 1, "", "sqrt"], [667, 4, 1, "", "square"], [961, 4, 1, "", "squeeze"], [965, 4, 1, "", "stack"], [407, 4, 1, "", "static_abs"], [412, 4, 1, "", "static_acos"], [417, 4, 1, "", "static_acosh"], [777, 4, 1, "", "static_adam_step"], [781, 4, 1, "", "static_adam_update"], [422, 4, 1, "", "static_add"], [1094, 4, 1, "", "static_all"], [691, 4, 1, "", "static_all_equal"], [1099, 4, 1, "", "static_any"], [209, 4, 1, "", "static_arange"], [1050, 4, 1, "", "static_argsort"], [213, 4, 1, "", "static_asarray"], [427, 4, 1, "", "static_asin"], [432, 4, 1, "", "static_asinh"], [287, 4, 1, "", "static_astype"], [437, 4, 1, "", "static_atan"], [442, 4, 1, "", "static_atan2"], [447, 4, 1, "", "static_atanh"], [907, 4, 1, "", "static_binary_cross_entropy"], [452, 4, 1, "", "static_bitwise_and"], [457, 4, 1, "", "static_bitwise_invert"], [462, 4, 1, "", "static_bitwise_left_shift"], [467, 4, 1, "", "static_bitwise_or"], [472, 4, 1, "", "static_bitwise_right_shift"], [477, 4, 1, "", "static_bitwise_xor"], [292, 4, 1, "", "static_broadcast_arrays"], [297, 4, 1, "", "static_broadcast_to"], [302, 4, 1, "", "static_can_cast"], [482, 4, 1, "", "static_ceil"], [835, 4, 1, "", "static_cholesky"], [923, 4, 1, "", "static_clip"], [487, 4, 1, "", "static_cos"], [492, 4, 1, "", "static_cosh"], [912, 4, 1, "", "static_cross_entropy"], [307, 4, 1, "", "static_default_float_dtype"], [824, 4, 1, "", "static_depthwise_conv2d"], [380, 4, 1, "", "static_dev"], [497, 4, 1, "", "static_divide"], [314, 4, 1, "", "static_dtype"], [219, 4, 1, "", "static_empty_like"], [502, 4, 1, "", "static_equal"], [507, 4, 1, "", "static_erf"], [784, 4, 1, "", "static_execute_with_gradients"], [512, 4, 1, "", "static_exp"], [517, 4, 1, "", "static_expm1"], [222, 4, 1, "", "static_eye"], [320, 4, 1, "", "static_finfo"], [522, 4, 1, "", "static_floor"], [527, 4, 1, "", "static_floor_divide"], [227, 4, 1, "", "static_from_dlpack"], [233, 4, 1, "", "static_full_like"], [323, 4, 1, "", "static_function_supported_dtypes"], [326, 4, 1, "", "static_function_unsupported_dtypes"], [719, 4, 1, "", "static_gather_nd"], [172, 4, 1, "", "static_gelu"], [788, 4, 1, "", "static_gradient_descent_update"], [532, 4, 1, "", "static_greater"], [537, 4, 1, "", "static_greater_equal"], [331, 4, 1, "", "static_iinfo"], [337, 4, 1, "", "static_is_bool_dtype"], [342, 4, 1, "", "static_is_float_dtype"], [347, 4, 1, "", "static_is_int_dtype"], [352, 4, 1, "", "static_is_uint_dtype"], [793, 4, 1, "", "static_is_variable"], [542, 4, 1, "", "static_isfinite"], [547, 4, 1, "", "static_isinf"], [552, 4, 1, "", "static_isnan"], [797, 4, 1, "", "static_lamb_update"], [801, 4, 1, "", "static_lars_update"], [1006, 4, 1, "", "static_layer_norm"], [177, 4, 1, "", "static_leaky_relu"], [557, 4, 1, "", "static_less"], [562, 4, 1, "", "static_less_equal"], [236, 4, 1, "", "static_linspace"], [567, 4, 1, "", "static_log"], [572, 4, 1, "", "static_log10"], [577, 4, 1, "", "static_log1p"], [582, 4, 1, "", "static_log2"], [587, 4, 1, "", "static_logaddexp"], [592, 4, 1, "", "static_logical_and"], [597, 4, 1, "", "static_logical_not"], [602, 4, 1, "", "static_logical_or"], [607, 4, 1, "", "static_logical_xor"], [239, 4, 1, "", "static_logspace"], [244, 4, 1, "", "static_meshgrid"], [614, 4, 1, "", "static_multiply"], [249, 4, 1, "", "static_native_array"], [619, 4, 1, "", "static_negative"], [624, 4, 1, "", "static_not_equal"], [252, 4, 1, "", "static_ones"], [257, 4, 1, "", "static_ones_like"], [805, 4, 1, "", "static_optimizer_update"], [629, 4, 1, "", "static_positive"], [634, 4, 1, "", "static_pow"], [1011, 4, 1, "", "static_randint"], [1016, 4, 1, "", "static_random_uniform"], [182, 4, 1, "", "static_relu"], [639, 4, 1, "", "static_remainder"], [948, 4, 1, "", "static_repeat"], [358, 4, 1, "", "static_result_type"], [957, 4, 1, "", "static_roll"], [644, 4, 1, "", "static_round"], [187, 4, 1, "", "static_sigmoid"], [649, 4, 1, "", "static_sign"], [654, 4, 1, "", "static_sin"], [659, 4, 1, "", "static_sinh"], [192, 4, 1, "", "static_softmax"], [197, 4, 1, "", "static_softplus"], [1055, 4, 1, "", "static_sort"], [917, 4, 1, "", "static_sparse_cross_entropy"], [664, 4, 1, "", "static_sqrt"], [669, 4, 1, "", "static_square"], [671, 4, 1, "", "static_subtract"], [676, 4, 1, "", "static_tan"], [199, 4, 1, "", "static_tanh"], [394, 4, 1, "", "static_to_device"], [761, 4, 1, "", "static_to_numpy"], [259, 4, 1, "", "static_tril"], [264, 4, 1, "", "static_triu"], [682, 4, 1, "", "static_trunc"], [1026, 4, 1, "", "static_unique_all"], [1031, 4, 1, "", "static_unique_counts"], [1036, 4, 1, "", "static_unique_inverse"], [1041, 4, 1, "", "static_unique_values"], [269, 4, 1, "", "static_zeros"], [272, 4, 1, "", "static_zeros_like"], [1079, 4, 1, "", "std"], [673, 4, 1, "", "subtract"], [1083, 4, 1, "", "sum"], [969, 4, 1, "", "swapaxes"], [678, 4, 1, "", "tan"], [201, 4, 1, "", "tanh"], [973, 4, 1, "", "tile"], [396, 4, 1, "", "to_device"], [763, 4, 1, "", "to_numpy"], [261, 4, 1, "", "tril"], [266, 4, 1, "", "triu"], [684, 4, 1, "", "trunc"], [1028, 4, 1, "", "unique_all"], [1033, 4, 1, "", "unique_counts"], [1038, 4, 1, "", "unique_inverse"], [1043, 4, 1, "", "unique_values"], [1087, 4, 1, "", "var"], [977, 4, 1, "", "zero_pad"], [274, 4, 1, "", "zeros_like"]], "ivy.container.creation": [[82, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[82, 2, 1, "", "empty_like"], [82, 2, 1, "", "from_dlpack"], [82, 2, 1, "", "full_like"], [82, 2, 1, "", "meshgrid"], [82, 2, 1, "", "native_array"], [82, 2, 1, "", "ones_like"], [82, 2, 1, "", "static_arange"], [82, 2, 1, "", "static_asarray"], [82, 2, 1, "", "static_empty_like"], [82, 2, 1, "", "static_eye"], [82, 2, 1, "", "static_from_dlpack"], [82, 2, 1, "", "static_full_like"], [82, 2, 1, "", "static_linspace"], [82, 2, 1, "", "static_logspace"], [82, 2, 1, "", "static_meshgrid"], [82, 2, 1, "", "static_native_array"], [82, 2, 1, "", "static_ones"], [82, 2, 1, "", "static_ones_like"], [82, 2, 1, "", "static_tril"], [82, 2, 1, "", "static_triu"], [82, 2, 1, "", "static_zeros"], [82, 2, 1, "", "static_zeros_like"], [82, 2, 1, "", "tril"], [82, 2, 1, "", "triu"], [82, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[84, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[84, 2, 1, "", "astype"], [84, 2, 1, "", "broadcast_arrays"], [84, 2, 1, "", "broadcast_to"], [84, 2, 1, "", "can_cast"], [84, 2, 1, "", "dtype"], [84, 2, 1, "", "finfo"], [84, 2, 1, "", "iinfo"], [84, 2, 1, "", "is_bool_dtype"], [84, 2, 1, "", "is_float_dtype"], [84, 2, 1, "", "is_int_dtype"], [84, 2, 1, "", "is_uint_dtype"], [84, 2, 1, "", "result_type"], [84, 2, 1, "", "static_astype"], [84, 2, 1, "", "static_broadcast_arrays"], [84, 2, 1, "", "static_broadcast_to"], [84, 2, 1, "", "static_can_cast"], [84, 2, 1, "", "static_default_float_dtype"], [84, 2, 1, "", "static_dtype"], [84, 2, 1, "", "static_finfo"], [84, 2, 1, "", "static_function_supported_dtypes"], [84, 2, 1, "", "static_function_unsupported_dtypes"], [84, 2, 1, "", "static_iinfo"], [84, 2, 1, "", "static_is_bool_dtype"], [84, 2, 1, "", "static_is_float_dtype"], [84, 2, 1, "", "static_is_int_dtype"], [84, 2, 1, "", "static_is_uint_dtype"], [84, 2, 1, "", "static_result_type"]], "ivy.container.device": [[86, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[86, 2, 1, "", "dev"], [86, 2, 1, "", "static_dev"], [86, 2, 1, "", "static_to_device"], [86, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[88, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[88, 2, 1, "", "abs"], [88, 2, 1, "", "acos"], [88, 2, 1, "", "acosh"], [88, 2, 1, "", "add"], [88, 2, 1, "", "asin"], [88, 2, 1, "", "asinh"], [88, 2, 1, "", "atan"], [88, 2, 1, "", "atan2"], [88, 2, 1, "", "atanh"], [88, 2, 1, "", "bitwise_and"], [88, 2, 1, "", "bitwise_invert"], [88, 2, 1, "", "bitwise_left_shift"], [88, 2, 1, "", "bitwise_or"], [88, 2, 1, "", "bitwise_right_shift"], [88, 2, 1, "", "bitwise_xor"], [88, 2, 1, "", "ceil"], [88, 2, 1, "", "cos"], [88, 2, 1, "", "cosh"], [88, 2, 1, "", "divide"], [88, 2, 1, "", "equal"], [88, 2, 1, "", "erf"], [88, 2, 1, "", "exp"], [88, 2, 1, "", "expm1"], [88, 2, 1, "", "floor"], [88, 2, 1, "", "floor_divide"], [88, 2, 1, "", "greater"], [88, 2, 1, "", "greater_equal"], [88, 2, 1, "", "isfinite"], [88, 2, 1, "", "isinf"], [88, 2, 1, "", "isnan"], [88, 2, 1, "", "less"], [88, 2, 1, "", "less_equal"], [88, 2, 1, "", "log"], [88, 2, 1, "", "log10"], [88, 2, 1, "", "log1p"], [88, 2, 1, "", "log2"], [88, 2, 1, "", "logaddexp"], [88, 2, 1, "", "logical_and"], [88, 2, 1, "", "logical_not"], [88, 2, 1, "", "logical_or"], [88, 2, 1, "", "logical_xor"], [88, 2, 1, "", "multiply"], [88, 2, 1, "", "negative"], [88, 2, 1, "", "not_equal"], [88, 2, 1, "", "positive"], [88, 2, 1, "", "pow"], [88, 2, 1, "", "remainder"], [88, 2, 1, "", "round"], [88, 2, 1, "", "sign"], [88, 2, 1, "", "sin"], [88, 2, 1, "", "sinh"], [88, 2, 1, "", "sqrt"], [88, 2, 1, "", "square"], [88, 2, 1, "", "static_abs"], [88, 2, 1, "", "static_acos"], [88, 2, 1, "", "static_acosh"], [88, 2, 1, "", "static_add"], [88, 2, 1, "", "static_asin"], [88, 2, 1, "", "static_asinh"], [88, 2, 1, "", "static_atan"], [88, 2, 1, "", "static_atan2"], [88, 2, 1, "", "static_atanh"], [88, 2, 1, "", "static_bitwise_and"], [88, 2, 1, "", "static_bitwise_invert"], [88, 2, 1, "", "static_bitwise_left_shift"], [88, 2, 1, "", "static_bitwise_or"], [88, 2, 1, "", "static_bitwise_right_shift"], [88, 2, 1, "", "static_bitwise_xor"], [88, 2, 1, "", "static_ceil"], [88, 2, 1, "", "static_cos"], [88, 2, 1, "", "static_cosh"], [88, 2, 1, "", "static_divide"], [88, 2, 1, "", "static_equal"], [88, 2, 1, "", "static_erf"], [88, 2, 1, "", "static_exp"], [88, 2, 1, "", "static_expm1"], [88, 2, 1, "", "static_floor"], [88, 2, 1, "", "static_floor_divide"], [88, 2, 1, "", "static_greater"], [88, 2, 1, "", "static_greater_equal"], [88, 2, 1, "", "static_isfinite"], [88, 2, 1, "", "static_isinf"], [88, 2, 1, "", "static_isnan"], [88, 2, 1, "", "static_less"], [88, 2, 1, "", "static_less_equal"], [88, 2, 1, "", "static_log"], [88, 2, 1, "", "static_log10"], [88, 2, 1, "", "static_log1p"], [88, 2, 1, "", "static_log2"], [88, 2, 1, "", "static_logaddexp"], [88, 2, 1, "", "static_logical_and"], [88, 2, 1, "", "static_logical_not"], [88, 2, 1, "", "static_logical_or"], [88, 2, 1, "", "static_logical_xor"], [88, 2, 1, "", "static_multiply"], [88, 2, 1, "", "static_negative"], [88, 2, 1, "", "static_not_equal"], [88, 2, 1, "", "static_positive"], [88, 2, 1, "", "static_pow"], [88, 2, 1, "", "static_remainder"], [88, 2, 1, "", "static_round"], [88, 2, 1, "", "static_sign"], [88, 2, 1, "", "static_sin"], [88, 2, 1, "", "static_sinh"], [88, 2, 1, "", "static_sqrt"], [88, 2, 1, "", "static_square"], [88, 2, 1, "", "static_subtract"], [88, 2, 1, "", "static_tan"], [88, 2, 1, "", "static_tanh"], [88, 2, 1, "", "static_trunc"], [88, 2, 1, "", "subtract"], [88, 2, 1, "", "tan"], [88, 2, 1, "", "tanh"], [88, 2, 1, "", "trunc"]], "ivy.container.general": [[90, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[90, 2, 1, "", "all_equal"], [90, 2, 1, "", "clip_vector_norm"], [90, 2, 1, "", "gather_nd"], [90, 2, 1, "", "static_all_equal"], [90, 2, 1, "", "static_gather_nd"], [90, 2, 1, "", "static_to_numpy"], [90, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[92, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[92, 2, 1, "", "adam_step"], [92, 2, 1, "", "adam_update"], [92, 2, 1, "", "gradient_descent_update"], [92, 2, 1, "", "is_variable"], [92, 2, 1, "", "lamb_update"], [92, 2, 1, "", "lars_update"], [92, 2, 1, "", "optimizer_update"], [92, 2, 1, "", "static_adam_step"], [92, 2, 1, "", "static_adam_update"], [92, 2, 1, "", "static_execute_with_gradients"], [92, 2, 1, "", "static_gradient_descent_update"], [92, 2, 1, "", "static_is_variable"], [92, 2, 1, "", "static_lamb_update"], [92, 2, 1, "", "static_lars_update"], [92, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[94, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[96, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[96, 2, 1, "", "depthwise_conv2d"], [96, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[98, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[98, 2, 1, "", "cholesky"], [98, 2, 1, "", "matmul"], [98, 2, 1, "", "static_cholesky"]], "ivy.container.losses": [[100, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[100, 2, 1, "", "binary_cross_entropy"], [100, 2, 1, "", "cross_entropy"], [100, 2, 1, "", "sparse_cross_entropy"], [100, 2, 1, "", "static_binary_cross_entropy"], [100, 2, 1, "", "static_cross_entropy"], [100, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[102, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[102, 2, 1, "", "clip"], [102, 2, 1, "", "concat"], [102, 2, 1, "", "constant_pad"], [102, 2, 1, "", "expand_dims"], [102, 2, 1, "", "flip"], [102, 2, 1, "", "permute_dims"], [102, 2, 1, "", "repeat"], [102, 2, 1, "", "reshape"], [102, 2, 1, "", "roll"], [102, 2, 1, "", "squeeze"], [102, 2, 1, "", "stack"], [102, 2, 1, "", "static_clip"], [102, 2, 1, "", "static_repeat"], [102, 2, 1, "", "static_roll"], [102, 2, 1, "", "swapaxes"], [102, 2, 1, "", "tile"], [102, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[104, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[104, 2, 1, "", "layer_norm"], [104, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[106, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[106, 2, 1, "", "random_uniform"], [106, 2, 1, "", "static_randint"], [106, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[108, 1, 1, "", "ContainerWithSearching"], [109, 4, 1, "", "argmax"], [110, 4, 1, "", "static_argmax"]], "ivy.container.set": [[112, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[112, 2, 1, "", "static_unique_all"], [112, 2, 1, "", "static_unique_counts"], [112, 2, 1, "", "static_unique_inverse"], [112, 2, 1, "", "static_unique_values"], [112, 2, 1, "", "unique_all"], [112, 2, 1, "", "unique_counts"], [112, 2, 1, "", "unique_inverse"], [112, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[114, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[114, 2, 1, "", "argsort"], [114, 2, 1, "", "sort"], [114, 2, 1, "", "static_argsort"], [114, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[116, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[116, 2, 1, "", "einsum"], [116, 2, 1, "", "max"], [116, 2, 1, "", "mean"], [116, 2, 1, "", "min"], [116, 2, 1, "", "prod"], [116, 2, 1, "", "std"], [116, 2, 1, "", "sum"], [116, 2, 1, "", "var"]], "ivy.container.utility": [[118, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[118, 2, 1, "", "all"], [118, 2, 1, "", "any"], [118, 2, 1, "", "static_all"], [118, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[120, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[158, 4, 1, "", "handle_nestable"], [159, 4, 1, "", "handle_out_argument"], [160, 4, 1, "", "infer_device"], [161, 4, 1, "", "infer_dtype"], [162, 4, 1, "", "inputs_to_ivy_arrays"], [163, 4, 1, "", "inputs_to_native_arrays"], [164, 4, 1, "", "outputs_to_ivy_arrays"], [165, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[167, 0, 0, "-", "activations"], [203, 0, 0, "-", "compilation"], [205, 0, 0, "-", "constants"], [206, 0, 0, "-", "creation"], [276, 0, 0, "-", "data_type"], [369, 0, 0, "-", "device"], [402, 0, 0, "-", "elementwise"], [686, 0, 0, "-", "general"], [771, 0, 0, "-", "gradients"], [813, 0, 0, "-", "layers"], [830, 0, 0, "-", "linear_algebra"], [902, 0, 0, "-", "losses"], [918, 0, 0, "-", "manipulation"], [979, 0, 0, "-", "meta"], [983, 0, 0, "-", "nest"], [1001, 0, 0, "-", "norms"], [1007, 0, 0, "-", "random"], [1019, 0, 0, "-", "searching"], [1024, 0, 0, "-", "set"], [1045, 0, 0, "-", "sorting"], [1056, 0, 0, "-", "statistical"], [1089, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[171, 4, 1, "", "gelu"], [176, 4, 1, "", "leaky_relu"], [181, 4, 1, "", "relu"], [186, 4, 1, "", "sigmoid"], [191, 4, 1, "", "softmax"], [196, 4, 1, "", "softplus"], [202, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[204, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[205, 5, 1, "", "e"], [205, 5, 1, "", "inf"], [205, 5, 1, "", "nan"], [205, 5, 1, "", "newaxis"], [205, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[208, 4, 1, "", "arange"], [206, 4, 1, "", "array"], [212, 4, 1, "", "asarray"], [214, 4, 1, "", "empty"], [218, 4, 1, "", "empty_like"], [221, 4, 1, "", "eye"], [226, 4, 1, "", "from_dlpack"], [228, 4, 1, "", "full"], [232, 4, 1, "", "full_like"], [235, 4, 1, "", "linspace"], [238, 4, 1, "", "logspace"], [243, 4, 1, "", "meshgrid"], [248, 4, 1, "", "native_array"], [251, 4, 1, "", "ones"], [256, 4, 1, "", "ones_like"], [262, 4, 1, "", "tril"], [267, 4, 1, "", "triu"], [270, 4, 1, "", "zeros"], [275, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[276, 1, 1, "", "DefaultDtype"], [276, 1, 1, "", "DefaultFloatDtype"], [276, 1, 1, "", "DefaultIntDtype"], [276, 1, 1, "", "DefaultUintDtype"], [281, 4, 1, "", "as_ivy_dtype"], [282, 4, 1, "", "as_native_dtype"], [286, 4, 1, "", "astype"], [291, 4, 1, "", "broadcast_arrays"], [296, 4, 1, "", "broadcast_to"], [301, 4, 1, "", "can_cast"], [303, 4, 1, "", "closest_valid_dtype"], [304, 4, 1, "", "default_dtype"], [306, 4, 1, "", "default_float_dtype"], [308, 4, 1, "", "default_int_dtype"], [309, 4, 1, "", "default_uint_dtype"], [313, 4, 1, "", "dtype"], [315, 4, 1, "", "dtype_bits"], [319, 4, 1, "", "finfo"], [322, 4, 1, "", "function_supported_dtypes"], [325, 4, 1, "", "function_unsupported_dtypes"], [330, 4, 1, "", "iinfo"], [332, 4, 1, "", "invalid_dtype"], [336, 4, 1, "", "is_bool_dtype"], [341, 4, 1, "", "is_float_dtype"], [346, 4, 1, "", "is_int_dtype"], [351, 4, 1, "", "is_uint_dtype"], [353, 4, 1, "", "promote_types"], [357, 4, 1, "", "result_type"], [359, 4, 1, "", "set_default_dtype"], [360, 4, 1, "", "set_default_float_dtype"], [361, 4, 1, "", "set_default_int_dtype"], [362, 4, 1, "", "set_default_uint_dtype"], [363, 4, 1, "", "type_promote_arrays"], [364, 4, 1, "", "unset_default_dtype"], [365, 4, 1, "", "unset_default_float_dtype"], [366, 4, 1, "", "unset_default_int_dtype"], [367, 4, 1, "", "unset_default_uint_dtype"], [368, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[276, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[276, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[276, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[276, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[369, 1, 1, "", "DefaultDevice"], [371, 1, 1, "", "Profiler"], [372, 4, 1, "", "as_ivy_dev"], [373, 4, 1, "", "as_native_dev"], [374, 4, 1, "", "clear_mem_on_dev"], [375, 4, 1, "", "default_device"], [379, 4, 1, "", "dev"], [381, 4, 1, "", "dev_util"], [382, 4, 1, "", "get_all_ivy_arrays_on_dev"], [383, 4, 1, "", "gpu_is_available"], [384, 4, 1, "", "num_cpu_cores"], [385, 4, 1, "", "num_gpus"], [386, 4, 1, "", "num_ivy_arrays_on_dev"], [387, 4, 1, "", "percent_used_mem_on_dev"], [388, 4, 1, "", "print_all_ivy_arrays_on_dev"], [389, 4, 1, "", "set_default_device"], [390, 4, 1, "", "set_split_factor"], [391, 4, 1, "", "split_factor"], [392, 4, 1, "", "split_func_call"], [397, 4, 1, "", "to_device"], [398, 4, 1, "", "total_mem_on_dev"], [399, 4, 1, "", "tpu_is_available"], [400, 4, 1, "", "unset_default_device"], [401, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[369, 2, 1, "", "__enter__"], [369, 2, 1, "", "__exit__"], [369, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[371, 2, 1, "", "__init__"], [371, 2, 1, "", "start"], [371, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[406, 4, 1, "", "abs"], [411, 4, 1, "", "acos"], [416, 4, 1, "", "acosh"], [421, 4, 1, "", "add"], [426, 4, 1, "", "asin"], [431, 4, 1, "", "asinh"], [436, 4, 1, "", "atan"], [441, 4, 1, "", "atan2"], [446, 4, 1, "", "atanh"], [451, 4, 1, "", "bitwise_and"], [456, 4, 1, "", "bitwise_invert"], [461, 4, 1, "", "bitwise_left_shift"], [466, 4, 1, "", "bitwise_or"], [471, 4, 1, "", "bitwise_right_shift"], [476, 4, 1, "", "bitwise_xor"], [481, 4, 1, "", "ceil"], [486, 4, 1, "", "cos"], [491, 4, 1, "", "cosh"], [496, 4, 1, "", "divide"], [501, 4, 1, "", "equal"], [506, 4, 1, "", "erf"], [511, 4, 1, "", "exp"], [516, 4, 1, "", "expm1"], [521, 4, 1, "", "floor"], [526, 4, 1, "", "floor_divide"], [531, 4, 1, "", "greater"], [536, 4, 1, "", "greater_equal"], [541, 4, 1, "", "isfinite"], [546, 4, 1, "", "isinf"], [551, 4, 1, "", "isnan"], [556, 4, 1, "", "less"], [561, 4, 1, "", "less_equal"], [566, 4, 1, "", "log"], [571, 4, 1, "", "log10"], [576, 4, 1, "", "log1p"], [581, 4, 1, "", "log2"], [586, 4, 1, "", "logaddexp"], [591, 4, 1, "", "logical_and"], [596, 4, 1, "", "logical_not"], [601, 4, 1, "", "logical_or"], [606, 4, 1, "", "logical_xor"], [608, 4, 1, "", "maximum"], [609, 4, 1, "", "minimum"], [613, 4, 1, "", "multiply"], [618, 4, 1, "", "negative"], [623, 4, 1, "", "not_equal"], [628, 4, 1, "", "positive"], [633, 4, 1, "", "pow"], [638, 4, 1, "", "remainder"], [643, 4, 1, "", "round"], [648, 4, 1, "", "sign"], [653, 4, 1, "", "sin"], [658, 4, 1, "", "sinh"], [663, 4, 1, "", "sqrt"], [668, 4, 1, "", "square"], [674, 4, 1, "", "subtract"], [679, 4, 1, "", "tan"], [680, 4, 1, "", "tanh"], [685, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[690, 4, 1, "", "all_equal"], [692, 4, 1, "", "arg_info"], [693, 4, 1, "", "arg_names"], [694, 4, 1, "", "array_equal"], [695, 4, 1, "", "arrays_equal"], [696, 4, 1, "", "assert_supports_inplace"], [697, 4, 1, "", "cache_fn"], [698, 4, 1, "", "clip_matrix_norm"], [701, 4, 1, "", "clip_vector_norm"], [702, 4, 1, "", "container_types"], [703, 4, 1, "", "copy_array"], [704, 4, 1, "", "cumprod"], [705, 4, 1, "", "cumsum"], [706, 4, 1, "", "current_backend_str"], [707, 4, 1, "", "default"], [708, 4, 1, "", "einops_rearrange"], [709, 4, 1, "", "einops_reduce"], [710, 4, 1, "", "einops_repeat"], [711, 4, 1, "", "exists"], [712, 4, 1, "", "floormod"], [713, 4, 1, "", "fourier_encode"], [714, 4, 1, "", "gather"], [718, 4, 1, "", "gather_nd"], [720, 4, 1, "", "get_all_arrays_in_memory"], [721, 4, 1, "", "get_min_base"], [722, 4, 1, "", "get_min_denominator"], [723, 4, 1, "", "get_nestable_mode"], [724, 4, 1, "", "get_num_dims"], [725, 4, 1, "", "get_referrers_recursive"], [726, 4, 1, "", "has_nans"], [727, 4, 1, "", "indices_where"], [728, 4, 1, "", "inplace_arrays_supported"], [729, 4, 1, "", "inplace_decrement"], [730, 4, 1, "", "inplace_increment"], [731, 4, 1, "", "inplace_update"], [732, 4, 1, "", "inplace_variables_supported"], [733, 4, 1, "", "is_array"], [734, 4, 1, "", "is_ivy_array"], [735, 4, 1, "", "is_ivy_container"], [736, 4, 1, "", "is_native_array"], [737, 4, 1, "", "match_kwargs"], [738, 4, 1, "", "multiprocessing"], [739, 4, 1, "", "num_arrays_in_memory"], [740, 4, 1, "", "one_hot"], [741, 4, 1, "", "print_all_arrays_in_memory"], [742, 4, 1, "", "queue_timeout"], [743, 4, 1, "", "scatter_flat"], [744, 4, 1, "", "scatter_nd"], [745, 4, 1, "", "set_min_base"], [746, 4, 1, "", "set_min_denominator"], [747, 4, 1, "", "set_nestable_mode"], [748, 4, 1, "", "set_queue_timeout"], [749, 4, 1, "", "set_shape_array_mode"], [750, 4, 1, "", "set_tmp_dir"], [751, 4, 1, "", "shape"], [752, 4, 1, "", "shape_array_mode"], [753, 4, 1, "", "stable_divide"], [754, 4, 1, "", "stable_pow"], [755, 4, 1, "", "supports_inplace"], [756, 4, 1, "", "tmp_dir"], [757, 4, 1, "", "to_ivy_shape"], [758, 4, 1, "", "to_list"], [759, 4, 1, "", "to_native_shape"], [764, 4, 1, "", "to_numpy"], [765, 4, 1, "", "to_scalar"], [766, 4, 1, "", "try_else_none"], [767, 4, 1, "", "unset_nestable_mode"], [768, 4, 1, "", "unset_shape_array_mode"], [769, 4, 1, "", "unstack"], [770, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[771, 1, 1, "", "GradientTracking"], [776, 4, 1, "", "adam_step"], [780, 4, 1, "", "adam_update"], [783, 4, 1, "", "execute_with_gradients"], [787, 4, 1, "", "gradient_descent_update"], [792, 4, 1, "", "is_variable"], [796, 4, 1, "", "lamb_update"], [800, 4, 1, "", "lars_update"], [804, 4, 1, "", "optimizer_update"], [806, 4, 1, "", "set_with_grads"], [807, 4, 1, "", "stop_gradient"], [808, 4, 1, "", "to_container_and_back"], [809, 4, 1, "", "unset_with_grads"], [810, 4, 1, "", "variable"], [811, 4, 1, "", "variable_data"], [812, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[771, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[814, 4, 1, "", "conv1d"], [815, 4, 1, "", "conv1d_transpose"], [816, 4, 1, "", "conv2d"], [817, 4, 1, "", "conv2d_transpose"], [818, 4, 1, "", "conv3d"], [819, 4, 1, "", "conv3d_transpose"], [823, 4, 1, "", "depthwise_conv2d"], [825, 4, 1, "", "dropout"], [826, 4, 1, "", "linear"], [827, 4, 1, "", "lstm_update"], [828, 4, 1, "", "multi_head_attention"], [829, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[834, 4, 1, "", "cholesky"], [838, 4, 1, "", "cross"], [841, 4, 1, "", "det"], [844, 4, 1, "", "diagonal"], [847, 4, 1, "", "eigh"], [850, 4, 1, "", "eigvalsh"], [853, 4, 1, "", "inv"], [857, 4, 1, "", "matmul"], [860, 4, 1, "", "matrix_norm"], [861, 4, 1, "", "matrix_power"], [864, 4, 1, "", "matrix_rank"], [867, 4, 1, "", "matrix_transpose"], [870, 4, 1, "", "outer"], [873, 4, 1, "", "pinv"], [876, 4, 1, "", "qr"], [877, 4, 1, "", "slogdet"], [880, 4, 1, "", "solve"], [883, 4, 1, "", "svd"], [886, 4, 1, "", "svdvals"], [889, 4, 1, "", "tensordot"], [892, 4, 1, "", "trace"], [895, 4, 1, "", "vecdot"], [898, 4, 1, "", "vector_norm"], [901, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[906, 4, 1, "", "binary_cross_entropy"], [911, 4, 1, "", "cross_entropy"], [916, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[922, 4, 1, "", "clip"], [927, 4, 1, "", "concat"], [931, 4, 1, "", "constant_pad"], [935, 4, 1, "", "expand_dims"], [939, 4, 1, "", "flip"], [943, 4, 1, "", "permute_dims"], [947, 4, 1, "", "repeat"], [952, 4, 1, "", "reshape"], [956, 4, 1, "", "roll"], [958, 4, 1, "", "split"], [962, 4, 1, "", "squeeze"], [966, 4, 1, "", "stack"], [970, 4, 1, "", "swapaxes"], [974, 4, 1, "", "tile"], [978, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[980, 4, 1, "", "fomaml_step"], [981, 4, 1, "", "maml_step"], [982, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[984, 4, 1, "", "all_nested_indices"], [985, 4, 1, "", "copy_nest"], [986, 4, 1, "", "index_nest"], [987, 4, 1, "", "insert_into_nest_at_index"], [988, 4, 1, "", "insert_into_nest_at_indices"], [989, 4, 1, "", "map"], [990, 4, 1, "", "map_nest_at_index"], [991, 4, 1, "", "map_nest_at_indices"], [992, 4, 1, "", "multi_index_nest"], [993, 4, 1, "", "nested_any"], [994, 4, 1, "", "nested_indices_where"], [995, 4, 1, "", "nested_map"], [996, 4, 1, "", "nested_multi_map"], [997, 4, 1, "", "prune_nest_at_index"], [998, 4, 1, "", "prune_nest_at_indices"], [999, 4, 1, "", "set_nest_at_index"], [1000, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1005, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1008, 4, 1, "", "multinomial"], [1010, 4, 1, "", "randint"], [1012, 4, 1, "", "random_normal"], [1015, 4, 1, "", "random_uniform"], [1017, 4, 1, "", "seed"], [1018, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1020, 4, 1, "", "argmax"], [1021, 4, 1, "", "argmin"], [1022, 4, 1, "", "nonzero"], [1023, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1029, 4, 1, "", "unique_all"], [1034, 4, 1, "", "unique_counts"], [1039, 4, 1, "", "unique_inverse"], [1044, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1049, 4, 1, "", "argsort"], [1054, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1060, 4, 1, "", "einsum"], [1064, 4, 1, "", "max"], [1068, 4, 1, "", "mean"], [1072, 4, 1, "", "min"], [1076, 4, 1, "", "prod"], [1080, 4, 1, "", "std"], [1084, 4, 1, "", "sum"], [1088, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1093, 4, 1, "", "all"], [1098, 4, 1, "", "any"]], "ivy.inspection": [[1104, 4, 1, "", "add_array_specs"], [1105, 4, 1, "", "fn_array_spec"]], "ivy.searching": [[1108, 4, 1, "", "argmax"], [1109, 4, 1, "", "argmin"], [1110, 4, 1, "", "nonzero"], [1111, 4, 1, "", "where"]], "ivy.stateful": [[1113, 0, 0, "-", "activations"], [1116, 0, 0, "-", "converters"], [1118, 0, 0, "-", "initializers"], [1127, 0, 0, "-", "layers"], [1139, 0, 0, "-", "module"], [1141, 0, 0, "-", "norms"], [1143, 0, 0, "-", "optimizers"], [1149, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1114, 1, 1, "", "GEGLU"], [1115, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1114, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1115, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1117, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1118, 1, 1, "", "Constant"], [1120, 1, 1, "", "FirstLayerSiren"], [1121, 1, 1, "", "GlorotUniform"], [1118, 1, 1, "", "KaimingNormal"], [1123, 1, 1, "", "Ones"], [1124, 1, 1, "", "Siren"], [1118, 1, 1, "", "Uniform"], [1126, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1118, 2, 1, "", "__init__"], [1118, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1120, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1121, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1118, 2, 1, "", "__init__"], [1118, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1123, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1124, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1118, 2, 1, "", "__init__"], [1118, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1126, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1128, 1, 1, "", "Conv1D"], [1129, 1, 1, "", "Conv1DTranspose"], [1130, 1, 1, "", "Conv2D"], [1131, 1, 1, "", "Conv2DTranspose"], [1132, 1, 1, "", "Conv3D"], [1133, 1, 1, "", "Conv3DTranspose"], [1134, 1, 1, "", "DepthwiseConv2D"], [1135, 1, 1, "", "Dropout"], [1136, 1, 1, "", "LSTM"], [1137, 1, 1, "", "Linear"], [1138, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1128, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1129, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1130, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1131, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1132, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1133, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1134, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1135, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1136, 2, 1, "", "__init__"], [1136, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1137, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1138, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1140, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1140, 2, 1, "", "__init__"], [1140, 2, 1, "", "build"], [1140, 3, 1, "", "build_mode"], [1140, 3, 1, "", "built"], [1140, 2, 1, "", "check_submod_rets"], [1140, 2, 1, "", "get_mod_key"], [1140, 2, 1, "", "mod_depth"], [1140, 2, 1, "", "mod_height"], [1140, 2, 1, "", "mod_with_top_mod_key_chain"], [1140, 2, 1, "", "save_weights"], [1140, 2, 1, "", "show_mod_in_top_mod"], [1140, 2, 1, "", "show_structure"], [1140, 2, 1, "", "show_v_in_top_v"], [1140, 2, 1, "", "sub_mods"], [1140, 2, 1, "", "track_submod_call_order"], [1140, 2, 1, "", "track_submod_rets"], [1140, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1142, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1142, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1144, 1, 1, "", "Adam"], [1145, 1, 1, "", "LAMB"], [1146, 1, 1, "", "LARS"], [1147, 1, 1, "", "Optimizer"], [1148, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1144, 2, 1, "", "__init__"], [1144, 2, 1, "", "set_state"], [1144, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1145, 2, 1, "", "__init__"], [1145, 2, 1, "", "set_state"], [1145, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1146, 2, 1, "", "__init__"], [1146, 2, 1, "", "set_state"], [1146, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1147, 2, 1, "", "__init__"], [1147, 2, 1, "", "set_state"], [1147, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1148, 2, 1, "", "__init__"], [1148, 2, 1, "", "set_state"], [1148, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1150, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1150, 2, 1, "", "__init__"]], "ivy.verbosity": [[1153, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 122, 130, 139, 156], "handler": [0, 139], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1100], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 156], "competit": 15, "do": [15, 127], "work": [15, 21], "The": [15, 19, 141, 156], "arrai": [15, 23, 26, 123, 126, 132, 141, 169, 174, 179, 184, 189, 194, 200, 211, 216, 224, 230, 241, 246, 254, 260, 265, 273, 284, 289, 294, 299, 311, 317, 328, 334, 339, 344, 349, 355, 377, 395, 404, 409, 414, 419, 424, 429, 434, 439, 444, 449, 454, 459, 464, 469, 474, 479, 484, 489, 494, 499, 504, 509, 514, 519, 524, 529, 534, 539, 544, 549, 554, 559, 564, 569, 574, 579, 584, 589, 594, 599, 604, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661, 666, 672, 677, 683, 688, 716, 762, 774, 790, 821, 832, 837, 840, 843, 846, 849, 852, 855, 859, 863, 866, 869, 872, 875, 879, 882, 885, 888, 891, 894, 897, 900, 904, 909, 914, 920, 925, 929, 933, 937, 941, 945, 950, 954, 960, 964, 968, 972, 976, 1003, 1027, 1032, 1037, 1042, 1047, 1052, 1058, 1062, 1066, 1070, 1074, 1078, 1082, 1086, 1091, 1096], "api": [15, 20, 122, 126, 133, 139, 141, 143, 144], "why": [16, 127], "unifi": [16, 141], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1100], "set": [18, 64, 111, 130, 1024], "up": 18, "clone": 18, "ivi": [18, 19, 122, 125, 127, 128, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 208, 209, 211, 212, 213, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 235, 236, 238, 239, 241, 242, 243, 244, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 299, 300, 301, 302, 306, 307, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323, 325, 326, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 355, 356, 357, 358, 377, 378, 379, 380, 394, 395, 396, 397, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 682, 683, 684, 685, 688, 689, 690, 691, 700, 701, 716, 717, 718, 719, 761, 762, 763, 764, 774, 775, 776, 777, 779, 780, 781, 783, 784, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 799, 800, 801, 803, 804, 805, 821, 822, 823, 824, 832, 833, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 855, 856, 857, 859, 860, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 900, 901, 904, 905, 906, 907, 909, 910, 911, 912, 914, 915, 916, 917, 920, 921, 922, 923, 925, 926, 927, 929, 930, 931, 933, 934, 935, 937, 938, 939, 941, 942, 943, 945, 946, 947, 948, 950, 951, 952, 954, 955, 956, 957, 960, 961, 962, 964, 965, 966, 968, 969, 970, 972, 973, 974, 976, 977, 978, 1003, 1004, 1005, 1006, 1010, 1011, 1014, 1015, 1016, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1074, 1075, 1076, 1078, 1079, 1080, 1082, 1083, 1084, 1086, 1087, 1088, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 142], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": [18, 137], "commit": [18, 19, 137], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "interact": 19, "contain": [19, 74, 79, 133, 142, 170, 172, 175, 177, 180, 182, 185, 187, 190, 192, 195, 197, 199, 201, 209, 213, 217, 219, 222, 225, 227, 231, 233, 236, 239, 242, 244, 247, 249, 252, 255, 257, 259, 261, 264, 266, 269, 272, 274, 285, 287, 290, 292, 295, 297, 300, 302, 307, 312, 314, 318, 320, 323, 326, 329, 331, 335, 337, 340, 342, 345, 347, 350, 352, 356, 358, 378, 380, 394, 396, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 612, 614, 617, 619, 622, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 664, 667, 669, 671, 673, 676, 678, 682, 684, 689, 691, 700, 717, 719, 761, 763, 775, 777, 779, 781, 784, 786, 788, 791, 793, 795, 797, 799, 801, 803, 805, 822, 824, 833, 835, 856, 905, 907, 910, 912, 915, 917, 921, 923, 926, 930, 934, 938, 942, 946, 948, 951, 955, 957, 961, 965, 969, 973, 977, 1004, 1006, 1011, 1014, 1016, 1026, 1028, 1031, 1033, 1036, 1038, 1041, 1043, 1048, 1050, 1053, 1055, 1059, 1063, 1067, 1071, 1075, 1079, 1083, 1087, 1092, 1094, 1097, 1099], "run": 19, "test": [19, 126, 127], "local": 19, "open": 20, "task": 20, "function": [20, 123, 127, 129, 131, 133, 134, 135, 139, 144, 156], "format": [20, 137], "frontend": [20, 128, 144], "build": [21, 139], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 156], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 37, 83, 127, 134, 142, 156, 276, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "class": [22, 141, 1112], "activ": [24, 75, 167, 1113], "arraywithactiv": 25, "convers": 29, "args_to_contain": 30, "args_to_ivi": 31, "args_to_n": 32, "to_ivi": 33, "to_n": 34, "creation": [35, 81, 206], "arraywithcr": 36, "type": [37, 83, 129, 134, 156, 276], "arraywithdatatyp": 38, "devic": [39, 85, 123, 135, 369], "arraywithdevic": 40, "elementwis": [41, 87, 402], "arraywithelementwis": 42, "gener": [43, 89, 127, 686], "arraywithgener": 44, "gradient": [45, 91, 771], "arraywithgradi": 46, "imag": [47, 93], "arraywithimag": 48, "layer": [49, 95, 813, 1127], "arraywithlay": 50, "linear": [51, 97, 826, 830, 1137], "algebra": [51, 97, 830], "arraywithlinearalgebra": 52, "loss": [53, 99, 902], "arraywithloss": 54, "manipul": [55, 101, 918], "arraywithmanipul": 56, "norm": [57, 103, 1001, 1141], "arraywithnorm": 58, "random": [59, 105, 1007], "arraywithrandom": 60, "search": [61, 107, 1019, 1107], "arraywithsearch": 62, "argmax": [63, 109, 1020, 1108], "arraywithset": 65, "sort": [66, 113, 1045, 1051, 1052, 1053, 1054], "arraywithsort": 67, "statist": [68, 115, 1056], "arraywithstatist": 69, "util": [70, 117, 1089], "arraywithutil": 71, "wrap": [72, 119, 131], "add_ivy_array_instance_method": 73, "containerwithactiv": 76, "base": 77, "containerbas": 78, "containerwithcr": 82, "containerwithdatatyp": 84, "containerwithdevic": 86, "containerwithelementwis": 88, "containerwithgener": 90, "containerwithgradi": 92, "containerwithimag": 94, "containerwithlay": 96, "containerwithlinearalgebra": 98, "containerwithloss": 100, "containerwithmanipul": 102, "containerwithnorm": 104, "containerwithrandom": 106, "containerwithsearch": 108, "static_argmax": 110, "containerwithset": 112, "containerwithsort": 114, "containerwithstatist": 116, "containerwithutil": 118, "add_ivy_container_instance_method": 120, "deep": 121, "dive": 121, "navig": 122, "code": 122, "categor": 122, "submodul": 122, "design": [122, 138, 1100], "argument": [123, 134, 135, 136], "exampl": [123, 125, 128, 137], "out": [123, 136], "dtype": [123, 310, 311, 312, 313], "number": 123, "oper": [123, 141, 156], "integ": 123, "sequenc": 123, "nestabl": [123, 129, 133], "docstr": [124, 125], "tan": [125, 675, 677, 678, 679], "roll": [125, 953, 954, 955, 956], "add": [125, 418, 419, 420, 421], "hypothesi": 127, "import": 127, "strategi": 127, "integr": 127, "we": 127, "need": 127, "helper": 127, "how": 127, "write": 127, "effect": 127, "bonu": 127, "extend": 127, "featur": 127, "self": 127, "consist": 127, "explicit": 127, "test_array_funct": 127, "introduct": 128, "primari": 129, "composit": 129, "mix": 129, "standalon": 129, "conveni": 129, "nativ": 132, "handl": 132, "instanc": [133, 141], "method": [133, 141, 142], "static": 133, "special": 133, "modul": [134, 135, 143, 1139, 1140], "other": [134, 135], "unsupport": 134, "inplac": 136, "updat": 136, "copi": 136, "lint": 137, "check": [137, 156], "hook": 137, "automat": 137, "reformat": 137, "befor": 137, "block": 139, "framework": [139, 140, 1112], "graph": [139, 144], "compil": [139, 144, 203, 204], "monkei": 141, "patch": 141, "construct": 142, "represent": 142, "recurs": 142, "built": 142, "ins": 142, "access": 142, "save": 142, "load": 142, "comparison": 142, "custom": [142, 156], "case": 142, "compartment": 142, "configur": 142, "network": [142, 144], "weight": 142, "state": [143, 156], "initi": [143, 1118], "optim": [143, 1143, 1147], "transpil": 144, "role": 144, "convert": [144, 1116], "model": [144, 151, 156], "builder": 146, "ecosystem": 147, "gym": [148, 155], "mech": 149, "memori": [150, 155], "robot": [152, 155], "vision": [153, 155], "extens": [154, 1100], "appli": 155, "librari": 155, "mechan": 155, "faq": 156, "maintain": 156, "version": 156, "dynam": 156, "size": 156, "shape": [156, 751, 1024, 1025, 1029, 1030, 1034, 1040, 1044], "control": 156, "flow": 156, "auto": 156, "differenti": 156, "replica": 156, "parallel": 156, "support": 156, "altern": 156, "structur": 156, "func": 157, "wrapper": 157, "handle_nest": 158, "handle_out_argu": 159, "infer_devic": 160, "infer_dtyp": 161, "inputs_to_ivy_arrai": 162, "inputs_to_native_arrai": 163, "outputs_to_ivy_arrai": 164, "to_native_arrays_and_back": 165, "gelu": [168, 169, 170, 171, 1115], "static_gelu": 172, "leaky_relu": [173, 174, 175, 176], "static_leaky_relu": 177, "relu": [178, 179, 180, 181], "static_relu": 182, "sigmoid": [183, 184, 185, 186], "static_sigmoid": 187, "softmax": [188, 189, 190, 191], "static_softmax": 192, "softplu": [193, 194, 195, 196], "static_softplu": 197, "tanh": [198, 200, 201, 202, 680], "static_tanh": 199, "constant": 205, "note": [206, 223, 226], "arang": [207, 208], "static_arang": 209, "asarrai": [210, 211, 212], "static_asarrai": 213, "empti": 214, "empty_lik": [215, 216, 217, 218], "static_empty_lik": 219, "ey": [220, 221], "static_ey": 222, "from_dlpack": [223, 224, 225, 226], "static_from_dlpack": 227, "full": 228, "full_lik": [229, 230, 231, 232], "static_full_lik": 233, "linspac": [234, 235], "static_linspac": 236, "logspac": [237, 238], "static_logspac": 239, "meshgrid": [240, 241, 242, 243], "static_meshgrid": 244, "native_arrai": [245, 246, 247, 248], "static_native_arrai": 249, "ones": [250, 251], "static_on": 252, "ones_lik": [253, 254, 255, 256], "static_ones_lik": 257, "tril": [258, 260, 261, 262], "static_tril": 259, "triu": [263, 265, 266, 267], "static_triu": 264, "zero": [268, 270, 1126], "static_zero": 269, "zeros_lik": [271, 273, 274, 275], "static_zeros_lik": 272, "as_ivy_dtyp": 281, "as_native_dtyp": 282, "astyp": [283, 284, 285, 286], "static_astyp": 287, "broadcast_arrai": [288, 289, 290, 291], "static_broadcast_arrai": 292, "broadcast_to": [293, 294, 295, 296], "static_broadcast_to": 297, "can_cast": [298, 299, 300, 301], "static_can_cast": 302, "closest_valid_dtyp": 303, "default_dtyp": 304, "default_float_dtyp": [305, 306], "static_default_float_dtyp": 307, "default_int_dtyp": 308, "default_uint_dtyp": 309, "static_dtyp": 314, "dtype_bit": 315, "finfo": [316, 317, 318, 319], "static_finfo": 320, "function_supported_dtyp": [321, 322], "static_function_supported_dtyp": 323, "function_unsupported_dtyp": [324, 325], "static_function_unsupported_dtyp": 326, "iinfo": [327, 328, 329, 330], "static_iinfo": 331, "invalid_dtyp": 332, "is_bool_dtyp": [333, 334, 335, 336], "static_is_bool_dtyp": 337, "is_float_dtyp": [338, 339, 340, 341], "static_is_float_dtyp": 342, "is_int_dtyp": [343, 344, 345, 346], "static_is_int_dtyp": 347, "is_uint_dtyp": [348, 349, 350, 351], "static_is_uint_dtyp": 352, "promote_typ": 353, "result_typ": [354, 355, 356, 357], "static_result_typ": 358, "set_default_dtyp": 359, "set_default_float_dtyp": 360, "set_default_int_dtyp": 361, "set_default_uint_dtyp": 362, "type_promote_arrai": 363, "unset_default_dtyp": 364, "unset_default_float_dtyp": 365, "unset_default_int_dtyp": 366, "unset_default_uint_dtyp": 367, "valid_dtyp": 368, "profil": 371, "as_ivy_dev": 372, "as_native_dev": 373, "clear_mem_on_dev": 374, "default_devic": 375, "dev": [376, 377, 378, 379], "static_dev": 380, "dev_util": 381, "get_all_ivy_arrays_on_dev": 382, "gpu_is_avail": 383, "num_cpu_cor": 384, "num_gpu": 385, "num_ivy_arrays_on_dev": 386, "percent_used_mem_on_dev": 387, "print_all_ivy_arrays_on_dev": 388, "set_default_devic": 389, "set_split_factor": 390, "split_factor": 391, "split_func_cal": 392, "to_devic": [393, 395, 396, 397], "static_to_devic": 394, "total_mem_on_dev": 398, "tpu_is_avail": 399, "unset_default_devic": 400, "used_mem_on_dev": 401, "ab": [403, 404, 405, 406], "static_ab": 407, "aco": [408, 409, 410, 411], "static_aco": 412, "acosh": [413, 414, 415, 416], "static_acosh": 417, "static_add": 422, "asin": [423, 424, 425, 426], "static_asin": 427, "asinh": [428, 429, 430, 431], "static_asinh": 432, "atan": [433, 434, 435, 436], "static_atan": 437, "atan2": [438, 439, 440, 441], "static_atan2": 442, "atanh": [443, 444, 445, 446], "static_atanh": 447, "bitwise_and": [448, 449, 450, 451], "static_bitwise_and": 452, "bitwise_invert": [453, 454, 455, 456], "static_bitwise_invert": 457, "bitwise_left_shift": [458, 459, 460, 461], "static_bitwise_left_shift": 462, "bitwise_or": [463, 464, 465, 466], "static_bitwise_or": 467, "bitwise_right_shift": [468, 469, 470, 471], "static_bitwise_right_shift": 472, "bitwise_xor": [473, 474, 475, 476], "static_bitwise_xor": 477, "ceil": [478, 479, 480, 481], "static_ceil": 482, "co": [483, 484, 485, 486], "static_co": 487, "cosh": [488, 489, 490, 491], "static_cosh": 492, "divid": [493, 494, 495, 496], "static_divid": 497, "equal": [498, 499, 500, 501], "static_equ": 502, "erf": [503, 504, 505, 506], "static_erf": 507, "exp": [508, 509, 510, 511], "static_exp": 512, "expm1": [513, 514, 515, 516], "static_expm1": 517, "floor": [518, 519, 520, 521], "static_floor": 522, "floor_divid": [523, 524, 525, 526], "static_floor_divid": 527, "greater": [528, 529, 530, 531], "static_great": 532, "greater_equ": [533, 534, 535, 536], "static_greater_equ": 537, "isfinit": [538, 539, 540, 541], "static_isfinit": 542, "isinf": [543, 544, 545, 546], "static_isinf": 547, "isnan": [548, 549, 550, 551], "static_isnan": 552, "less": [553, 554, 555, 556], "static_less": 557, "less_equ": [558, 559, 560, 561], "static_less_equ": 562, "log": [563, 564, 565, 566], "static_log": 567, "log10": [568, 569, 570, 571], "static_log10": 572, "log1p": [573, 574, 575, 576], "static_log1p": 577, "log2": [578, 579, 580, 581], "static_log2": 582, "logaddexp": [583, 584, 585, 586], "static_logaddexp": 587, "logical_and": [588, 589, 590, 591], "static_logical_and": 592, "logical_not": [593, 594, 595, 596], "static_logical_not": 597, "logical_or": [598, 599, 600, 601], "static_logical_or": 602, "logical_xor": [603, 604, 605, 606], "static_logical_xor": 607, "maximum": 608, "minimum": 609, "multipli": [610, 611, 612, 613], "static_multipli": 614, "neg": [615, 616, 617, 618], "static_neg": 619, "not_equ": [620, 621, 622, 623], "static_not_equ": 624, "posit": [625, 626, 627, 628], "static_posit": 629, "pow": [630, 631, 632, 633], "static_pow": 634, "remaind": [635, 636, 637, 638], "static_remaind": 639, "round": [640, 641, 642, 643], "static_round": 644, "sign": [645, 646, 647, 648], "static_sign": 649, "sin": [650, 651, 652, 653], "static_sin": 654, "sinh": [655, 656, 657, 658], "static_sinh": 659, "sqrt": [660, 661, 662, 663], "static_sqrt": 664, "squar": [665, 666, 667, 668], "static_squar": 669, "subtract": [670, 672, 673, 674], "static_subtract": 671, "static_tan": 676, "trunc": [681, 683, 684, 685], "static_trunc": 682, "all_equ": [687, 688, 689, 690], "static_all_equ": 691, "arg_info": 692, "arg_nam": 693, "array_equ": 694, "arrays_equ": 695, "assert_supports_inplac": 696, "cache_fn": 697, "clip_matrix_norm": 698, "clip_vector_norm": [699, 700, 701], "container_typ": 702, "copy_arrai": 703, "cumprod": 704, "cumsum": 705, "current_backend_str": 706, "default": 707, "einops_rearrang": 708, "einops_reduc": 709, "einops_repeat": 710, "exist": 711, "floormod": 712, "fourier_encod": 713, "gather": 714, "gather_nd": [715, 716, 717, 718], "static_gather_nd": 719, "get_all_arrays_in_memori": 720, "get_min_bas": 721, "get_min_denomin": 722, "get_nestable_mod": 723, "get_num_dim": 724, "get_referrers_recurs": 725, "has_nan": 726, "indices_wher": 727, "inplace_arrays_support": 728, "inplace_decr": 729, "inplace_incr": 730, "inplace_upd": 731, "inplace_variables_support": 732, "is_arrai": 733, "is_ivy_arrai": 734, "is_ivy_contain": 735, "is_native_arrai": 736, "match_kwarg": 737, "multiprocess": 738, "num_arrays_in_memori": 739, "one_hot": 740, "print_all_arrays_in_memori": 741, "queue_timeout": 742, "scatter_flat": 743, "scatter_nd": 744, "set_min_bas": 745, "set_min_denomin": 746, "set_nestable_mod": 747, "set_queue_timeout": 748, "set_shape_array_mod": 749, "set_tmp_dir": 750, "shape_array_mod": 752, "stable_divid": 753, "stable_pow": 754, "supports_inplac": 755, "tmp_dir": 756, "to_ivy_shap": 757, "to_list": 758, "to_native_shap": 759, "to_numpi": [760, 762, 763, 764], "static_to_numpi": 761, "to_scalar": 765, "try_else_non": 766, "unset_nestable_mod": 767, "unset_shape_array_mod": 768, "unstack": 769, "value_is_nan": 770, "adam_step": [773, 774, 775, 776], "static_adam_step": 777, "adam_upd": [778, 779, 780], "static_adam_upd": 781, "execute_with_gradi": [782, 783], "static_execute_with_gradi": 784, "gradient_descent_upd": [785, 786, 787], "static_gradient_descent_upd": 788, "is_vari": [789, 790, 791, 792], "static_is_vari": 793, "lamb_upd": [794, 795, 796], "static_lamb_upd": 797, "lars_upd": [798, 799, 800], "static_lars_upd": 801, "optimizer_upd": [802, 803, 804], "static_optimizer_upd": 805, "set_with_grad": 806, "stop_gradi": 807, "to_container_and_back": 808, "unset_with_grad": 809, "variabl": 810, "variable_data": 811, "with_grad": 812, "conv1d": [814, 1128], "conv1d_transpos": 815, "conv2d": [816, 1130], "conv2d_transpos": 817, "conv3d": [818, 1132], "conv3d_transpos": 819, "depthwise_conv2d": [820, 821, 822, 823], "static_depthwise_conv2d": 824, "dropout": [825, 1135], "lstm_updat": 827, "multi_head_attent": 828, "scaled_dot_product_attent": 829, "choleski": [831, 832, 833, 834], "static_choleski": 835, "cross": [836, 837, 838], "det": [839, 840, 841], "diagon": [842, 843, 844], "eigh": [845, 846, 847], "eigvalsh": [848, 849, 850], "inv": [851, 852, 853], "matmul": [854, 855, 856, 857], "matrix_norm": [858, 859, 860], "matrix_pow": 861, "matrix_rank": [862, 863, 864], "matrix_transpos": [865, 866, 867], "outer": [868, 869, 870], "pinv": [871, 872, 873], "qr": [874, 875, 876], "slogdet": 877, "solv": [878, 879, 880], "svd": [881, 882, 883], "svdval": [884, 885, 886], "tensordot": [887, 888, 889], "trace": [890, 891, 892], "vecdot": [893, 894, 895], "vector_norm": [896, 897, 898], "vector_to_skew_symmetric_matrix": [899, 900, 901], "binary_cross_entropi": [903, 904, 905, 906], "static_binary_cross_entropi": 907, "cross_entropi": [908, 909, 910, 911], "static_cross_entropi": 912, "sparse_cross_entropi": [913, 914, 915, 916], "static_sparse_cross_entropi": 917, "clip": [919, 920, 921, 922], "static_clip": 923, "concat": [924, 925, 926, 927], "constant_pad": [928, 929, 930, 931], "expand_dim": [932, 933, 934, 935], "flip": [936, 937, 938, 939], "permute_dim": [940, 941, 942, 943], "repeat": [944, 945, 946, 947], "static_repeat": 948, "reshap": [949, 950, 951, 952], "static_rol": 957, "split": 958, "squeez": [959, 960, 961, 962], "stack": [963, 964, 965, 966], "swapax": [967, 968, 969, 970], "tile": [971, 972, 973, 974], "zero_pad": [975, 976, 977, 978], "meta": 979, "fomaml_step": 980, "maml_step": 981, "reptile_step": 982, "nest": 983, "all_nested_indic": 984, "copy_nest": 985, "index_nest": 986, "insert_into_nest_at_index": 987, "insert_into_nest_at_indic": 988, "map": 989, "map_nest_at_index": 990, "map_nest_at_indic": 991, "multi_index_nest": 992, "nested_ani": 993, "nested_indices_wher": 994, "nested_map": 995, "nested_multi_map": 996, "prune_nest_at_index": 997, "prune_nest_at_indic": 998, "set_nest_at_index": 999, "set_nest_at_indic": 1000, "layer_norm": [1002, 1003, 1004, 1005], "static_layer_norm": 1006, "multinomi": 1008, "randint": [1009, 1010], "static_randint": 1011, "random_norm": 1012, "random_uniform": [1013, 1014, 1015], "static_random_uniform": 1016, "seed": 1017, "shuffl": 1018, "argmin": [1021, 1109], "nonzero": [1022, 1110], "where": [1023, 1111], "depend": [1024, 1025, 1029, 1030, 1034, 1040, 1044], "output": [1024, 1025, 1029, 1030, 1034, 1040, 1044], "unique_al": [1025, 1027, 1028, 1029], "static_unique_al": 1026, "unique_count": [1030, 1032, 1033, 1034], "static_unique_count": 1031, "unique_invers": [1035, 1037, 1038, 1039], "static_unique_invers": 1036, "unique_valu": [1040, 1042, 1043, 1044], "static_unique_valu": 1041, "argsort": [1046, 1047, 1048, 1049], "static_argsort": 1050, "static_sort": 1055, "einsum": [1057, 1058, 1059, 1060], "max": [1061, 1062, 1063, 1064], "mean": [1065, 1066, 1067, 1068], "min": [1069, 1070, 1071, 1072], "prod": [1073, 1074, 1075, 1076], "std": [1077, 1078, 1079, 1080], "sum": [1081, 1082, 1083, 1084], "var": [1085, 1086, 1087, 1088], "all": [1090, 1091, 1092, 1093], "static_al": 1094, "ani": [1095, 1096, 1097, 1098], "static_ani": 1099, "content": 1100, "overview": 1100, "quick": 1100, "start": 1100, "roadmap": [1100, 1106], "citat": 1100, "inspect": 1103, "add_array_spec": 1104, "fn_array_spec": 1105, "geglu": 1114, "to_ivy_modul": 1117, "firstlayersiren": 1120, "glorotuniform": 1121, "Ones": 1123, "siren": 1124, "conv1dtranspos": 1129, "conv2dtranspos": 1131, "conv3dtranspos": 1133, "depthwiseconv2d": 1134, "lstm": 1136, "multiheadattent": 1138, "layernorm": 1142, "adam": 1144, "lamb": 1145, "lar": 1146, "sgd": 1148, "sequenti": [1149, 1150], "verbos": 1152, "cprint": 1153}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})